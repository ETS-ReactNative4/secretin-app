{"version":3,"sources":["utils/secretin.js","slices/AppUISlice.js","selectors/MetadataSelectors.js","components/utilities/Form.js","components/utilities/Icon.js","components/utilities/Button.js","components/utilities/Dropdown.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Modal.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/User.js","models/Secret.js","slices/MetadataSlice.js","slices/ShowSecretUISlice.js","slices/EditSecretUISlice.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/secrets/SecretEditableTitle.js","components/secrets/SecretShowHeader.js","components/secrets/SecretHistoryButton.js","components/secrets/SecretHistory.js","components/utilities/Select.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/utilities/Flash.js","components/utilities/Tabs.js","components/secrets/SecretShow.js","slices/NewSecretUISlice.js","slices/OptionsSlice.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","slices/ImportSlice.js","stores/store.js","utils/URLHelper.js","components/users/UserAvatars.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["api","process","window","URLSearchParams","location","search","get","secretin","Secretin","SecretinBrowserAdapter","API","Server","Statuses","Errors","DecryptMetadataStatus","EndDecryptMetadataStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","UsernameAlreadyExistsError","UserNotFoundError","InvalidPasswordError","NeedTOTPTokenError","_loading","state","loading","_endLoading","AppUISlice","createSlice","name","initialState","savedUsername","getSavedUsername","connected","online","errors","currentUser","status","showShortpass","canITryShortLogin","reducers","endLoading","createSecret","createSecretSuccess","createSecretFailure","connectionChange","action","payload","connection","disconnectUserSuccess","createUserSuccess","createUserFailure","error","disableShortLoginSuccess","onLoginUserProgress","loginUserSuccess","loginUserFailure","addSecretToFolderFailure","removeSecretFromCurrentFolderFailure","hideShortpass","actions","disconnectUser","dispatch","disconnect","createUser","username","password","confirmPassword","setTimeout","newUser","then","catch","loginUser","token","console","time","loginUserProgress","options","totp","shortLogin","metadata","metadatas","getState","constructor","prevStatus","AppUI","total","Math","round","timeEnd","getAllSecrets","createSelector","Metadata","Object","values","filter","secret","type","getMySecrets","allSecrets","user","users","find","rights","getSecretsInFolder","folderId","userId","secretUser","id","folders","ROOT","keys","includes","getSharedSecrets","length","Form","props","uniqueId","onSubmit","bind","e","preventDefault","this","disabled","className","classNames","autoComplete","style","display","children","Component","defaultProps","SIZES","small","base","Icon","size","width","height","xlinkHref","Button","handleClick","onClick","buttonStyle","to","title","form","tabIndex","Dropdown","MenuItem","Input","handleChange","onTogglePasswordShow","autoCompleteSelected","showPassword","autoSelect","input","select","autoFocus","focus","setState","event","onChange","value","target","label","placeholder","readOnly","inputProps","autoCompleteFromList","filteredAutoCompleteList","elem","toLowerCase","htmlFor","ref","open","Boolean","Menu","slice","map","onSelect","handleAutoCompleteSelect","debounce","UserConnectForm","toggleSignup","signup","AppUIActions","checked","isOnline","db","src","alt","shortLoginExpired","message","info","isEmpty","connect","Modal","centered","backdropClassName","show","onHide","closeOnBackdropClick","onClose","undefined","Body","Header","Footer","Confirm","handleAccept","handleCancel","promise","Promise","resolve","reject","accept","cancel","used","text","cancelLabel","acceptLabel","confirm","confirmProps","comfirmElement","document","body","appendChild","createElement","component","ReactDOM","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","shortpass","shortlogin","deactivateShortLogin","shortLoginActivationDate","getShortLoginActivationDate","moment","add","fromNow","UserConnect","isBefore","SidebarMenuLink","activeClassName","exportDb","filename","element","setAttribute","encodeURIComponent","click","removeChild","download","format","Sidebar","useDispatch","handleLogout","useCallback","useSelector","exact","SecretFieldRecord","raw","uuid","v4","date","content","rawData","SecretDataRecord","fields","params","push","getRaw","defaultFields","reduce","record","field","addNewField","Utils","PasswordGenerator","generatePassword","entries","output","key","createFromRaw","DEFAULT_FIELDS","UserRights","userRightLabel","accessRights","Error","User","forEach","Secret","lastModifiedBy","lastModifiedAt","data","_user","accessRightForUser","FriendNotFoundError","_rebuildMetadata","buildSecrets","friendList","Set","metadatum","knownFriendList","Array","from","sort","MetadataSlice","loadMetadataSuccess","deleteSecretSuccess","deleteSecretFailure","addSecretToFolderSuccess","removeSecretFromCurrentFolderSuccess","createSecretUserRightsSuccess","updateSecretSuccess","renameSecretSuccess","updateSecretUserRightsSuccess","secretMetadataIndex","secretId","findIndex","getIndex","userToUpdate","merge","deleteSecretUserRightsSuccess","secretMetadata","getById","userToFilter","extraReducers","loadMetadata","refreshUser","isFolder","folder","addFolder","addSecret","updateSecret","a","updateSecretStart","editSecret","getHistory","history","log","updateSecretFailure","renameSecret","newTitle","deleteSecret","createSecretUserRights","shareSecret","createSecretUserRightsFailure","unknown","updateSecretUserRights","updateSecretUserRightsFailure","deleteSecretUserRights","unshareSecret","deleteSecretUserRightsFailure","addSecretToFolder","removeSecretFromCurrentFolder","currentFolderId","removeSecretFromFolder","_handleError","isUpdating","ShowSecretUISlice","tab","historyDepth","showModal","showSecretSuccess","hideModal","changeTab","historyShowOlder","historyShowNewer","rawUser","showSecret","getSecret","secretWithData","EditSecretUISlice","isEditing","updateData","changeField","fieldIndex","fieldToUpdate","SecretField","onCopy","onGenerate","copyToClipboard","debug","isNew","href","rel","canUpdate","SecretFields","SecretEdit","ownProps","EditSecretUI","bindActionCreators","EditSecretUIActions","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","SecretShowHeader","icon","canEditTitle","onEditTitle","SecretHistoryButton","side","SecretHistory","historyCount","modifiedAt","isLatest","isOldest","color","backgroundColor","borderColor","fontWeight","ShowSecretUI","ShowSecretUIActions","Select","getValue","option","noop","WindowsSecretEdit","reverse","COLORS","getInitials","fullName","names","split","toUpperCase","substring","UserAvatar","colorIndex","sum","letter","charCodeAt","getAvatarColor","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","iconOnly","SecretUserListNew","on","MetadataActions","isValid","SecretUserList","canShare","canBeSharedBy","cantShare","isCurrentUser","Flash","Tabs","animation","Tab","BootstrapTab","SecretShow","handleChangeTab","showSecretActions","metadataActions","currentUserId","canBeUpdatedBy","shown","getIcon","activeKey","eventKey","getInitialState","createWithDefaultFields","NewSecretUISlice","changeTitle","OptionsSlice","showQRCode","showShortLogin","showRescueCodes","newPass","newPass1","newPass2","rescueCodes","_activateTotp","_activateShortLogin","_toggleTotp","_toggleShortLogin","activateTotpFailure","hideQRCode","hideShortLogin","activateTotpSuccess","deactivateTotpSuccess","deactivateShortLoginSuccess","activateShortLoginSuccess","changeDelaySuccess","timeToClose","changeNewPass1","changeNewPass2","showChangePassword","hideChangePassword","_changePassword","changePasswordSuccess","changePasswordFailure","showRescueCodesSuccess","hideRescueCodes","deactivateTotp","activateTotp","seed","testTotp","b32","err","activateShortLogin","changePassword","toggleTotp","getRescueCodes","toggleShortLogin","toggleAutoLogout","changeTimeToClose","editOption","InternalProgressBar","progressFunction","func","child","hashedParent","strings","querySelectorAll","j","textContent","hashedTitle","rHashedTitle","defaultProgress","parseGroup","group","progress","entryPromises","call","childEntry","update","childGroup","getElementsByTagName","addAndParseGroup","count","nb","groups","i","importers","keepass","parse","xml","mandatoryField","parser","DOMParser","xmlDoc","parseFromString","root","currentProgress","detect","file","isKeepass","mandatoryFields","importDb","isSecretin","JSON","ImportSlice","importType","importing","importStatus","importTotal","success","_importSecrets","detectTypeFailure","detectTypeSuccess","importSecretsProgress","importSecretsSuccess","importSecretsFailure","defaultStore","changeMandatoryField","detectType","reader","FileReader","readAsText","onload","result","findKey","importer","importSecrets","configureStore","reducer","AppUIReducer","EditSecretUIReducer","MetadataReducer","NewSecretUI","NewSecretUIReducer","ShowSecretUIReducer","Options","OptionsReducer","Import","ImportReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","buildSecretURL","basePath","urljoin","join","UserAvatars","SecretListItemOptions","handleShow","handleShare","handleMoveToParent","parentFolderId","handleDelete","pullRight","Toggle","canBeDeleted","divider","m","itemTarget","drop","monitor","getItem","store","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","link","SecretListItemFolderTarget","DropTarget","dropTarget","SecretListItem","Title","SecretListBreadcrumb","withTitle","breadcrumb","memo","links","unshift","SecretListFolderInfo","colSpan","SecretListContent","allFolders","fuzzyRegexp","RegExp","searchQuery","c","escapeRegExp","filteredSecrets","secrets","test","filteredFolders","sortedFolderRows","getUser","filtered","set","currentFolder","currentFolderDetails","fold","sortedFolders","b","localeCompare","rowType","rowData","flat","renderFilteredRow","index","renderStandardRow","getRowHeight","rowHeight","rowRenderer","rowCount","SecretListRefresh","SecretNew","newSecretActions","required","isLoading","NewSecretUIActions","SecretListNew","canWrite","SecretListSearch","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","_state","SecretList","onSearch","showAll","showMine","showShared","endDecrypt","DragDropContext","HTML5Backend","DragLayer","getFolders","defaultMemoize","path","previousVal","currentVal","equal","SecretListContainer","match","mySecrets","sharedSecrets","folderSecrets","f","ShortLoginShow","nextProps","OptionsActions","QRCodeShow","generateSeed","replace","maxLength","getFile","codes","code","Blob","RescueCodesShow","URL","createObjectURL","ChangePasswordShow","handleChangePassword","Checkbox","checboxClassName","OptionsContainer","onChangeTimeToClose","parseInt","toString","min","max","step","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","ImportMandatoryField","ImportersMandatoryFields","inputs","ImportActions","ImportContainer","handleFileChoosen","handleStartParsing","importActions","nextState","ImportMandatoryFields","Layout","App","disconnectingEvent","onAppFocus","onAppBlur","handleConnectionChange","addEventListener","removeEventListener","clearTimeout","delay","shortCommit","SECRETIN_APP_COMMIT","substr","secretinAppVersion","basename","version","hostname","rootEl","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd8602b9.chunk.js","sourcesContent":["import Secretin from 'secretin';\nimport SecretinBrowserAdapter from 'secretin/dist/adapters/browser.umd';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3000';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import secretin, { Statuses, Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\n// Helpers because we're often doing these small state updates\n\nconst _loading = state => {\n  state.loading = true;\n};\nconst _endLoading = state => {\n  state.loading = false;\n};\n\nexport const AppUISlice = createSlice({\n  name: 'AppUI',\n  initialState: {\n    savedUsername: secretin.getSavedUsername(),\n    loading: false,\n    connected: false,\n    online: true,\n    errors: {},\n    currentUser: null,\n    status: null,\n    showShortpass: secretin.canITryShortLogin(),\n  },\n  reducers: {\n    loading: _loading,\n    endLoading: _endLoading,\n    createSecret: _loading,\n    createSecretSuccess: _endLoading,\n    createSecretFailure: _endLoading,\n    connectionChange: (state, action) => {\n      state.online = action.payload.connection === 'online';\n    },\n    disconnectUserSuccess: state => {\n      state.savedUsername = secretin.getSavedUsername();\n      state.showShortpass = secretin.canITryShortLogin();\n      state.loading = false;\n      state.connected = false;\n      state.errors = {};\n      state.currentUser = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.currentUser = action.payload.currentUser;\n    },\n    createUserFailure: (state, action) => {\n      state.loading = false;\n      state.connected = false;\n      state.errors = action.payload.error;\n      state.status = null;\n    },\n    disableShortLoginSuccess: _endLoading,\n    onLoginUserProgress: (state, action) => {\n      const { status } = action.payload;\n      if (status) state.status = { ...status };\n    },\n    loginUserSuccess: (state, action) => {\n      const { currentUser } = action.payload;\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.status = null;\n      state.currentUser = currentUser;\n    },\n    loginUserFailure: (state, action) => {\n      const { error } = action.payload;\n      state.loading = false;\n      state.connected = false;\n      state.errors = error;\n      state.status = null;\n    },\n    addSecretToFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    removeSecretFromCurrentFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    hideShortpass: state => {\n      state.showShortpass = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loading,\n  endLoading,\n  createSecret,\n  createSecretSuccess,\n  createSecretFailure,\n  disconnectUserSuccess,\n  connectionChange,\n  createUserSuccess,\n  createUserFailure,\n  disableShortLoginSuccess,\n  onLoginUserProgress,\n  loginUserSuccess,\n  loginUserFailure,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n  hideShortpass,\n} = AppUISlice.actions;\n\nexport const disconnectUser = () => dispatch => {\n  secretin.currentUser.disconnect();\n  dispatch(disconnectUserSuccess());\n};\n\nexport const createUser = ({\n  username,\n  password,\n  confirmPassword,\n}) => dispatch => {\n  dispatch(loading());\n  if (password !== confirmPassword) {\n    setTimeout(\n      () =>\n        dispatch(\n          createUserFailure({\n            error: { confirmPassword: 'Passwords mismatch' },\n          })\n        ),\n      100\n    );\n  } else {\n    secretin\n      .newUser(username, password)\n      .then(currentUser => dispatch(createUserSuccess({ currentUser })))\n      .catch(error => {\n        if (error instanceof UsernameAlreadyExistsError) {\n          return dispatch(\n            createUserFailure({\n              error: { username: 'User already exists' },\n            })\n          );\n        }\n        throw error;\n      });\n  }\n};\n\nexport const loginUser = ({ username, password, token }) => dispatch => {\n  console.time('decrypt');\n  dispatch(loading());\n  secretin\n    .loginUser(\n      username,\n      password,\n      token,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser =>\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      if (error instanceof UserNotFoundError) {\n        return dispatch(\n          loginUserFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      } else if (error instanceof InvalidPasswordError) {\n        if (token) {\n          return dispatch(\n            loginUserFailure({\n              error: {\n                totp: 'Token',\n                password: 'Invalid password',\n                token: 'or invalid token',\n              },\n            })\n          );\n        }\n        return dispatch(\n          loginUserFailure({\n            error: { password: 'Invalid password' },\n          })\n        );\n      } else if (error instanceof NeedTOTPTokenError) {\n        return dispatch(\n          loginUserFailure({\n            error: { totp: 'Token' },\n          })\n        );\n      }\n      throw error;\n    });\n};\n\nexport const loginUserProgress = status => (dispatch, getState) => {\n  const currentUser = secretin.currentUser;\n  switch (status.constructor) {\n    case DecryptMetadataCacheStatus:\n    case DecryptMetadataStatus:\n    case DecryptUserOptionsStatus: {\n      const prevStatus = getState().AppUI.status;\n      if (prevStatus) {\n        const { state, total } = prevStatus;\n        if (\n          state &&\n          total &&\n          Math.round((status.state / status.total) * 100) ===\n            Math.round((state / total) * 100)\n        ) {\n          return; // Progress % did not change, prevent dispatch\n        }\n      }\n      return dispatch(onLoginUserProgress({ status }));\n    }\n    case EndDecryptMetadataStatus:\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n      console.timeEnd('decrypt');\n      return dispatch(onLoginUserProgress({ status: null }));\n    default:\n      return;\n  }\n};\n\nexport const shortLogin = ({ shortpass }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .shortLogin(\n      shortpass,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser => {\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n    })\n    .catch(() => {\n      dispatch(\n        loginUserFailure({\n          error: { shortlogin: 'Expired shortpass' },\n        })\n      );\n      setTimeout(() => {\n        dispatch(hideShortpass());\n      }, 1000);\n    });\n};\n\nexport const disableShortLogin = () => dispatch => {\n  dispatch(loading());\n  secretin.deactivateShortLogin();\n  dispatch(disableShortLoginSuccess());\n  dispatch(hideShortpass());\n};\n\nexport default AppUISlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getAllSecrets = createSelector(\n  state => state.Metadata.metadata,\n  metadata => {\n    return Object.values(metadata).filter(secret => secret.type !== 'folder');\n  }\n);\n\nexport const getMySecrets = createSelector(\n  getAllSecrets,\n  state => state.AppUI.currentUser,\n  (allSecrets, currentUser) => {\n    if (!allSecrets) return [];\n    return allSecrets.filter(secret => {\n      const user = secret.users.find(\n        user => user.username === currentUser.username\n      );\n      return user?.rights === 2;\n    });\n  }\n);\n\nexport const getSecretsInFolder = createSelector(\n  state => state.Metadata.metadata,\n  state => state.AppUI.currentUser,\n  (state, folderId) => folderId,\n  (metadata, currentUser, folderId) => {\n    if (!currentUser || !metadata) {\n      return {};\n    }\n    const userId = currentUser.username;\n    return Object.values(metadata).filter(secret => {\n      const secretUser = secret.users.find(user => user.id === userId);\n      const folders = secretUser?.folders || {};\n      return (\n        (!folderId && folders.ROOT) ||\n        (folderId && Object.keys(folders).includes(folderId))\n      );\n    });\n  }\n);\n\nexport const getSharedSecrets = createSelector(getAllSecrets, allSecrets => {\n  if (!allSecrets) return [];\n  return allSecrets.filter(secret => secret.users.length > 1);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\nimport Dropdown from 'components/utilities/Dropdown';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    autoCompleteFromList: PropTypes.array,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.array,\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    autoCompleteFromList: [],\n    disabled: false,\n    readOnly: false,\n    actions: [],\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      autoCompleteSelected: false,\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n    if (this.props.autoFocus) {\n      setTimeout(() => this.input.focus(), 0);\n    }\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ autoCompleteSelected: false });\n    this.props.onChange({\n      name: this.props.name,\n      value: event.target.value,\n    });\n  }\n\n  handleAutoCompleteSelect(value) {\n    this.setState({ autoCompleteSelected: true });\n    this.props.onChange({ name: this.props.name, value });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n      autoCompleteFromList,\n    } = this.props;\n\n    const filteredAutoCompleteList =\n      this.props.value.length > 0\n        ? autoCompleteFromList.filter(elem =>\n            elem.toLowerCase().includes(this.props.value.toLowerCase())\n          )\n        : [];\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.length > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            value={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? 'on' : 'off'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {!this.state.autoCompleteSelected &&\n            filteredAutoCompleteList.length > 0 && (\n              <Dropdown\n                id=\"input--auto-complete-list\"\n                open={Boolean(this.props.value.length > 0)}\n              >\n                <Dropdown.Menu>\n                  {filteredAutoCompleteList.slice(0, 5).map(elem => (\n                    <Dropdown.MenuItem\n                      key={elem}\n                      onSelect={() => this.handleAutoCompleteSelect(elem)}\n                    >\n                      {elem}\n                    </Dropdown.MenuItem>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass UserConnectForm extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n    savedUsername: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: props.savedUsername,\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? 'Sign up' : 'Sign in';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={this.props.isOnline && secretin.api.db}\n        >\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '70%' }}\n            alt=\"logo\"\n            title={this.props.isOnline ? 'Secret-In.me' : 'Offline'}\n          />\n        </h2>\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.username}\n          autoFocus={this.props.savedUsername === ''}\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.password}\n          autoFocus={this.props.savedUsername !== ''}\n        />\n        {this.props.errors.totp && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.token}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.confirmPassword}\n          />\n        )}\n\n        {this.props.errors.shortLoginExpired && (\n          <h3 className=\"tooltip\">\n            {this.props.errors.shortLoginExpired.message}\n            <Icon id=\"info\" size={13} />\n            <span className=\"tooltiptext\">\n              {this.props.errors.shortLoginExpired.info}\n            </span>\n          </h3>\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                I already have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  sign in\n                </a>\n              </span>\n            ) : (\n              <span>\n                I don&apos;t have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  create one\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { online } = state.AppUI;\n  return {\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.closeOnBackdropClick ? props.onClose : undefined}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  closeOnBackdropClick: PropTypes.bool,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport moment from 'moment';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.dispatch(\n      AppUIActions.shortLogin({ shortpass: this.state.shortpass })\n    );\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(AppUIActions.disableShortLogin());\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n        <Input\n          label={`Shortpass${shortLoginActivationDate &&\n            ' (expires ' +\n              moment(shortLoginActivationDate)\n                .add(7, 'days')\n                .fromNow()})`}\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(UserConnectShortPass);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\nimport moment from 'moment';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n    showShortpass: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors, showShortpass } = this.props;\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    const shortLoginExpired = shortLoginActivationDate\n      ? moment(shortLoginActivationDate)\n          .add(7, 'days')\n          .isBefore(moment())\n      : false;\n\n    return (\n      <div className=\"user-connect\">\n        {showShortpass && !shortLoginExpired ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.shortlogin}\n          />\n        ) : (\n          <UserConnectForm\n            loading={loading}\n            savedUsername={savedUsername ? savedUsername : ''}\n            errors={{\n              ...errors,\n              ...(shortLoginActivationDate && shortLoginExpired\n                ? {\n                    shortLoginExpired: {\n                      message: `Your shortpass has expired `,\n                      info: `Previous shortpass will automatically reactivate for your account ${savedUsername} if you sign-in.`,\n                    },\n                  }\n                : {}),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { showShortpass, status } = state.AppUI;\n  return {\n    showShortpass,\n    status,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnect);\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { disconnectUser } from 'slices/AppUISlice';\n\nimport secretin from 'utils/secretin';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const dispatch = useDispatch();\n  const handleLogout = useCallback(() => {\n    dispatch(disconnectUser());\n  }, [dispatch]);\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={isOnline && secretin.api.db}>\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '100%' }}\n            alt=\"logo\"\n            title={isOnline ? 'Secret-In.me' : 'Offline'}\n          ></img>\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            All\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            My secrets\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            Shared secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            Settings\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              Export secrets\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            Import secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={handleLogout}>\n              <Icon id=\"logout\" size=\"base\" />\n              Log out\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import uuid from 'uuid';\n\nclass SecretFieldRecord {\n  constructor(raw = {}) {\n    this.id = raw.id || uuid.v4();\n    this.date = raw.date || null;\n    this.type = raw.type || 'text';\n    this.label = raw.label || '';\n    this.content = raw.content || '';\n  }\n\n  getRaw() {\n    const { id, date, type, label, content } = this;\n    return {\n      id,\n      date,\n      type,\n      label,\n      content,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = {\n      ...rawData,\n      content: rawData.content,\n    };\n    if (raw.value) delete raw.value;\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import SecretFieldRecord from 'models/SecretFieldRecord';\nimport { Utils } from 'secretin';\n\nclass SecretDataRecord {\n  constructor(raw = {}) {\n    this.type = raw.type || 'default';\n    this.fields = raw.fields || [];\n  }\n\n  addNewField(params = {}) {\n    this.fields.push(new SecretFieldRecord(params).getRaw());\n    return this;\n  }\n\n  getRaw() {\n    const { type, fields } = this;\n    return {\n      type,\n      fields,\n    };\n  }\n\n  static createWithDefaultFields(defaultFields) {\n    return defaultFields.reduce((record, field) => {\n      if (field.type === 'password') {\n        return record.addNewField({\n          ...field,\n          content: Utils.PasswordGenerator.generatePassword(),\n        });\n      }\n      return record.addNewField(field);\n    }, new SecretDataRecord());\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      switch (key) {\n        case 'fields':\n          return {\n            ...output,\n            fields: value.map(field =>\n              SecretFieldRecord.createFromRaw(field).getRaw()\n            ),\n          };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = [\n  { label: 'login', type: 'text' },\n  { label: 'password', type: 'password' },\n  { label: 'url', type: 'url' },\n];\n\nexport default SecretDataRecord;\n","import uuid from 'uuid';\n\nexport const UserRights = [\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n];\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User {\n  constructor(raw = {}) {\n    this.id = raw.username || uuid.v4();\n    this.username = raw.username || '';\n    this.rights = raw.rights || 0;\n    this.folders = raw.folders || {};\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const { id, username, rights, folders } = this;\n    return {\n      id,\n      username,\n      rights,\n      folders,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    return new User(rawData);\n  }\n}\n\nexport default User;\n","import moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret {\n  constructor(raw = {}) {\n    this.id = raw.id || null;\n    this.type = raw.type || null;\n    this.title = raw.title || null;\n    this.lastModifiedBy = raw.lastModifiedBy || null;\n    this.lastModifiedAt = raw.lastModifiedAt || null;\n    this.users = raw.users || {};\n    this.data = raw.data || null;\n  }\n\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (Object.keys(this.users) > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.find(_user => _user.id === user.username)?.rights || 0;\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data,\n      users,\n    } = this;\n    return {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data: data?.getRaw(),\n      users: users.map(user => user.getRaw()),\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      if (!value) return output;\n      switch (key) {\n        case 'users':\n          return {\n            ...output,\n            users: Object.values(value).map(user => User.createFromRaw(user)),\n          };\n        case 'data':\n          return {\n            ...output,\n            data: SecretDataRecord.createFromRaw(value).getRaw(),\n          };\n        case 'lastModifiedAt':\n          return { ...output, lastModifiedAt: moment(value) };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import secretin, { Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Secret from 'models/Secret';\n\nimport {\n  createSecretSuccess,\n  createSecretFailure,\n  loginUserProgress,\n  loginUserSuccess,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} from 'slices/AppUISlice';\nimport {\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} from 'slices/ShowSecretUISlice';\n\nconst { FriendNotFoundError } = Errors;\n\nconst buildSecrets = metadata => {\n  return metadata.map(secret => Secret.createFromRaw(secret));\n};\n\nconst getIndex = (state, secretId) =>\n  state.metadata.findIndex(secret => secret.id === secretId);\n\nconst getById = (state, secretId) =>\n  state.metadata.find(secret => secret.id === secretId);\n\n// Helper function reused in many actions\nconst _rebuildMetadata = (state, action) => {\n  const { metadata } = action.payload;\n  state.metadata = buildSecrets(Object.values(metadata));\n  const friendList = new Set();\n  Object.values(metadata).forEach(metadatum => {\n    Object.values(metadatum.users).forEach(user => {\n      friendList.add(user.username);\n    });\n  });\n  state.knownFriendList = Array.from(friendList).sort();\n};\n\nexport const MetadataSlice = createSlice({\n  name: 'Metadata',\n  initialState: {\n    metadata: [],\n  },\n  reducers: {\n    loadMetadataSuccess: _rebuildMetadata,\n    deleteSecretSuccess: _rebuildMetadata,\n    deleteSecretFailure: _rebuildMetadata,\n    addSecretToFolderSuccess: _rebuildMetadata,\n    removeSecretFromCurrentFolderSuccess: _rebuildMetadata,\n    createSecretUserRightsSuccess: _rebuildMetadata,\n    updateSecretSuccess: _rebuildMetadata,\n    renameSecretSuccess: _rebuildMetadata,\n\n    updateSecretUserRightsSuccess: (state, action) => {\n      const { secret, user, rights } = action.payload;\n      const secretMetadataIndex = getIndex(state, secret.id);\n      state.metadata[secretMetadataIndex].users = state.metadata[\n        secretMetadataIndex\n      ].users.map(userToUpdate => {\n        if (userToUpdate.id === user.id) {\n          return userToUpdate.merge({ rights });\n        }\n        return userToUpdate;\n      });\n    },\n\n    deleteSecretUserRightsSuccess: (state, action) => {\n      const { secret, user } = action.payload;\n      const secretMetadata = getById(state, secret.id);\n      secretMetadata.users = secretMetadata.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: _rebuildMetadata,\n    [loginUserSuccess]: _rebuildMetadata,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loadMetadataSuccess,\n  deleteSecretSuccess,\n  deleteSecretFailure,\n  addSecretToFolderSuccess,\n  removeSecretFromCurrentFolderSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretSuccess,\n  renameSecretSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} = MetadataSlice.actions;\n\nexport const loadMetadata = () => dispatch => {\n  console.time('refresh');\n  secretin\n    .refreshUser(true, (...args) => dispatch(loginUserProgress(...args)))\n    .then(() => {\n      console.timeEnd('refresh');\n      dispatch(\n        loadMetadataSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    });\n};\n\nexport const createSecret = (\n  { title, data, folder, isFolder } = { isFolder: false }\n) => dispatch => {\n  let promise;\n  if (isFolder) {\n    if (folder) {\n      promise = secretin.addFolder(title, folder);\n    } else {\n      promise = secretin.addFolder(title);\n    }\n  } else if (folder) {\n    promise = secretin.addSecret(title, data, folder);\n  } else {\n    promise = secretin.addSecret(title, data);\n  }\n\n  return promise\n    .then(() =>\n      dispatch(\n        createSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(createSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const updateSecret = ({ secret, data }) => async dispatch => {\n  dispatch(updateSecretStart());\n  try {\n    const payload = { data };\n    await secretin.editSecret(secret.id, data);\n    try {\n      payload.history = await secretin.getHistory(secret.id);\n    } catch (err) {\n      payload.history = [];\n      console.log(err);\n    }\n    dispatch(\n      updateSecretSuccess({\n        ...payload,\n        metadata: secretin.currentUser.metadatas,\n      })\n    );\n  } catch (error) {\n    dispatch(updateSecretFailure({ error }));\n    throw error;\n  }\n};\n\nexport const renameSecret = ({ secret, newTitle }) => dispatch => {\n  return secretin\n    .renameSecret(secret.id, newTitle)\n    .then(() => {\n      dispatch(\n        renameSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const deleteSecret = ({ secret }) => dispatch => {\n  return secretin\n    .deleteSecret(secret.id)\n    .catch(error => {\n      dispatch(\n        deleteSecretFailure({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n      throw error;\n    })\n    .then(() =>\n      dispatch(\n        deleteSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    );\n};\n\nexport const createSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() => {\n      dispatch(\n        createSecretUserRightsSuccess({\n          metadata: secretin.currentUser.metadatas,\n          user,\n          rights,\n        })\n      );\n    })\n    .catch(error => {\n      if (error instanceof FriendNotFoundError) {\n        return dispatch(\n          createSecretUserRightsFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      }\n      dispatch(\n        createSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const updateSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() =>\n      dispatch(updateSecretUserRightsSuccess({ secret, user, rights }))\n    )\n    .catch(error => {\n      dispatch(\n        updateSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const deleteSecretUserRights = ({ secret, user }) => dispatch => {\n  return secretin\n    .unshareSecret(secret.id, user.username)\n    .then(() => dispatch(deleteSecretUserRightsSuccess({ secret, user })))\n    .catch(error => {\n      dispatch(\n        deleteSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const addSecretToFolder = ({ secret, folder }) => dispatch => {\n  return secretin\n    .addSecretToFolder(secret.id, folder.id)\n    .then(() =>\n      dispatch(\n        addSecretToFolderSuccess({\n          secret,\n          folder,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        addSecretToFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const removeSecretFromCurrentFolder = ({\n  secret,\n  currentFolderId,\n}) => dispatch => {\n  return secretin\n    .removeSecretFromFolder(secret.id, currentFolderId)\n    .then(() =>\n      dispatch(\n        removeSecretFromCurrentFolderSuccess({\n          secret,\n          currentFolderId,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        removeSecretFromCurrentFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport default MetadataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport Secret from 'models/Secret';\nimport User from 'models/User';\nimport {\n  updateSecretSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} from 'slices/MetadataSlice';\n\nconst getInitialState = () => ({\n  secret: null,\n  errors: {},\n  tab: 'details',\n  isUpdating: false,\n  historyDepth: 0,\n});\n\nconst _handleError = (state, action) => {\n  const { error } = action.payload;\n  state.errors = error;\n  state.isUpdating = false;\n};\n\nexport const ShowSecretUISlice = createSlice({\n  name: 'ShowSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      state.secret = secret;\n      state.tab = tab || 'details';\n      state.errors = {};\n    },\n    showSecretSuccess: (state, action) => {\n      const { secret } = action.payload;\n      state.secret = secret;\n      state.errors = {};\n    },\n    hideModal: (state, action) => {\n      state.secret = null;\n      state.errors = {};\n      state.historyDepth = 0;\n    },\n    changeTab: (state, action) => {\n      const { tab } = action.payload;\n      state.tab = tab;\n    },\n    updateSecretStart: (state, action) => {\n      state.isUpdating = true;\n      state.errors = {};\n    },\n    historyShowOlder: state => {\n      if (state.historyDepth + 1 < state.secret.history.length)\n        state.historyDepth += 1;\n    },\n    historyShowNewer: state => {\n      if (state.historyDepth - 1 >= 0) state.historyDepth -= 1;\n    },\n    updateSecretFailure: _handleError,\n    createSecretUserRightsFailure: _handleError,\n    updateSecretUserRightsFailure: _handleError,\n    deleteSecretUserRightsFailure: _handleError,\n  },\n  extraReducers: {\n    [updateSecretSuccess]: (state, action) => {\n      const { metadata, history } = action.payload;\n      const secretMetadata = metadata[state.secret.id];\n      // The metadata coming back from Secretin has flat user objects indexed by id\n      // Recreate the array of User instances\n      secretMetadata.users = Object.values(secretMetadata.users).map(rawUser =>\n        User.createFromRaw(rawUser)\n      );\n      state.secret = state.secret.merge(metadata[state.secret.id]);\n      state.secret.history = history;\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [createSecretUserRightsSuccess]: (state, action) => {\n      const { user, rights } = action.payload;\n      state.secret.users.push(user.merge({ rights }));\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [updateSecretUserRightsSuccess]: (state, action) => {\n      const { rights, user } = action.payload;\n      state.secret.users = state.secret.users.map(_user => {\n        if (_user.id === user.id) return _user.merge({ rights });\n        return _user;\n      });\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [deleteSecretUserRightsSuccess]: (state, action) => {\n      const { user } = action.payload;\n      state.secret.users = state.secret.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n      state.isUpdating = false;\n      state.errors = {};\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  showSecretSuccess,\n  hideModal,\n  changeTab,\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n  historyShowOlder,\n  historyShowNewer,\n} = ShowSecretUISlice.actions;\n\nexport const showSecret = ({ secret, tab }) => async dispatch => {\n  dispatch(showModal({ secret, tab }));\n  if (secret.type === 'folder') {\n    dispatch(showSecretSuccess({ secret }));\n  } else {\n    const data = await secretin.getSecret(secret.id);\n    const raw = !data.fields ? { fields: data } : data;\n    const secretWithData = Secret.createFromRaw(secret.getRaw());\n    secretWithData.data = SecretDataRecord.createFromRaw(raw).getRaw();\n    try {\n      secretWithData.history = await secretin.getHistory(secret.id);\n    } catch (error) {\n      console.log(error);\n      secretWithData.history = [];\n    }\n    dispatch(\n      showSecretSuccess({\n        secret: secretWithData,\n      })\n    );\n  }\n};\n\nexport default ShowSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { showSecretSuccess } from 'slices/ShowSecretUISlice';\nimport { hideModal } from 'slices/ShowSecretUISlice';\nimport { updateSecretSuccess } from 'slices/MetadataSlice';\n\nexport const EditSecretUISlice = createSlice({\n  name: 'EditSecretUI',\n  initialState: {\n    isEditing: false,\n    data: null,\n  },\n  reducers: {\n    updateData: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.data;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      state.isEditing = true;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [showSecretSuccess]: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.secret.data;\n    },\n    [hideModal]: state => {\n      state.isEditing = false;\n      state.data = null;\n    },\n    [updateSecretSuccess]: state => {\n      state.isEditing = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateData, changeField } = EditSecretUISlice.actions;\n\nexport default EditSecretUISlice.reducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\n\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({ value: '' });\n    setTimeout(() => {\n      this.handleChange({\n        value: Utils.PasswordGenerator.generatePassword(),\n      });\n    }, 100);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            Open\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        Copy\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.field.label}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={actions}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Button\n              title=\"Generate password\"\n              buttonStyle=\"icon\"\n              onClick={this.onGenerate}\n              tabIndex=\"-1\"\n            >\n              <Icon id=\"generate\" size=\"small\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecretField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.array,\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as EditSecretUIActions from 'slices/EditSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.fields}\n          onChange={\n            this.props.canUpdate ? this.props.actions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(EditSecretUIActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = ownProps.data || state.EditSecretUI.data;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Icon from 'components/utilities/Icon';\n\nexport const SecretShowHeader = ({\n  icon,\n  title,\n  canEditTitle,\n  isUpdating,\n  onEditTitle,\n}) => {\n  return (\n    <div>\n      <Icon id={icon} size=\"small\" />\n      <SecretEditableTitle\n        title={title}\n        canUpdate={canEditTitle}\n        isUpdating={isUpdating}\n        onSubmit={newTitle => {\n          if (newTitle !== title) {\n            onEditTitle(newTitle);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nSecretShowHeader.propTypes = {\n  canEditTitle: PropTypes.bool,\n  title: PropTypes.string,\n  icon: PropTypes.string,\n  isUpdating: PropTypes.bool,\n  onEditTitle: PropTypes.func,\n};\n\nexport default SecretShowHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst SecretHistoryButton = ({ side, disabled, onClick }) => {\n  return (\n    <div className=\"secret-history-button\">\n      <Button\n        title={side}\n        buttonStyle=\"icon\"\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <Icon id={side} />\n      </Button>\n    </div>\n  );\n};\n\nSecretHistoryButton.propTypes = {\n  disabled: PropTypes.bool,\n  side: PropTypes.oneOf('previous', 'next'),\n  onClick: PropTypes.func,\n};\n\nexport default SecretHistoryButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport SecretHistoryButton from 'components/secrets/SecretHistoryButton';\nimport SecretEdit from 'components/secrets/SecretEdit';\n\nclass SecretHistory extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    historyDepth: PropTypes.number,\n    historyCount: PropTypes.number,\n    modifiedAt: PropTypes.string,\n    isLatest: PropTypes.bool,\n    isOldest: PropTypes.bool,\n    dispatch: PropTypes.func,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const {\n      historyDepth,\n      historyCount,\n      modifiedAt,\n      isLatest,\n      isOldest,\n      data,\n    } = this.props;\n    const { historyShowOlder, historyShowNewer } = this.props.actions;\n    const color = isLatest ? '#1abc9c' : '#afafaf';\n    return (\n      <div className=\"secret-history\">\n        <div\n          className=\"secret-history-header\"\n          style={{\n            backgroundColor: color,\n            borderColor: color,\n          }}\n        >\n          <div className=\"secret-history-navigation\">\n            <SecretHistoryButton\n              disabled={historyDepth >= historyCount - 1}\n              side=\"previous\"\n              onClick={historyShowOlder}\n            />\n            <SecretHistoryButton\n              disabled={historyDepth <= 0}\n              side=\"next\"\n              onClick={historyShowNewer}\n            />\n          </div>\n          <span\n            style={{ color: 'white', fontWeight: '600' }}\n            title={moment(modifiedAt).format('MMM Do, YYYY HH:mm')}\n          >\n            {isLatest && '(latest)'}\n            {isOldest && '(oldest)'} {moment(modifiedAt).fromNow()}\n          </span>\n        </div>\n        <div className=\"secret-history-fields\">\n          <SecretEdit isUpdating={false} canUpdate={false} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { secret, historyDepth } = state.ShowSecretUI;\n  return {\n    data: secret?.history[historyDepth]?.secret,\n    modifiedAt: secret?.history[historyDepth]?.lastModifiedAt,\n    historyCount: secret?.history.length,\n    historyDepth,\n    isLatest: historyDepth === 0,\n    isOldest: historyDepth + 1 >= secret?.history.length,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ShowSecretUIActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretHistory);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.length > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      // TODO : figure out sorting\n      // .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ]);\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps)(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'emerland',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'sun-flower',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    knownFriendList: PropTypes.array,\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: new User(),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.merge({ [name]: value }),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      'read access',\n      'read and write access',\n      'read, write and share access',\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: 'Are you sure?',\n      text: (\n        <span>\n          You are about to give <b>{rights}</b> to <b>{to}</b> on <b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: 'Share the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(\n          MetadataActions.createSecretUserRights({\n            secret: this.props.secret,\n            user: this.state.user,\n            rights: this.state.user.rights,\n          })\n        );\n        this.setState({\n          user: new User(),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder=\"User name...\"\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          autoCompleteFromList={this.props.knownFriendList}\n          error={this.props.errors.username}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { knownFriendList } = state.Metadata;\n  return {\n    knownFriendList,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserListNew);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Secret from 'models/Secret';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser) {\n  if (cantShare) {\n    return \"You don't have the permission to share this secret\";\n  } else if (isCurrentUser) {\n    return \"You can't modify or remove yourself\";\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    isUpdating: PropTypes.bool,\n    isOnline: PropTypes.bool,\n    currentUser: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    this.props.dispatch(\n      MetadataActions.updateSecretUserRights({\n        secret: this.props.secret,\n        user,\n        rights,\n      })\n    );\n  }\n\n  onRemoveUserRights(user) {\n    this.props.dispatch(\n      MetadataActions.deleteSecretUserRights({\n        secret: this.props.secret,\n        user,\n      })\n    );\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && this.props.isOnline;\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users.map(user => (\n            <SecretUserListItem\n              key={user.id}\n              user={user}\n              disabled={\n                !canShare ||\n                currentUser.username === user.id ||\n                this.props.isUpdating\n              }\n              disabledReason={getDisabledReason(\n                !canShare,\n                currentUser.username === user.id\n              )}\n              onChangeUserRights={this.onChangeUserRights}\n              onRemoveUserRights={this.onRemoveUserRights}\n            />\n          ))}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser, online } = state.AppUI;\n  return {\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport SecretShowHeader from 'components/secrets/SecretShowHeader';\nimport SecretHistory from 'components/secrets/SecretHistory';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    data: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    showSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    this.props.showSecretActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    this.props.metadataActions.updateSecret({\n      secret: this.props.secret,\n      data: this.props.data,\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = this.props.currentUser;\n    const users = this.props.secret.users.filter(\n      user => user.id !== currentUserId\n    );\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(this.props.currentUser) &&\n      (this.props.isOnline || users.length === 0);\n\n    return (\n      <Modal\n        show={this.props.shown}\n        closeOnBackdropClick={!this.props.isEditing}\n        onClose={this.props.showSecretActions.hideModal}\n      >\n        <Modal.Header>\n          <SecretShowHeader\n            icon={this.props.secret.getIcon()}\n            title={this.props.secret.title}\n            canEditTitle={canUpdate}\n            isUpdating={this.props.isUpdating}\n            onEditTitle={newTitle => {\n              setTimeout(() => {\n                this.props.metadataActions.renameSecret({\n                  secret: this.props.secret,\n                  newTitle,\n                });\n              });\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {this.props.secret.type === 'windows' && (\n            <Flash type=\"info\">\n              This secret is used for your Windows domain authentication. It\n              cannot be deleted.\n            </Flash>\n          )}\n          <Tabs\n            id=\"secret-tabs\"\n            activeKey={this.props.tab}\n            onSelect={this.handleChangeTab}\n          >\n            {this.props.secret.type !== 'folder' && (\n              <Tab eventKey=\"details\" title=\"Details\">\n                {this.props.secret.type === 'windows' ? (\n                  <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                ) : (\n                  <SecretEdit\n                    isUpdating={this.props.isUpdating}\n                    canUpdate={canUpdate}\n                    data={this.props.secret.fields}\n                  />\n                )}\n              </Tab>\n            )}\n\n            {this.props.secret.type !== 'windows' && (\n              <Tab eventKey=\"access\" title=\"Who has access\">\n                <SecretUserList\n                  isUpdating={this.props.isUpdating}\n                  errors={this.props.errors}\n                  secret={this.props.secret}\n                />\n              </Tab>\n            )}\n\n            {this.props.secret?.history?.length > 1 && (\n              <Tab eventKey=\"history\" title=\"History\">\n                <SecretHistory />\n              </Tab>\n            )}\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.showSecretActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            {this.props.isEditing ? 'Cancel' : 'Close'}\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              Save\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSecretActions: bindActionCreators(ShowSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { secret, errors, tab, isUpdating } = state.ShowSecretUI;\n  const { isEditing, data } = state.EditSecretUI;\n  const { currentUser, online } = state.AppUI;\n  return {\n    secret,\n    shown: !!secret,\n    errors,\n    tab,\n    isUpdating,\n    isEditing,\n    data,\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretShow);\n","import { createSlice } from '@reduxjs/toolkit';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nimport { createSecretSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ).getRaw(),\n});\n\nexport const NewSecretUISlice = createSlice({\n  name: 'NewSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { folder, isFolder } = action.payload;\n      state.shown = true;\n      state.title = `Untitled ${isFolder ? 'folder' : 'secret'}`;\n      state.folder = folder;\n      state.isFolder = isFolder;\n    },\n    hideModal: () => getInitialState(),\n    changeTitle: (state, action) => {\n      const { value } = action.payload;\n      state.title = value;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: () => getInitialState(),\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  hideModal,\n  changeTitle,\n  changeField,\n} = NewSecretUISlice.actions;\n\nexport default NewSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nimport { loginUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  options: {},\n  errors: {},\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: {\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  },\n  rescueCodes: [],\n  loading: false,\n});\n\nexport const OptionsSlice = createSlice({\n  name: 'Options',\n  initialState: getInitialState(),\n  reducers: {\n    _activateTotp: (state, action) => {\n      state.loading = true;\n    },\n\n    _activateShortLogin: (state, action) => {\n      state.loading = true;\n    },\n\n    _toggleTotp: (state, action) => {\n      const { checked } = action.payload;\n      state.showQRCode = checked;\n    },\n\n    _toggleShortLogin: (state, action) => {\n      const { checked } = action.payload;\n      state.showShortLogin = checked;\n    },\n\n    activateTotpFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors.totp = error;\n      state.loading = false;\n    },\n\n    hideQRCode: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    hideShortLogin: (state, action) => {\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    activateTotpSuccess: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.totp = true;\n    },\n\n    deactivateTotpSuccess: (state, action) => {\n      state.options.totp = false;\n    },\n\n    deactivateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.options.shortLogin = shortLogin;\n    },\n\n    activateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.shortLogin = shortLogin;\n    },\n\n    changeDelaySuccess: (state, action) => {\n      const { timeToClose } = action.payload;\n      state.options.timeToClose = timeToClose;\n    },\n\n    changeNewPass1: (state, action) => {\n      const newPass1 = action.payload;\n      state.newPass.newPass1 = newPass1.value;\n    },\n\n    changeNewPass2: (state, action) => {\n      const newPass2 = action.payload;\n      state.newPass.newPass2 = newPass2.value;\n    },\n\n    showChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = true;\n    },\n\n    hideChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = false;\n    },\n\n    _changePassword: (state, action) => {\n      state.newPass.loading = true;\n      state.newPass.error = '';\n    },\n\n    changePasswordSuccess: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.status = 'success';\n    },\n\n    changePasswordFailure: (state, action) => {\n      state.newPass.error = 'Password change failed';\n      state.newPass.loading = false;\n      state.newPass.status = 'failure';\n    },\n\n    showRescueCodesSuccess: (state, action) => {\n      const { rescueCodes } = action.payload;\n      state.rescueCodes = rescueCodes;\n      state.showRescueCodes = true;\n    },\n\n    hideRescueCodes: (state, action) => {\n      state.rescueCodes = [];\n      state.showRescueCodes = false;\n    },\n  },\n  extraReducers: {\n    [loginUserSuccess]: (state, action) => {\n      const { options } = action.payload;\n      state.options = options;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  _activateTotp,\n  _activateShortLogin,\n  _toggleTotp,\n  _toggleShortLogin,\n  activateTotpFailure,\n  activateTotpSuccess,\n  hideQRCode,\n  hideShortLogin,\n  deactivateTotpSuccess,\n  deactivateShortLoginSuccess,\n  activateShortLoginSuccess,\n  changeDelaySuccess,\n  changeNewPass1,\n  changeNewPass2,\n  showChangePassword,\n  hideChangePassword,\n  _changePassword,\n  changePasswordSuccess,\n  changePasswordFailure,\n  showRescueCodesSuccess,\n  hideRescueCodes,\n} = OptionsSlice.actions;\n\nexport const deactivateTotp = () => (dispatch, getState) =>\n  secretin\n    .deactivateTotp()\n    .then(() => dispatch(deactivateTotpSuccess()))\n    .catch(() => {\n      // dispatch(deactivateTotpFailure());\n    });\n\nexport const activateTotp = ({ seed, token }) => (dispatch, getState) => {\n  dispatch(_activateTotp());\n  return secretin.api\n    .testTotp(seed.b32, token)\n    .then(() => secretin.activateTotp(seed))\n    .then(() => dispatch(activateTotpSuccess()))\n    .catch(err => {\n      if (err === 'Invalid couple') {\n        dispatch(activateTotpFailure({ error: 'Synchronisation error' }));\n      } else {\n        dispatch(activateTotpFailure({ error: 'An error occured' }));\n      }\n    });\n};\n\nexport const activateShortLogin = ({ shortpass }) => (dispatch, getState) => {\n  dispatch(_activateShortLogin());\n  return secretin\n    .activateShortLogin(shortpass, uuid.v4())\n    .then(() =>\n      dispatch(\n        activateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(activateShortLoginFailure());\n    });\n};\n\nexport const deactivateShortLogin = () => (dispatch, getState) => {\n  secretin\n    .deactivateShortLogin()\n    .then(() =>\n      dispatch(\n        deactivateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(deactivateShortLoginFailure());\n    });\n};\n\nexport const changePassword = ({ newPass }) => (dispatch, getState) => {\n  dispatch(_changePassword());\n  secretin\n    .changePassword(newPass)\n    .then(() => {\n      dispatch(changePasswordSuccess());\n    })\n    .catch(() => {\n      dispatch(changePasswordFailure());\n    });\n};\n\nexport const toggleTotp = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleTotp({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateTotp());\n};\n\nexport const showRescueCodes = () => (dispatch, getState) => {\n  if (\n    !window.confirm(\n      'Be careful, this will replace your previously generated codes. Continue?'\n    )\n  ) {\n    return;\n  }\n  secretin.getRescueCodes().then(rescueCodes => {\n    dispatch(showRescueCodesSuccess({ rescueCodes }));\n  });\n};\n\nexport const toggleShortLogin = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleShortLogin({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateShortLogin());\n};\n\nexport const toggleAutoLogout = ({ checked }) => (dispatch, getState) => {\n  const delay = checked ? 30 : 0;\n  return dispatch(changeTimeToClose({ timeToClose: delay }));\n};\n\nexport const changeTimeToClose = ({ timeToClose }) => (dispatch, getState) => {\n  secretin\n    .editOption('timeToClose', timeToClose)\n    .then(() => {\n      dispatch(changeDelaySuccess({ timeToClose }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport default OptionsSlice.reducer;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport importers from 'utils/importers';\nimport { findKey } from 'lodash';\n\nconst getInitialState = () => ({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: {},\n});\n\nexport const ImportSlice = createSlice({\n  name: 'Import',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      this.state.secret = secret;\n      this.state.tab = tab || 'details';\n      this.state.errors = {};\n    },\n    _importSecrets: (state, action) => {\n      state.importing = true;\n      state.success = false;\n      state.error = '';\n    },\n\n    detectTypeFailure: (state, action) => {\n      const { error } = action.payload;\n      state.error = error;\n      state.importType = '';\n      state.mandatoryFields = {};\n    },\n\n    detectTypeSuccess: (state, action) => {\n      const { file, importType, mandatoryFields } = action.payload;\n      state.importType = importType;\n      state.error = '';\n      state.file = file;\n      state.mandatoryFields = mandatoryFields;\n    },\n\n    importSecretsProgress: (state, action) => {\n      const { importStatus, importTotal } = action.payload;\n      state.error = '';\n      state.importStatus = importStatus;\n      state.importTotal = importTotal;\n    },\n\n    importSecretsSuccess: (state, action) => {\n      state.importing = false;\n      state.success = true;\n      state.importType = '';\n      state.error = '';\n      state.importStatus = 0;\n      state.importTotal = 0;\n      state.mandatoryFields = {};\n    },\n\n    importSecretsFailure: (state, action) => {\n      const { error } = action.payload;\n\n      state.importing = false;\n      state.success = false;\n      state.importType = '';\n      state.error = error;\n      state.mandatoryFields = {};\n    },\n\n    defaultStore: (state, action) => {\n      state = getInitialState();\n    },\n\n    changeMandatoryField: (state, action) => {\n      const { field, value } = action.payload;\n      state.mandatoryFields[field.name].value = value;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  _importSecrets,\n  detectTypeFailure,\n  detectTypeSuccess,\n  importSecretsProgress,\n  importSecretsSuccess,\n  importSecretsFailure,\n  defaultStore,\n  changeMandatoryField,\n} = ImportSlice.actions;\n\nexport const detectType = ({ file }) => (dispatch, getState) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = ({ target }) => {\n    const file = target.result;\n    const importType = findKey(importers, importer => importer.detect(file));\n\n    if (typeof importType !== 'undefined') {\n      const mandatoryFields = importers[importType].mandatoryFields;\n      dispatch(detectTypeSuccess({ file, importType, mandatoryFields }));\n    } else {\n      dispatch(detectTypeFailure({ error: 'Invalid type' }));\n    }\n  };\n  return reader;\n};\n\nexport const importSecrets = ({ file, type, mandatoryFields }) => (\n  dispatch,\n  getState\n) => {\n  dispatch(_importSecrets());\n  importers[type]\n    .parse(\n      file,\n      mandatoryFields,\n      ({ state: importStatus, total: importTotal }) =>\n        dispatch(\n          importSecretsProgress({\n            importStatus,\n            importTotal,\n          })\n        )\n    )\n    .then(() => {\n      dispatch(importSecretsSuccess());\n    })\n    .catch(error => {\n      dispatch(importSecretsFailure({ error }));\n    });\n};\n\nexport default ImportSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport AppUIReducer from '../slices/AppUISlice';\nimport EditSecretUIReducer from '../slices/EditSecretUISlice';\nimport MetadataReducer from '../slices/MetadataSlice';\nimport NewSecretUIReducer from '../slices/NewSecretUISlice';\nimport ShowSecretUIReducer from '../slices/ShowSecretUISlice';\nimport OptionsReducer from '../slices/OptionsSlice';\nimport ImportReducer from '../slices/ImportSlice';\n\nexport default configureStore({\n  reducer: {\n    AppUI: AppUIReducer,\n    EditSecretUI: EditSecretUIReducer,\n    Metadata: MetadataReducer,\n    NewSecretUI: NewSecretUIReducer,\n    ShowSecretUI: ShowSecretUIReducer,\n    Options: OptionsReducer,\n    Import: ImportReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: [\n          'AppUI/onLoginUserProgress',\n          'AppUI/loginUserSuccess',\n          'Metadata/addSecretToFolderSuccess',\n        ],\n        // Ignore these paths in the state\n        ignoredPaths: ['AppUI.currentUser', 'Metadata.metadata'],\n      },\n    }),\n});\n","import urljoin from 'url-join';\n\nexport function buildSecretURL(folders = [], basePath = '/secrets') {\n  return urljoin(basePath, folders.join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.array,\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users.map(user => (\n        <UserAvatar key={user.id} user={user} size={size} />\n      ))}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n    folder: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({\n        secret,\n        tab: secret.type === 'folder' ? 'access' : 'details',\n      })\n    );\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({ secret, tab: 'access' })\n    );\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    this.props.dispatch(\n      MetadataActions.removeSecretFromCurrentFolder({\n        secret,\n        currentFolderId,\n      })\n    );\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () =>\n        this.props.dispatch(MetadataActions.deleteSecret({ secret })),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret, currentUser, folder } = this.props;\n\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!this.props.isOnline}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!this.props.isOnline}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { online, currentUser } = state.AppUI;\n  const { metadata } = state.Metadata;\n  return {\n    isOnline: online,\n    currentUser,\n    folder: metadata.find(m => m.id === ownProps.parentFolderId),\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListItemOptions);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport store from 'stores/store';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n\n  const secretRights = secret.users.find(\n    user => user.id === currentUser.username\n  ).rights;\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL([...folders, secret.id])}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders[folders.length - 1]}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    store.dispatch(MetadataActions.addSecretToFolder({ secret, folder }));\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = store.getState().AppUI.currentUser;\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.users.find(user => user.id === currentUserId).rights !==\n        0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.users.find(user => user.id === currentUserId).rights !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  const dispatch = useDispatch();\n\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const secretRights =\n    secret.users.find(user => user.id === currentUser.username)?.rights || 0;\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => dispatch(ShowSecretUIActions.showSecret({ secret }))}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders[folders.length - 1]}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.array,\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: [],\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const metadata = useSelector(state => state.Metadata.metadata);\n\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) => [\n      ...memo,\n      {\n        folderId,\n        link: buildSecretURL(\n          [folderId],\n          memo[memo.length - 1] ? memo[memo.length - 1].link : undefined\n        ),\n      },\n    ],\n    []\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = metadata?.find(m => m.id === folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return [\n      ...links,\n      <div key={key} className=\"breadcrumb-item\">\n        <NavLink\n          to={link}\n          className=\"breadcrumb-link\"\n          activeClassName=\"breadcrumb-link--active\"\n          exact\n        >\n          {folder.title}\n        </NavLink>\n      </div>,\n      <Icon\n        key={`${key}-sep`}\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />,\n    ];\n  }, []);\n\n  if (withTitle) {\n    breadcrumb.unshift(\n      <Icon\n        key=\"home-sep\"\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />\n    );\n\n    breadcrumb.unshift(\n      <Title\n        key=\"home\"\n        title={currentUser.username}\n        icon=\"home\"\n        link=\"/secrets/\"\n      />\n    );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  if (folder.root) return null;\n  return (\n    <div className=\"secret-list-folder\">\n      <div colSpan=\"4\" className=\"secret-list-folder-info\">\n        <SecretListBreadcrumb folders={folder.breadcrumb} withTitle={false} />\n      </div>\n    </div>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { escapeRegExp, set } from 'lodash';\nimport { List, AutoSizer } from 'react-virtualized';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.array,\n    isDragging: PropTypes.bool,\n    folders: PropTypes.array,\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n    currentUser: PropTypes.object,\n    allFolders: PropTypes.array,\n  };\n\n  render() {\n    const { allFolders, currentUser } = this.props;\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = {};\n    let sortedFolderRows = [];\n\n    const getUser = (users, username) =>\n      users.find(user => user.id === username);\n\n    if (this.props.filtered) {\n      filteredSecrets.forEach(secret => {\n        let folder = 'ROOT';\n        const user = getUser(secret.users, currentUser.username);\n        if (user) folder = Object.keys(user.folders)[0];\n        if (typeof folder === 'undefined') {\n          folder = 'ROOT';\n        }\n        set(filteredFolders, `${folder}.secrets.${secret.id}`, secret);\n        if (folder === 'ROOT') {\n          filteredFolders[folder].name = '';\n          filteredFolders[folder].root = true;\n        } else {\n          let root = false;\n          let breadcrumb = [];\n          let fullName = [];\n          let currentFolder = folder;\n          while (!root) {\n            const currentFolderDetails = allFolders.find(\n              fold => fold.id === currentFolder\n            );\n            fullName.unshift(currentFolderDetails.title);\n            root = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            ).includes('ROOT');\n\n            breadcrumb.unshift(currentFolder);\n            currentFolder = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            )[0];\n          }\n          filteredFolders[folder].name = fullName.join('/');\n          filteredFolders[folder].breadcrumb = breadcrumb;\n        }\n      });\n      let sortedFolders = Object.entries(filteredFolders).map(\n        ([id, folder]) => ({\n          ...folder,\n          id,\n        })\n      );\n      sortedFolders.sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      );\n      sortedFolders.sort((a, b) => a.root);\n      sortedFolderRows = sortedFolders\n        .map(folder => {\n          const secrets = Object.values(folder.secrets);\n          secrets.sort((a, b) => {\n            if (a.title === null) return 1;\n            if (b.title === null) return -1;\n            return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n          });\n          return [\n            { rowType: 'header', rowData: folder },\n            ...secrets.map(secret => ({ rowType: 'row', rowData: secret })),\n          ];\n        })\n        .flat();\n    } else {\n      filteredSecrets.sort((a, b) =>\n        a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n      );\n    }\n\n    const renderFilteredRow = ({ index, key, style }) => {\n      const { rowType, rowData } = sortedFolderRows[index];\n      if (rowType === 'header') {\n        return (\n          <div key={key} style={style}>\n            <SecretListFolderInfo key={rowData.id} folder={rowData} />\n          </div>\n        );\n      }\n\n      return (\n        <div key={key} style={style}>\n          <SecretListItemFolderSecret key={rowData.id} secret={rowData} />\n        </div>\n      );\n    };\n\n    const renderStandardRow = ({ index, key, style }) => {\n      const secret = filteredSecrets[index];\n      return (\n        <div key={key} style={style}>\n          <SecretListItem\n            key={secret.id}\n            secret={secret}\n            folders={this.props.folders}\n          />\n        </div>\n      );\n    };\n\n    const getRowHeight = ({ index }) => {\n      if (this.props.filtered && sortedFolderRows[index].rowType === 'header') {\n        const folder = sortedFolderRows[index].rowData;\n        if (folder.root) return 0;\n        return 75;\n      }\n      return 50;\n    };\n\n    return (\n      <div>\n        <div className={className}>\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  width={width}\n                  height={height}\n                  rowHeight={getRowHeight}\n                  rowRenderer={\n                    this.props.filtered ? renderFilteredRow : renderStandardRow\n                  }\n                  rowCount={\n                    this.props.filtered\n                      ? sortedFolderRows.length\n                      : filteredSecrets.length\n                  }\n                />\n              );\n            }}\n          </AutoSizer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.AppUI;\n  const allFolders =\n    Object.values(state.Metadata.metadata).filter(\n      secret => secret.type === 'folder'\n    ) || [];\n\n  return {\n    currentUser,\n    allFolders,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={() => dispatch(MetadataActions.loadMetadata())}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.object,\n    newSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    isLoading: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    this.props.metadataActions.createSecret({\n      folder: folder?.id,\n      isFolder,\n      title,\n      data,\n    });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.newSecretActions.hideModal}\n      >\n        <Modal.Header title={isFolder ? 'Add new folder' : 'Add new secret'} />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={isFolder ? 'Folder title' : 'Secret title'}\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={this.props.newSecretActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={this.props.newSecretActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.newSecretActions.hideModal}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={this.props.isLoading}\n          >\n            {isFolder ? 'Add folder' : 'Add secret'}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newSecretActions: bindActionCreators(NewSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.NewSecretUI,\n    isLoading: state.AppUI.loading,\n    folder: ownProps.folder,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretNew);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Secret from 'models/Secret';\n\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n};\n\nfunction SecretListNew({ folder }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const dispatch = useDispatch();\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew folder={folder} />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n          )\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        Add secret\n      </Button>\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n          )\n        }\n      >\n        <Icon id=\"add-folder\" size=\"small\" />\n        Create folder\n      </Button>\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SecretListSearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\nimport { connect } from 'react-redux';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    show: PropTypes.bool,\n    message: PropTypes.string,\n    state: PropTypes.number,\n    total: PropTypes.number,\n  };\n\n  static getDerivedStateFromProps({ message }) {\n    const nextMessage =\n      message instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    if (!this.props.show) return null;\n    const { state, total } = this.props;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = _state => {\n  const status = _state.AppUI.status;\n  if (!status)\n    return {\n      show: false,\n    };\n  const { message, state, total } = _state.AppUI.status;\n  return {\n    show: true,\n    message,\n    state,\n    total,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectProgress);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\n\nimport Secret from 'models/Secret';\n\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.array,\n    secrets: PropTypes.array,\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n    status: PropTypes.string,\n  };\n\n  static defaultProps = {\n    folders: [],\n    secrets: {},\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = 'All';\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = 'My secrets';\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = 'Shared secrets';\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        <UserConnectProgress />\n        <div className=\"page-content\">\n          {!this.props.showAll &&\n            !this.props.showMine &&\n            !this.props.showShared && (\n              <div className=\"page-content-actions\">\n                <SecretListNew folder={this.props.folder} />\n              </div>\n            )}\n          <div className=\"secret-list-content-table-header\">\n            <div>\n              <div className=\"secret-list-item-column--title\">Title</div>\n              <div className=\"secret-list-item-column--last-modified\">\n                Last modified\n              </div>\n              <div className=\"secret-list-item-column--shared-with\">\n                Shared with\n              </div>\n              <div className=\"secret-list-item-column--actions\" />\n            </div>\n          </div>\n          <SecretListContent\n            filtered={filtered}\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={this.props.status === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(SecretList)\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defaultMemoize } from 'reselect';\nimport equal from 'fast-deep-equal/es6';\n\nimport SecretList from 'components/secrets/SecretList';\n\nimport {\n  getAllSecrets,\n  getMySecrets,\n  getSecretsInFolder,\n  getSharedSecrets,\n} from 'selectors/MetadataSelectors';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nconst getFolders = defaultMemoize(\n  params => {\n    return params.path ? params.path.split('/') : [];\n  },\n  (previousVal, currentVal) => equal(previousVal, currentVal)\n);\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  const metadata = useSelector(state => state.Metadata.metadata);\n  const allSecrets = useSelector(getAllSecrets);\n  const mySecrets = useSelector(getMySecrets);\n  const sharedSecrets = useSelector(getSharedSecrets);\n  const folders = getFolders(params);\n  const folderId = folders[folders.length - 1];\n  const folderSecrets = useSelector(state =>\n    getSecretsInFolder(state, folderId)\n  );\n  if (showAll) {\n    return <SecretList secrets={allSecrets} showAll />;\n  } else if (showMine) {\n    return <SecretList secrets={mySecrets} showMine />;\n  } else if (showShared) {\n    return <SecretList secrets={sharedSecrets} showShared />;\n  }\n  const folder = metadata.find(f => f.id === folderId);\n  return (\n    <SecretList folder={folder} folders={folders} secrets={folderSecrets} />\n  );\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ShortLoginShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideShortLogin}\n      >\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showShortLogin, loading } = state.Options;\n  return {\n    errors,\n    shown: showShortLogin,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortLoginShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.object,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={this.props.actions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.totp}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showQRCode, loading } = state.Options;\n  return {\n    errors,\n    shown: showQRCode,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`);\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass RescueCodesShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.array,\n    currentUser: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = props.currentUser;\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideRescueCodes}\n      >\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { rescueCodes, showRescueCodes } = state.Options;\n  const { currentUser } = state.AppUI;\n  return {\n    rescueCodes,\n    shown: showRescueCodes,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RescueCodesShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n    dispatch: PropTypes.func,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    this.props.dispatch(\n      OptionsActions.changePassword({\n        newPass: this.props.newPass1,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={() => this.props.dispatch(OptionsActions.hideChangePassword())}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={(...args) =>\n                this.props.dispatch(OptionsActions.changeNewPass1(...args))\n              }\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={(...args) =>\n                    this.props.dispatch(OptionsActions.changeNewPass2(...args))\n                  }\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={() =>\n              this.props.dispatch(OptionsActions.hideChangePassword())\n            }\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  } = state.Options.newPass;\n  return {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  };\n};\n\nexport default connect(mapStateToProps)(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.object,\n    newPass: PropTypes.object,\n    isOnline: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChangeTimeToClose = this.onChangeTimeToClose.bind(this);\n  }\n\n  onChangeTimeToClose({ value }) {\n    this.props.actions.changeTimeToClose({\n      timeToClose: value === '' ? -1 : parseInt(value, 10) || 0,\n    });\n  }\n\n  render() {\n    const { options, isOnline } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.totp}\n                onChange={this.props.actions.toggleTotp}\n                disabled={!isOnline}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.totp && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={this.props.actions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.shortLogin}\n                onChange={this.props.actions.toggleShortLogin}\n                disabled={!isOnline}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.timeToClose !== 0}\n                onChange={this.props.actions.toggleAutoLogout}\n                disabled={!isOnline}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {(options.timeToClose === -1 || options.timeToClose > 0) && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={\n                      options.timeToClose === -1\n                        ? ''\n                        : options.timeToClose.toString()\n                    }\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    disabled={!isOnline}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={this.props.actions.showChangePassword}\n                disabled={!isOnline}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { options } = state.Options;\n  const { online } = state.AppUI;\n  return {\n    options,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.name}\n        name={this.props.field.name}\n        value={this.props.field.value}\n        onChange={this.handleChange}\n        type={this.props.field.type}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport * as ImportActions from 'slices/ImportSlice';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields);\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields[key]}\n          onChange={this.props.actions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ImportActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { mandatoryFields } = state.Import;\n  return {\n    mandatoryFields,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport * as ImportActions from 'slices/ImportSlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.object,\n    importActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    this.props.importActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    this.props.importActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      this.props.metadataActions.loadMetadata();\n      setTimeout(() => {\n        this.props.importActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error.message}</span>}\n          {Object.keys(this.props.mandatoryFields).length > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  importActions: bindActionCreators(ImportActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  } = state.Import;\n  return {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport secretin from 'utils/secretin';\nimport Secretin from 'secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport { getSecretsInFolder } from 'selectors/MetadataSelectors';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.object,\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n    this.handleConnectionChange = this.handleConnectionChange.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener('connectionChange', this.handleConnectionChange);\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      this.handleConnectionChange\n    );\n  }\n\n  handleConnectionChange({ connection }) {\n    this.props.dispatch(AppUIActions.connectionChange(connection));\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      if (options.timeToClose > 0) {\n        const delay = options.timeToClose * 60 * 1000;\n        this.disconnectingEvent = setTimeout(\n          () => this.props.dispatch(AppUIActions.disconnectUser()),\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    // eslint-disable-next-line no-undef\n    const shortCommit = SECRETIN_APP_COMMIT\n      ? // eslint-disable-next-line no-undef\n        SECRETIN_APP_COMMIT.substr(0, 7)\n      : '';\n    // eslint-disable-next-line no-undef\n    const secretinAppVersion = SECRETIN_APP_COMMIT ? (\n      <span className=\"secretin-version\">\n        secretin-app{' '}\n        <a\n          // eslint-disable-next-line no-undef\n          href={`https://github.com/secretin/secretin-app/commit/${SECRETIN_APP_COMMIT}`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {shortCommit}\n        </a>\n      </span>\n    ) : (\n      <span className=\"secretin-version\">secretin-app dev</span>\n    );\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          {this.props.connected ? (\n            <Layout />\n          ) : (\n            <UserConnect\n              savedUsername={this.props.savedUsername}\n              loading={this.props.loading}\n              errors={this.props.errors}\n            />\n          )}\n          <div className=\"footer\">\n            <span className=\"secretin-version\">\n              secretin-lib v{Secretin.version}\n            </span>\n            {secretinAppVersion}\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { savedUsername, loading, errors, connected } = state.AppUI;\n  const secrets = getSecretsInFolder(state);\n  const { options } = state.Options;\n  return {\n    savedUsername,\n    loading,\n    errors,\n    connected,\n    secrets,\n    options,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './utils/wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { unregister } from 'utils/registerServiceWorker';\n\nimport store from 'stores/store';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootEl\n);\nif (typeof window.process === 'undefined') {\n  unregister(); // Get rid of the service worker, we don't need it\n}\n\n// if (module.hot) {\n//   module.hot.accept('components/App', () => {\n//     // eslint-disable-next-line global-require\n//     const NextApp = require('components/App').default;\n\n//     ReactDOM.render(<NextApp />, rootEl);\n//   });\n// }\n"],"sourceRoot":""}