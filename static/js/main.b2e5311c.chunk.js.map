{"version":3,"sources":["utils/secretin.js","slices/AppUISlice.js","selectors/MetadataSelectors.js","components/utilities/Form.js","components/utilities/Icon.js","components/utilities/Button.js","components/utilities/Dropdown.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Modal.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/User.js","models/Secret.js","slices/MetadataSlice.js","slices/ShowSecretUISlice.js","slices/EditSecretUISlice.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/secrets/SecretEditableTitle.js","components/secrets/SecretShowHeader.js","components/secrets/SecretHistoryButton.js","components/secrets/SecretHistory.js","components/utilities/Select.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/utilities/Flash.js","components/utilities/Tabs.js","components/secrets/SecretShow.js","slices/NewSecretUISlice.js","slices/OptionsSlice.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","slices/ImportSlice.js","stores/store.js","utils/URLHelper.js","components/users/UserAvatars.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["api","process","window","URLSearchParams","location","search","get","secretin","Secretin","SecretinBrowserAdapter","API","Server","Statuses","Errors","DecryptMetadataStatus","EndDecryptMetadataStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","UsernameAlreadyExistsError","UserNotFoundError","InvalidPasswordError","NeedTOTPTokenError","_loading","state","loading","_endLoading","AppUISlice","createSlice","name","initialState","savedUsername","getSavedUsername","connected","online","errors","currentUser","status","showShortpass","canITryShortLogin","reducers","endLoading","createSecret","createSecretSuccess","createSecretFailure","connectionChange","action","payload","connection","disconnectUserSuccess","createUserSuccess","createUserFailure","error","disableShortLoginSuccess","onLoginUserProgress","loginUserSuccess","loginUserFailure","addSecretToFolderFailure","removeSecretFromCurrentFolderFailure","hideShortpass","actions","createUser","username","password","confirmPassword","dispatch","setTimeout","newUser","then","catch","loginUser","token","console","time","loginUserProgress","options","totp","shortLogin","metadata","metadatas","getState","constructor","prevStatus","AppUI","total","Math","round","timeEnd","getAllSecrets","createSelector","Metadata","Object","values","filter","secret","type","getMySecrets","allSecrets","user","users","find","rights","getSecretsInFolder","folderId","userId","secretUser","id","folders","ROOT","keys","includes","getSharedSecrets","length","Form","props","uniqueId","onSubmit","bind","e","preventDefault","this","disabled","className","classNames","autoComplete","style","display","children","Component","defaultProps","SIZES","small","base","Icon","size","width","height","xlinkHref","Button","handleClick","onClick","buttonStyle","to","title","form","tabIndex","Dropdown","MenuItem","Input","handleChange","onTogglePasswordShow","autoCompleteSelected","showPassword","autoSelect","input","select","autoFocus","focus","setState","event","onChange","value","target","label","placeholder","readOnly","inputProps","autoCompleteFromList","filteredAutoCompleteList","elem","toLowerCase","htmlFor","ref","open","Boolean","Menu","slice","map","onSelect","handleAutoCompleteSelect","debounce","UserConnectForm","toggleSignup","signup","AppUIActions","checked","isOnline","db","src","alt","shortLoginExpired","message","info","isEmpty","connect","Modal","centered","backdropClassName","show","onHide","closeOnBackdropClick","onClose","undefined","Body","Header","Footer","Confirm","handleAccept","handleCancel","promise","Promise","resolve","reject","accept","cancel","used","text","cancelLabel","acceptLabel","confirm","confirmProps","comfirmElement","document","body","appendChild","createElement","component","ReactDOM","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","shortpass","shortlogin","deactivateShortLogin","shortLoginActivationDate","getShortLoginActivationDate","moment","add","fromNow","UserConnect","isBefore","SidebarMenuLink","activeClassName","exportDb","filename","element","setAttribute","encodeURIComponent","click","removeChild","download","format","Sidebar","useSelector","exact","reload","SecretFieldRecord","raw","uuid","v4","date","content","rawData","SecretDataRecord","fields","params","push","getRaw","defaultFields","reduce","record","field","addNewField","entries","output","key","createFromRaw","DEFAULT_FIELDS","UserRights","userRightLabel","accessRights","Error","User","forEach","Secret","lastModifiedBy","lastModifiedAt","data","_user","accessRightForUser","FriendNotFoundError","_rebuildMetadata","buildSecrets","friendList","Set","metadatum","knownFriendList","Array","from","sort","getInitialState","MetadataSlice","loadMetadataSuccess","deleteSecretSuccess","deleteSecretFailure","addSecretToFolderSuccess","removeSecretFromCurrentFolderSuccess","createSecretUserRightsSuccess","updateSecretSuccess","renameSecretSuccess","updateSecretUserRightsSuccess","secretMetadataIndex","secretId","findIndex","getIndex","userToUpdate","merge","deleteSecretUserRightsSuccess","secretMetadata","getById","userToFilter","extraReducers","loadMetadata","refreshUser","isFolder","folder","addFolder","addSecret","updateSecret","a","updateSecretStart","editSecret","getHistory","history","log","updateSecretFailure","renameSecret","newTitle","deleteSecret","createSecretUserRights","shareSecret","createSecretUserRightsFailure","unknown","updateSecretUserRights","updateSecretUserRightsFailure","deleteSecretUserRights","unshareSecret","deleteSecretUserRightsFailure","addSecretToFolder","removeSecretFromCurrentFolder","currentFolderId","removeSecretFromFolder","tab","isUpdating","historyDepth","_handleError","ShowSecretUISlice","showModal","showSecretSuccess","hideModal","changeTab","historyShowOlder","historyShowNewer","rawUser","showSecret","getSecret","secretWithData","isEditing","EditSecretUISlice","updateData","changeField","fieldIndex","fieldToUpdate","SecretField","onCopy","onGenerate","copyToClipboard","debug","Utils","PasswordGenerator","generatePassword","isNew","href","rel","canUpdate","SecretFields","SecretEdit","ownProps","EditSecretUI","bindActionCreators","EditSecretUIActions","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","SecretShowHeader","icon","canEditTitle","onEditTitle","SecretHistoryButton","side","SecretHistory","historyCount","modifiedAt","isLatest","isOldest","color","backgroundColor","borderColor","fontWeight","ShowSecretUI","ShowSecretUIActions","Select","getValue","option","noop","WindowsSecretEdit","reverse","COLORS","getInitials","fullName","names","split","toUpperCase","substring","UserAvatar","colorIndex","sum","letter","charCodeAt","getAvatarColor","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","iconOnly","SecretUserListNew","on","MetadataActions","isValid","SecretUserList","canShare","canBeSharedBy","cantShare","isCurrentUser","Flash","Tabs","animation","Tab","BootstrapTab","SecretShow","handleChangeTab","showSecretActions","metadataActions","currentUserId","canBeUpdatedBy","shown","getIcon","activeKey","eventKey","createWithDefaultFields","NewSecretUISlice","loginIndex","passwordIndex","defaultUsername","changeTitle","showQRCode","showShortLogin","showRescueCodes","newPass","newPass1","newPass2","rescueCodes","OptionsSlice","_activateTotp","_activateShortLogin","_toggleTotp","_toggleShortLogin","activateTotpFailure","hideQRCode","hideShortLogin","activateTotpSuccess","deactivateTotpSuccess","deactivateShortLoginSuccess","activateShortLoginSuccess","changeDelaySuccess","timeToClose","changeDefaultUsernameSuccess","changeNewPass1","changeNewPass2","showChangePassword","hideChangePassword","_changePassword","changePasswordSuccess","changePasswordFailure","showRescueCodesSuccess","hideRescueCodes","deactivateTotp","activateTotp","seed","testTotp","b32","err","activateShortLogin","changePassword","toggleTotp","getRescueCodes","toggleShortLogin","toggleAutoLogout","changeTimeToClose","changeDefaultUsername","editOption","InternalProgressBar","progressFunction","func","child","hashedParent","strings","querySelectorAll","j","textContent","hashedTitle","rHashedTitle","defaultProgress","parseGroup","group","progress","entryPromises","call","childEntry","update","childGroup","getElementsByTagName","addAndParseGroup","count","nb","groups","i","importers","keepass","parse","xml","mandatoryField","parser","DOMParser","xmlDoc","parseFromString","root","currentProgress","detect","file","isKeepass","mandatoryFields","importDb","isSecretin","JSON","importType","importing","importStatus","importTotal","success","ImportSlice","_importSecrets","detectTypeFailure","detectTypeSuccess","importSecretsProgress","importSecretsSuccess","importSecretsFailure","defaultStore","changeMandatoryField","detectType","reader","FileReader","readAsText","onload","result","findKey","importer","importSecrets","configureStore","reducer","AppUIReducer","EditSecretUIReducer","MetadataReducer","NewSecretUI","NewSecretUIReducer","ShowSecretUIReducer","Options","OptionsReducer","Import","ImportReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","buildSecretURL","basePath","urljoin","join","UserAvatars","SecretListItemOptions","handleShow","handleShare","handleMoveToParent","parentFolderId","handleDelete","pullRight","Toggle","canBeDeleted","divider","m","itemTarget","drop","monitor","getItem","store","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","link","SecretListItemFolderTarget","DropTarget","dropTarget","useDispatch","SecretListItem","Title","SecretListBreadcrumb","withTitle","breadcrumb","memo","links","unshift","SecretListFolderInfo","colSpan","SecretListContent","allFolders","fuzzyRegexp","RegExp","searchQuery","c","escapeRegExp","filteredSecrets","secrets","test","filteredFolders","sortedFolderRows","getUser","filtered","set","currentFolder","currentFolderDetails","fold","sortedFolders","b","localeCompare","rowType","rowData","flat","renderFilteredRow","index","renderStandardRow","getRowHeight","rowHeight","rowRenderer","rowCount","SecretListRefresh","SecretNew","newSecretActions","required","isLoading","NewSecretUIActions","SecretListNew","canWrite","SecretListSearch","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","_state","SecretList","onSearch","showAll","showMine","showShared","endDecrypt","DragDropContext","HTML5Backend","DragLayer","getFolders","defaultMemoize","path","previousVal","currentVal","equal","SecretListContainer","match","mySecrets","sharedSecrets","folderSecrets","f","ShortLoginShow","nextProps","OptionsActions","QRCodeShow","generateSeed","replace","maxLength","getFile","codes","code","Blob","RescueCodesShow","URL","createObjectURL","ChangePasswordShow","handleChangePassword","Checkbox","checboxClassName","OptionsContainer","onChangeTimeToClose","onChangeDefaultUsername","onSaveDefaultUsername","parseInt","toString","min","max","step","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","ImportMandatoryField","ImportersMandatoryFields","inputs","ImportActions","ImportContainer","handleFileChoosen","handleStartParsing","importActions","nextState","ImportMandatoryFields","Layout","App","disconnectingEvent","onAppFocus","onAppBlur","handleConnectionChange","addEventListener","removeEventListener","clearTimeout","delay","shortCommit","SECRETIN_APP_COMMIT","substr","secretinAppVersion","basename","version","hostname","rootEl","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2e5311c.chunk.js","sourcesContent":["import Secretin from 'secretin';\nimport SecretinBrowserAdapter from 'secretin/dist/adapters/browser.umd';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3000';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import secretin, { Statuses, Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\n// Helpers because we're often doing these small state updates\n\nconst _loading = state => {\n  state.loading = true;\n};\nconst _endLoading = state => {\n  state.loading = false;\n};\n\nexport const AppUISlice = createSlice({\n  name: 'AppUI',\n  initialState: {\n    savedUsername: secretin.getSavedUsername(),\n    loading: false,\n    connected: false,\n    online: true,\n    errors: {},\n    currentUser: null,\n    status: null,\n    showShortpass: secretin.canITryShortLogin(),\n  },\n  reducers: {\n    loading: _loading,\n    endLoading: _endLoading,\n    createSecret: _loading,\n    createSecretSuccess: _endLoading,\n    createSecretFailure: _endLoading,\n    connectionChange: (state, action) => {\n      state.online = action.payload.connection === 'online';\n    },\n    disconnectUserSuccess: state => {\n      state.savedUsername = secretin.getSavedUsername();\n      state.showShortpass = secretin.canITryShortLogin();\n      state.loading = false;\n      state.connected = false;\n      state.errors = {};\n      state.currentUser = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.currentUser = action.payload.currentUser;\n    },\n    createUserFailure: (state, action) => {\n      state.loading = false;\n      state.connected = false;\n      state.errors = action.payload.error;\n      state.status = null;\n    },\n    disableShortLoginSuccess: _endLoading,\n    onLoginUserProgress: (state, action) => {\n      const { status } = action.payload;\n      if (status) state.status = { ...status };\n    },\n    loginUserSuccess: (state, action) => {\n      const { currentUser } = action.payload;\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.status = null;\n      state.currentUser = currentUser;\n    },\n    loginUserFailure: (state, action) => {\n      const { error } = action.payload;\n      state.loading = false;\n      state.connected = false;\n      state.errors = error;\n      state.status = null;\n    },\n    addSecretToFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    removeSecretFromCurrentFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    hideShortpass: state => {\n      state.showShortpass = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loading,\n  endLoading,\n  createSecret,\n  createSecretSuccess,\n  createSecretFailure,\n  disconnectUserSuccess,\n  connectionChange,\n  createUserSuccess,\n  createUserFailure,\n  disableShortLoginSuccess,\n  onLoginUserProgress,\n  loginUserSuccess,\n  loginUserFailure,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n  hideShortpass,\n} = AppUISlice.actions;\n\nexport const disconnectUser = () => dispatch => {\n  window.location.reload();\n};\n\nexport const createUser = ({\n  username,\n  password,\n  confirmPassword,\n}) => dispatch => {\n  dispatch(loading());\n  if (password !== confirmPassword) {\n    setTimeout(\n      () =>\n        dispatch(\n          createUserFailure({\n            error: { confirmPassword: 'Passwords mismatch' },\n          })\n        ),\n      100\n    );\n  } else {\n    secretin\n      .newUser(username, password)\n      .then(currentUser => dispatch(createUserSuccess({ currentUser })))\n      .catch(error => {\n        if (error instanceof UsernameAlreadyExistsError) {\n          return dispatch(\n            createUserFailure({\n              error: { username: 'User already exists' },\n            })\n          );\n        }\n        throw error;\n      });\n  }\n};\n\nexport const loginUser = ({ username, password, token }) => dispatch => {\n  console.time('decrypt');\n  dispatch(loading());\n  secretin\n    .loginUser(\n      username,\n      password,\n      token,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser =>\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      if (error instanceof UserNotFoundError) {\n        return dispatch(\n          loginUserFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      } else if (error instanceof InvalidPasswordError) {\n        if (token) {\n          return dispatch(\n            loginUserFailure({\n              error: {\n                totp: 'Token',\n                password: 'Invalid password',\n                token: 'or invalid token',\n              },\n            })\n          );\n        }\n        return dispatch(\n          loginUserFailure({\n            error: { password: 'Invalid password' },\n          })\n        );\n      } else if (error instanceof NeedTOTPTokenError) {\n        return dispatch(\n          loginUserFailure({\n            error: { totp: 'Token' },\n          })\n        );\n      }\n      throw error;\n    });\n};\n\nexport const loginUserProgress = status => (dispatch, getState) => {\n  const currentUser = secretin.currentUser;\n  switch (status.constructor) {\n    case DecryptMetadataCacheStatus:\n    case DecryptMetadataStatus:\n    case DecryptUserOptionsStatus: {\n      const prevStatus = getState().AppUI.status;\n      if (prevStatus) {\n        const { state, total } = prevStatus;\n        if (\n          state &&\n          total &&\n          Math.round((status.state / status.total) * 100) ===\n            Math.round((state / total) * 100)\n        ) {\n          return; // Progress % did not change, prevent dispatch\n        }\n      }\n      return dispatch(onLoginUserProgress({ status }));\n    }\n    case EndDecryptMetadataStatus:\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n      console.timeEnd('decrypt');\n      return dispatch(onLoginUserProgress({ status: null }));\n    default:\n      return;\n  }\n};\n\nexport const shortLogin = ({ shortpass }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .shortLogin(\n      shortpass,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser => {\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n    })\n    .catch(() => {\n      dispatch(\n        loginUserFailure({\n          error: { shortlogin: 'Expired shortpass' },\n        })\n      );\n      setTimeout(() => {\n        dispatch(hideShortpass());\n      }, 1000);\n    });\n};\n\nexport const disableShortLogin = () => dispatch => {\n  dispatch(loading());\n  secretin.deactivateShortLogin();\n  dispatch(disableShortLoginSuccess());\n  dispatch(hideShortpass());\n};\n\nexport default AppUISlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getAllSecrets = createSelector(\n  state => state.Metadata.metadata,\n  metadata => {\n    return Object.values(metadata).filter(secret => secret.type !== 'folder');\n  }\n);\n\nexport const getMySecrets = createSelector(\n  getAllSecrets,\n  state => state.AppUI.currentUser,\n  (allSecrets, currentUser) => {\n    if (!allSecrets) return [];\n    return allSecrets.filter(secret => {\n      const user = secret.users.find(\n        user => user.username === currentUser.username\n      );\n      return user?.rights === 2;\n    });\n  }\n);\n\nexport const getSecretsInFolder = createSelector(\n  state => state.Metadata.metadata,\n  state => state.AppUI.currentUser,\n  (state, folderId) => folderId,\n  (metadata, currentUser, folderId) => {\n    if (!currentUser || !metadata) {\n      return {};\n    }\n    const userId = currentUser.username;\n    return Object.values(metadata).filter(secret => {\n      const secretUser = secret.users.find(user => user.id === userId);\n      const folders = secretUser?.folders || {};\n      return (\n        (!folderId && folders.ROOT) ||\n        (folderId && Object.keys(folders).includes(folderId))\n      );\n    });\n  }\n);\n\nexport const getSharedSecrets = createSelector(getAllSecrets, allSecrets => {\n  if (!allSecrets) return [];\n  return allSecrets.filter(secret => secret.users.length > 1);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\nimport Dropdown from 'components/utilities/Dropdown';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    autoCompleteFromList: PropTypes.array,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.array,\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    autoCompleteFromList: [],\n    disabled: false,\n    readOnly: false,\n    actions: [],\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      autoCompleteSelected: false,\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n    if (this.props.autoFocus) {\n      setTimeout(() => this.input.focus(), 0);\n    }\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ autoCompleteSelected: false });\n    this.props.onChange({\n      name: this.props.name,\n      value: event.target.value,\n    });\n  }\n\n  handleAutoCompleteSelect(value) {\n    this.setState({ autoCompleteSelected: true });\n    this.props.onChange({ name: this.props.name, value });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n      autoCompleteFromList,\n    } = this.props;\n\n    const filteredAutoCompleteList =\n      this.props.value.length > 0\n        ? autoCompleteFromList.filter(elem =>\n            elem.toLowerCase().includes(this.props.value.toLowerCase())\n          )\n        : [];\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.length > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            value={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? 'on' : 'off'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {!this.state.autoCompleteSelected &&\n            filteredAutoCompleteList.length > 0 && (\n              <Dropdown\n                id=\"input--auto-complete-list\"\n                open={Boolean(this.props.value.length > 0)}\n              >\n                <Dropdown.Menu>\n                  {filteredAutoCompleteList.slice(0, 5).map(elem => (\n                    <Dropdown.MenuItem\n                      key={elem}\n                      onSelect={() => this.handleAutoCompleteSelect(elem)}\n                    >\n                      {elem}\n                    </Dropdown.MenuItem>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass UserConnectForm extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n    savedUsername: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: props.savedUsername,\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? 'Sign up' : 'Sign in';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={this.props.isOnline && secretin.api.db}\n        >\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '70%' }}\n            alt=\"logo\"\n            title={this.props.isOnline ? 'Secret-In.me' : 'Offline'}\n          />\n        </h2>\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.username}\n          autoFocus={this.props.savedUsername === ''}\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.password}\n          autoFocus={this.props.savedUsername !== ''}\n        />\n        {this.props.errors.totp && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.token}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.confirmPassword}\n          />\n        )}\n\n        {this.props.errors.shortLoginExpired && (\n          <h3 className=\"tooltip\">\n            {this.props.errors.shortLoginExpired.message}\n            <Icon id=\"info\" size={13} />\n            <span className=\"tooltiptext\">\n              {this.props.errors.shortLoginExpired.info}\n            </span>\n          </h3>\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                I already have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  sign in\n                </a>\n              </span>\n            ) : (\n              <span>\n                I don&apos;t have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  create one\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { online } = state.AppUI;\n  return {\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.closeOnBackdropClick ? props.onClose : undefined}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  closeOnBackdropClick: PropTypes.bool,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport moment from 'moment';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.dispatch(\n      AppUIActions.shortLogin({ shortpass: this.state.shortpass })\n    );\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(AppUIActions.disableShortLogin());\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n        <Input\n          label={`Shortpass${shortLoginActivationDate &&\n            ' (expires ' +\n              moment(shortLoginActivationDate)\n                .add(7, 'days')\n                .fromNow()})`}\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(UserConnectShortPass);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\nimport moment from 'moment';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n    showShortpass: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors, showShortpass } = this.props;\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    const shortLoginExpired = shortLoginActivationDate\n      ? moment(shortLoginActivationDate)\n          .add(7, 'days')\n          .isBefore(moment())\n      : false;\n\n    return (\n      <div className=\"user-connect\">\n        {showShortpass && !shortLoginExpired ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.shortlogin}\n          />\n        ) : (\n          <UserConnectForm\n            loading={loading}\n            savedUsername={savedUsername ? savedUsername : ''}\n            errors={{\n              ...errors,\n              ...(shortLoginActivationDate && shortLoginExpired\n                ? {\n                    shortLoginExpired: {\n                      message: `Your shortpass has expired `,\n                      info: `Previous shortpass will automatically reactivate for your account ${savedUsername} if you sign-in.`,\n                    },\n                  }\n                : {}),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { showShortpass, status } = state.AppUI;\n  return {\n    showShortpass,\n    status,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnect);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\n\nimport secretin from 'utils/secretin';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={isOnline && secretin.api.db}>\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '100%' }}\n            alt=\"logo\"\n            title={isOnline ? 'Secret-In.me' : 'Offline'}\n          ></img>\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            All\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            My secrets\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            Shared secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            Settings\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              Export secrets\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            Import secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a\n              className=\"sidebar-menu-link\"\n              onClick={() => window.location.reload()}\n            >\n              <Icon id=\"logout\" size=\"base\" />\n              Log out\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import uuid from 'uuid';\n\nclass SecretFieldRecord {\n  constructor(raw = {}) {\n    this.id = raw.id || uuid.v4();\n    this.date = raw.date || null;\n    this.type = raw.type || 'text';\n    this.label = raw.label || '';\n    this.content = raw.content || '';\n  }\n\n  getRaw() {\n    const { id, date, type, label, content } = this;\n    return {\n      id,\n      date,\n      type,\n      label,\n      content,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = {\n      ...rawData,\n      content: rawData.content,\n    };\n    if (raw.value) delete raw.value;\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import SecretFieldRecord from 'models/SecretFieldRecord';\n\nclass SecretDataRecord {\n  constructor(raw = {}) {\n    this.type = raw.type || 'default';\n    this.fields = raw.fields || [];\n  }\n\n  addNewField(params = {}) {\n    this.fields.push(new SecretFieldRecord(params).getRaw());\n    return this;\n  }\n\n  getRaw() {\n    const { type, fields } = this;\n    return {\n      type,\n      fields,\n    };\n  }\n\n  static createWithDefaultFields(defaultFields) {\n    return defaultFields.reduce((record, field) => {\n      return record.addNewField(field);\n    }, new SecretDataRecord());\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      switch (key) {\n        case 'fields':\n          return {\n            ...output,\n            fields: value.map(field =>\n              SecretFieldRecord.createFromRaw(field).getRaw()\n            ),\n          };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = [\n  { label: 'login', type: 'text' },\n  { label: 'password', type: 'password' },\n  { label: 'url', type: 'url' },\n];\n\nexport default SecretDataRecord;\n","import uuid from 'uuid';\n\nexport const UserRights = [\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n];\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User {\n  constructor(raw = {}) {\n    this.id = raw.username || uuid.v4();\n    this.username = raw.username || '';\n    this.rights = raw.rights || 0;\n    this.folders = raw.folders || {};\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const { id, username, rights, folders } = this;\n    return {\n      id,\n      username,\n      rights,\n      folders,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    return new User(rawData);\n  }\n}\n\nexport default User;\n","import moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret {\n  constructor(raw = {}) {\n    this.id = raw.id || null;\n    this.type = raw.type || null;\n    this.title = raw.title || null;\n    this.lastModifiedBy = raw.lastModifiedBy || null;\n    this.lastModifiedAt = raw.lastModifiedAt || null;\n    this.users = raw.users || {};\n    this.data = raw.data || null;\n  }\n\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (Object.keys(this.users) > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.find(_user => _user.id === user.username)?.rights || 0;\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data,\n      users,\n    } = this;\n    return {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data: data?.getRaw(),\n      users: users.map(user => user.getRaw()),\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      if (!value) return output;\n      switch (key) {\n        case 'users':\n          return {\n            ...output,\n            users: Object.values(value).map(user => User.createFromRaw(user)),\n          };\n        case 'data':\n          return {\n            ...output,\n            data: SecretDataRecord.createFromRaw(value).getRaw(),\n          };\n        case 'lastModifiedAt':\n          return { ...output, lastModifiedAt: moment(value) };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import secretin, { Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Secret from 'models/Secret';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nimport {\n  createSecretSuccess,\n  createSecretFailure,\n  loginUserProgress,\n  loginUserSuccess,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} from 'slices/AppUISlice';\nimport {\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} from 'slices/ShowSecretUISlice';\n\nconst { FriendNotFoundError } = Errors;\n\nconst buildSecrets = metadata => {\n  return metadata.map(secret => Secret.createFromRaw(secret));\n};\n\nconst getIndex = (state, secretId) =>\n  state.metadata.findIndex(secret => secret.id === secretId);\n\nconst getById = (state, secretId) =>\n  state.metadata.find(secret => secret.id === secretId);\n\n// Helper function reused in many actions\nconst _rebuildMetadata = (state, action) => {\n  const { metadata } = action.payload;\n  state.metadata = buildSecrets(Object.values(metadata));\n  const friendList = new Set();\n  Object.values(metadata).forEach(metadatum => {\n    Object.values(metadatum.users).forEach(user => {\n      friendList.add(user.username);\n    });\n  });\n  state.knownFriendList = Array.from(friendList).sort();\n};\n\nfunction getInitialState() {\n  return {\n    metadata: [],\n  };\n}\n\nexport const MetadataSlice = createSlice({\n  name: 'Metadata',\n  initialState: getInitialState(),\n  reducers: {\n    loadMetadataSuccess: _rebuildMetadata,\n    deleteSecretSuccess: _rebuildMetadata,\n    deleteSecretFailure: _rebuildMetadata,\n    addSecretToFolderSuccess: _rebuildMetadata,\n    removeSecretFromCurrentFolderSuccess: _rebuildMetadata,\n    createSecretUserRightsSuccess: _rebuildMetadata,\n    updateSecretSuccess: _rebuildMetadata,\n    renameSecretSuccess: _rebuildMetadata,\n\n    updateSecretUserRightsSuccess: (state, action) => {\n      const { secret, user, rights } = action.payload;\n      const secretMetadataIndex = getIndex(state, secret.id);\n      state.metadata[secretMetadataIndex].users = state.metadata[\n        secretMetadataIndex\n      ].users.map(userToUpdate => {\n        if (userToUpdate.id === user.id) {\n          return userToUpdate.merge({ rights });\n        }\n        return userToUpdate;\n      });\n    },\n\n    deleteSecretUserRightsSuccess: (state, action) => {\n      const { secret, user } = action.payload;\n      const secretMetadata = getById(state, secret.id);\n      secretMetadata.users = secretMetadata.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: _rebuildMetadata,\n    [loginUserSuccess]: _rebuildMetadata,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loadMetadataSuccess,\n  deleteSecretSuccess,\n  deleteSecretFailure,\n  addSecretToFolderSuccess,\n  removeSecretFromCurrentFolderSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretSuccess,\n  renameSecretSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} = MetadataSlice.actions;\n\nexport const loadMetadata = () => dispatch => {\n  console.time('refresh');\n  secretin\n    .refreshUser(true, (...args) => dispatch(loginUserProgress(...args)))\n    .then(() => {\n      console.timeEnd('refresh');\n      dispatch(\n        loadMetadataSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    });\n};\n\nexport const createSecret = (\n  { title, data, folder, isFolder } = { isFolder: false }\n) => dispatch => {\n  let promise;\n  if (isFolder) {\n    if (folder) {\n      promise = secretin.addFolder(title, folder);\n    } else {\n      promise = secretin.addFolder(title);\n    }\n  } else if (folder) {\n    promise = secretin.addSecret(title, data, folder);\n  } else {\n    promise = secretin.addSecret(title, data);\n  }\n\n  return promise\n    .then(() =>\n      dispatch(\n        createSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(createSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const updateSecret = ({ secret, data }) => async dispatch => {\n  dispatch(updateSecretStart());\n  try {\n    const payload = { data };\n    await secretin.editSecret(secret.id, data);\n    try {\n      payload.history = await secretin.getHistory(secret.id);\n    } catch (err) {\n      payload.history = [];\n      console.log(err);\n    }\n    dispatch(\n      updateSecretSuccess({\n        ...payload,\n        metadata: secretin.currentUser.metadatas,\n      })\n    );\n  } catch (error) {\n    dispatch(updateSecretFailure({ error }));\n    throw error;\n  }\n};\n\nexport const renameSecret = ({ secret, newTitle }) => dispatch => {\n  return secretin\n    .renameSecret(secret.id, newTitle)\n    .then(() => {\n      dispatch(\n        renameSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const deleteSecret = ({ secret }) => dispatch => {\n  return secretin\n    .deleteSecret(secret.id)\n    .catch(error => {\n      dispatch(\n        deleteSecretFailure({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n      throw error;\n    })\n    .then(() =>\n      dispatch(\n        deleteSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    );\n};\n\nexport const createSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() => {\n      dispatch(\n        createSecretUserRightsSuccess({\n          metadata: secretin.currentUser.metadatas,\n          user,\n          rights,\n        })\n      );\n    })\n    .catch(error => {\n      if (error instanceof FriendNotFoundError) {\n        return dispatch(\n          createSecretUserRightsFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      }\n      dispatch(\n        createSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const updateSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() =>\n      dispatch(updateSecretUserRightsSuccess({ secret, user, rights }))\n    )\n    .catch(error => {\n      dispatch(\n        updateSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const deleteSecretUserRights = ({ secret, user }) => dispatch => {\n  return secretin\n    .unshareSecret(secret.id, user.username)\n    .then(() => dispatch(deleteSecretUserRightsSuccess({ secret, user })))\n    .catch(error => {\n      dispatch(\n        deleteSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const addSecretToFolder = ({ secret, folder }) => dispatch => {\n  return secretin\n    .addSecretToFolder(secret.id, folder.id)\n    .then(() =>\n      dispatch(\n        addSecretToFolderSuccess({\n          secret,\n          folder,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        addSecretToFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const removeSecretFromCurrentFolder = ({\n  secret,\n  currentFolderId,\n}) => dispatch => {\n  return secretin\n    .removeSecretFromFolder(secret.id, currentFolderId)\n    .then(() =>\n      dispatch(\n        removeSecretFromCurrentFolderSuccess({\n          secret,\n          currentFolderId,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        removeSecretFromCurrentFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport default MetadataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport Secret from 'models/Secret';\nimport User from 'models/User';\nimport {\n  updateSecretSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} from 'slices/MetadataSlice';\n\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  secret: null,\n  errors: {},\n  tab: 'details',\n  isUpdating: false,\n  historyDepth: 0,\n});\n\nconst _handleError = (state, action) => {\n  const { error } = action.payload;\n  state.errors = error;\n  state.isUpdating = false;\n};\n\nexport const ShowSecretUISlice = createSlice({\n  name: 'ShowSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      state.secret = secret;\n      state.tab = tab || 'details';\n      state.errors = {};\n    },\n    showSecretSuccess: (state, action) => {\n      const { secret } = action.payload;\n      state.secret = secret;\n      state.errors = {};\n    },\n    hideModal: (state, action) => {\n      state.secret = null;\n      state.errors = {};\n      state.historyDepth = 0;\n    },\n    changeTab: (state, action) => {\n      const { tab } = action.payload;\n      state.tab = tab;\n    },\n    updateSecretStart: (state, action) => {\n      state.isUpdating = true;\n      state.errors = {};\n    },\n    historyShowOlder: state => {\n      if (state.historyDepth + 1 < state.secret.history.length)\n        state.historyDepth += 1;\n    },\n    historyShowNewer: state => {\n      if (state.historyDepth - 1 >= 0) state.historyDepth -= 1;\n    },\n    updateSecretFailure: _handleError,\n    createSecretUserRightsFailure: _handleError,\n    updateSecretUserRightsFailure: _handleError,\n    deleteSecretUserRightsFailure: _handleError,\n  },\n  extraReducers: {\n    [updateSecretSuccess]: (state, action) => {\n      const { metadata, history } = action.payload;\n      const secretMetadata = metadata[state.secret.id];\n      // The metadata coming back from Secretin has flat user objects indexed by id\n      // Recreate the array of User instances\n      secretMetadata.users = Object.values(secretMetadata.users).map(rawUser =>\n        User.createFromRaw(rawUser)\n      );\n      state.secret = state.secret.merge(metadata[state.secret.id]);\n      state.secret.history = history;\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [createSecretUserRightsSuccess]: (state, action) => {\n      const { user, rights } = action.payload;\n      state.secret.users.push(user.merge({ rights }));\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [updateSecretUserRightsSuccess]: (state, action) => {\n      const { rights, user } = action.payload;\n      state.secret.users = state.secret.users.map(_user => {\n        if (_user.id === user.id) return _user.merge({ rights });\n        return _user;\n      });\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [deleteSecretUserRightsSuccess]: (state, action) => {\n      const { user } = action.payload;\n      state.secret.users = state.secret.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  showSecretSuccess,\n  hideModal,\n  changeTab,\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n  historyShowOlder,\n  historyShowNewer,\n} = ShowSecretUISlice.actions;\n\nexport const showSecret = ({ secret, tab }) => async dispatch => {\n  dispatch(showModal({ secret, tab }));\n  if (secret.type === 'folder') {\n    dispatch(showSecretSuccess({ secret }));\n  } else {\n    const data = await secretin.getSecret(secret.id);\n    const raw = !data.fields ? { fields: data } : data;\n    const secretWithData = Secret.createFromRaw(secret.getRaw());\n    secretWithData.data = SecretDataRecord.createFromRaw(raw).getRaw();\n    try {\n      secretWithData.history = await secretin.getHistory(secret.id);\n    } catch (error) {\n      console.log(error);\n      secretWithData.history = [];\n    }\n    dispatch(\n      showSecretSuccess({\n        secret: secretWithData,\n      })\n    );\n  }\n};\n\nexport default ShowSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { showSecretSuccess } from 'slices/ShowSecretUISlice';\nimport { hideModal } from 'slices/ShowSecretUISlice';\nimport { updateSecretSuccess } from 'slices/MetadataSlice';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nfunction getInitialState() {\n  return {\n    isEditing: false,\n    data: null,\n  };\n}\n\nexport const EditSecretUISlice = createSlice({\n  name: 'EditSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    updateData: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.data;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      state.isEditing = true;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [showSecretSuccess]: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.secret.data;\n    },\n    [hideModal]: state => {\n      state.isEditing = false;\n      state.data = null;\n    },\n    [updateSecretSuccess]: state => {\n      state.isEditing = false;\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateData, changeField } = EditSecretUISlice.actions;\n\nexport default EditSecretUISlice.reducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\n\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({ value: '' });\n    setTimeout(() => {\n      this.handleChange({\n        value: Utils.PasswordGenerator.generatePassword(),\n      });\n    }, 100);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            Open\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        Copy\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.field.label}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={actions}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Button\n              title=\"Generate password\"\n              buttonStyle=\"icon\"\n              onClick={this.onGenerate}\n              tabIndex=\"-1\"\n            >\n              <Icon id=\"generate\" size=\"small\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecretField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.array,\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as EditSecretUIActions from 'slices/EditSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.fields}\n          onChange={\n            this.props.canUpdate ? this.props.actions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(EditSecretUIActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = ownProps.data || state.EditSecretUI.data;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Icon from 'components/utilities/Icon';\n\nexport const SecretShowHeader = ({\n  icon,\n  title,\n  canEditTitle,\n  isUpdating,\n  onEditTitle,\n}) => {\n  return (\n    <div>\n      <Icon id={icon} size=\"small\" />\n      <SecretEditableTitle\n        title={title}\n        canUpdate={canEditTitle}\n        isUpdating={isUpdating}\n        onSubmit={newTitle => {\n          if (newTitle !== title) {\n            onEditTitle(newTitle);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nSecretShowHeader.propTypes = {\n  canEditTitle: PropTypes.bool,\n  title: PropTypes.string,\n  icon: PropTypes.string,\n  isUpdating: PropTypes.bool,\n  onEditTitle: PropTypes.func,\n};\n\nexport default SecretShowHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst SecretHistoryButton = ({ side, disabled, onClick }) => {\n  return (\n    <div className=\"secret-history-button\">\n      <Button\n        title={side}\n        buttonStyle=\"icon\"\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <Icon id={side} />\n      </Button>\n    </div>\n  );\n};\n\nSecretHistoryButton.propTypes = {\n  disabled: PropTypes.bool,\n  side: PropTypes.oneOf('previous', 'next'),\n  onClick: PropTypes.func,\n};\n\nexport default SecretHistoryButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport SecretHistoryButton from 'components/secrets/SecretHistoryButton';\nimport SecretEdit from 'components/secrets/SecretEdit';\n\nclass SecretHistory extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    historyDepth: PropTypes.number,\n    historyCount: PropTypes.number,\n    modifiedAt: PropTypes.string,\n    isLatest: PropTypes.bool,\n    isOldest: PropTypes.bool,\n    dispatch: PropTypes.func,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const {\n      historyDepth,\n      historyCount,\n      modifiedAt,\n      isLatest,\n      isOldest,\n      data,\n    } = this.props;\n    const { historyShowOlder, historyShowNewer } = this.props.actions;\n    const color = isLatest ? '#1abc9c' : '#afafaf';\n    return (\n      <div className=\"secret-history\">\n        <div\n          className=\"secret-history-header\"\n          style={{\n            backgroundColor: color,\n            borderColor: color,\n          }}\n        >\n          <div className=\"secret-history-navigation\">\n            <SecretHistoryButton\n              disabled={historyDepth >= historyCount - 1}\n              side=\"previous\"\n              onClick={historyShowOlder}\n            />\n            <SecretHistoryButton\n              disabled={historyDepth <= 0}\n              side=\"next\"\n              onClick={historyShowNewer}\n            />\n          </div>\n          <span\n            style={{ color: 'white', fontWeight: '600' }}\n            title={moment(modifiedAt).format('MMM Do, YYYY HH:mm')}\n          >\n            {isLatest && '(latest)'}\n            {isOldest && '(oldest)'} {moment(modifiedAt).fromNow()}\n          </span>\n        </div>\n        <div className=\"secret-history-fields\">\n          <SecretEdit isUpdating={false} canUpdate={false} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { secret, historyDepth } = state.ShowSecretUI;\n  return {\n    data: secret?.history[historyDepth]?.secret,\n    modifiedAt: secret?.history[historyDepth]?.lastModifiedAt,\n    historyCount: secret?.history.length,\n    historyDepth,\n    isLatest: historyDepth === 0,\n    isOldest: historyDepth + 1 >= secret?.history.length,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ShowSecretUIActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretHistory);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.length > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      // TODO : figure out sorting\n      // .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ]);\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps)(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'emerland',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'sun-flower',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    knownFriendList: PropTypes.array,\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: new User(),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.merge({ [name]: value }),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      'read access',\n      'read and write access',\n      'read, write and share access',\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: 'Are you sure?',\n      text: (\n        <span>\n          You are about to give <b>{rights}</b> to <b>{to}</b> on <b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: 'Share the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(\n          MetadataActions.createSecretUserRights({\n            secret: this.props.secret,\n            user: this.state.user,\n            rights: this.state.user.rights,\n          })\n        );\n        this.setState({\n          user: new User(),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder=\"User name...\"\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          autoCompleteFromList={this.props.knownFriendList}\n          error={this.props.errors.username}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { knownFriendList } = state.Metadata;\n  return {\n    knownFriendList,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserListNew);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Secret from 'models/Secret';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser) {\n  if (cantShare) {\n    return \"You don't have the permission to share this secret\";\n  } else if (isCurrentUser) {\n    return \"You can't modify or remove yourself\";\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    isUpdating: PropTypes.bool,\n    isOnline: PropTypes.bool,\n    currentUser: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    this.props.dispatch(\n      MetadataActions.updateSecretUserRights({\n        secret: this.props.secret,\n        user,\n        rights,\n      })\n    );\n  }\n\n  onRemoveUserRights(user) {\n    this.props.dispatch(\n      MetadataActions.deleteSecretUserRights({\n        secret: this.props.secret,\n        user,\n      })\n    );\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && this.props.isOnline;\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users.map(user => (\n            <SecretUserListItem\n              key={user.id}\n              user={user}\n              disabled={\n                !canShare ||\n                currentUser.username === user.id ||\n                this.props.isUpdating\n              }\n              disabledReason={getDisabledReason(\n                !canShare,\n                currentUser.username === user.id\n              )}\n              onChangeUserRights={this.onChangeUserRights}\n              onRemoveUserRights={this.onRemoveUserRights}\n            />\n          ))}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser, online } = state.AppUI;\n  return {\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport SecretShowHeader from 'components/secrets/SecretShowHeader';\nimport SecretHistory from 'components/secrets/SecretHistory';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    data: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    showSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    this.props.showSecretActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    this.props.metadataActions.updateSecret({\n      secret: this.props.secret,\n      data: this.props.data,\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = this.props.currentUser;\n    const users = this.props.secret.users.filter(\n      user => user.id !== currentUserId\n    );\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(this.props.currentUser) &&\n      (this.props.isOnline || users.length === 0);\n\n    return (\n      <Modal\n        show={this.props.shown}\n        closeOnBackdropClick={!this.props.isEditing}\n        onClose={this.props.showSecretActions.hideModal}\n      >\n        <Modal.Header>\n          <SecretShowHeader\n            icon={this.props.secret.getIcon()}\n            title={this.props.secret.title}\n            canEditTitle={canUpdate}\n            isUpdating={this.props.isUpdating}\n            onEditTitle={newTitle => {\n              setTimeout(() => {\n                this.props.metadataActions.renameSecret({\n                  secret: this.props.secret,\n                  newTitle,\n                });\n              });\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {this.props.secret.type === 'windows' && (\n            <Flash type=\"info\">\n              This secret is used for your Windows domain authentication. It\n              cannot be deleted.\n            </Flash>\n          )}\n          <Tabs\n            id=\"secret-tabs\"\n            activeKey={this.props.tab}\n            onSelect={this.handleChangeTab}\n          >\n            {this.props.secret.type !== 'folder' && (\n              <Tab eventKey=\"details\" title=\"Details\">\n                {this.props.secret.type === 'windows' ? (\n                  <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                ) : (\n                  <SecretEdit\n                    isUpdating={this.props.isUpdating}\n                    canUpdate={canUpdate}\n                    data={this.props.secret.fields}\n                  />\n                )}\n              </Tab>\n            )}\n\n            {this.props.secret.type !== 'windows' && (\n              <Tab eventKey=\"access\" title=\"Who has access\">\n                <SecretUserList\n                  isUpdating={this.props.isUpdating}\n                  errors={this.props.errors}\n                  secret={this.props.secret}\n                />\n              </Tab>\n            )}\n\n            {this.props.secret?.history?.length > 1 && (\n              <Tab eventKey=\"history\" title=\"History\">\n                <SecretHistory />\n              </Tab>\n            )}\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.showSecretActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            {this.props.isEditing ? 'Cancel' : 'Close'}\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              Save\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSecretActions: bindActionCreators(ShowSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { secret, errors, tab, isUpdating } = state.ShowSecretUI;\n  const { isEditing, data } = state.EditSecretUI;\n  const { currentUser, online } = state.AppUI;\n  return {\n    secret,\n    shown: !!secret,\n    errors,\n    tab,\n    isUpdating,\n    isEditing,\n    data,\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretShow);\n","import { createSlice } from '@reduxjs/toolkit';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nimport { createSecretSuccess, disconnectUserSuccess } from 'slices/AppUISlice';\nimport secretin from 'utils/secretin';\nimport { Utils } from 'secretin';\n\nconst getInitialState = () => ({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ).getRaw(),\n});\n\nexport const NewSecretUISlice = createSlice({\n  name: 'NewSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { folder, isFolder } = action.payload;\n      state.shown = true;\n      state.title = `Untitled ${isFolder ? 'folder' : 'secret'}`;\n      state.folder = folder;\n      state.isFolder = isFolder;\n      const loginIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'login'\n      );\n      const passwordIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'password'\n      );\n      state.data.fields[loginIndex].content =\n        secretin.currentUser.options?.defaultUsername ?? '';\n      state.data.fields[\n        passwordIndex\n      ].content = Utils.PasswordGenerator.generatePassword();\n    },\n    hideModal: () => getInitialState(),\n    changeTitle: (state, action) => {\n      const { value } = action.payload;\n      state.title = value;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  hideModal,\n  changeTitle,\n  changeField,\n} = NewSecretUISlice.actions;\n\nexport default NewSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nimport {\n  loginUserSuccess,\n  createUserSuccess,\n  disconnectUserSuccess,\n} from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  options: {},\n  errors: {},\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: {\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  },\n  rescueCodes: [],\n  loading: false,\n});\n\nexport const OptionsSlice = createSlice({\n  name: 'Options',\n  initialState: getInitialState(),\n  reducers: {\n    _activateTotp: (state, action) => {\n      state.loading = true;\n    },\n\n    _activateShortLogin: (state, action) => {\n      state.loading = true;\n    },\n\n    _toggleTotp: (state, action) => {\n      const { checked } = action.payload;\n      state.showQRCode = checked;\n    },\n\n    _toggleShortLogin: (state, action) => {\n      const { checked } = action.payload;\n      state.showShortLogin = checked;\n    },\n\n    activateTotpFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors.totp = error;\n      state.loading = false;\n    },\n\n    hideQRCode: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    hideShortLogin: (state, action) => {\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    activateTotpSuccess: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.totp = true;\n    },\n\n    deactivateTotpSuccess: (state, action) => {\n      state.options.totp = false;\n    },\n\n    deactivateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.options.shortLogin = shortLogin;\n    },\n\n    activateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.shortLogin = shortLogin;\n    },\n\n    changeDelaySuccess: (state, action) => {\n      const { timeToClose } = action.payload;\n      state.options.timeToClose = timeToClose;\n    },\n\n    changeDefaultUsernameSuccess: (state, action) => {\n      const { defaultUsername } = action.payload;\n      state.options.defaultUsername = defaultUsername;\n    },\n\n    changeNewPass1: (state, action) => {\n      const newPass1 = action.payload;\n      state.newPass.newPass1 = newPass1.value;\n    },\n\n    changeNewPass2: (state, action) => {\n      const newPass2 = action.payload;\n      state.newPass.newPass2 = newPass2.value;\n    },\n\n    showChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = true;\n    },\n\n    hideChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = false;\n    },\n\n    _changePassword: (state, action) => {\n      state.newPass.loading = true;\n      state.newPass.error = '';\n    },\n\n    changePasswordSuccess: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.status = 'success';\n    },\n\n    changePasswordFailure: (state, action) => {\n      state.newPass.error = 'Password change failed';\n      state.newPass.loading = false;\n      state.newPass.status = 'failure';\n    },\n\n    showRescueCodesSuccess: (state, action) => {\n      const { rescueCodes } = action.payload;\n      state.rescueCodes = rescueCodes;\n      state.showRescueCodes = true;\n    },\n\n    hideRescueCodes: (state, action) => {\n      state.rescueCodes = [];\n      state.showRescueCodes = false;\n    },\n  },\n  extraReducers: {\n    [loginUserSuccess]: (state, action) => {\n      const { options } = action.payload;\n      state.options = options;\n    },\n    [createUserSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  _activateTotp,\n  _activateShortLogin,\n  _toggleTotp,\n  _toggleShortLogin,\n  activateTotpFailure,\n  activateTotpSuccess,\n  hideQRCode,\n  hideShortLogin,\n  deactivateTotpSuccess,\n  deactivateShortLoginSuccess,\n  activateShortLoginSuccess,\n  changeDelaySuccess,\n  changeDefaultUsernameSuccess,\n  changeNewPass1,\n  changeNewPass2,\n  showChangePassword,\n  hideChangePassword,\n  _changePassword,\n  changePasswordSuccess,\n  changePasswordFailure,\n  showRescueCodesSuccess,\n  hideRescueCodes,\n} = OptionsSlice.actions;\n\nexport const deactivateTotp = () => (dispatch, getState) =>\n  secretin\n    .deactivateTotp()\n    .then(() => dispatch(deactivateTotpSuccess()))\n    .catch(() => {\n      // dispatch(deactivateTotpFailure());\n    });\n\nexport const activateTotp = ({ seed, token }) => (dispatch, getState) => {\n  dispatch(_activateTotp());\n  return secretin.api\n    .testTotp(seed.b32, token)\n    .then(() => secretin.activateTotp(seed))\n    .then(() => dispatch(activateTotpSuccess()))\n    .catch(err => {\n      if (err === 'Invalid couple') {\n        dispatch(activateTotpFailure({ error: 'Synchronisation error' }));\n      } else {\n        dispatch(activateTotpFailure({ error: 'An error occured' }));\n      }\n    });\n};\n\nexport const activateShortLogin = ({ shortpass }) => (dispatch, getState) => {\n  dispatch(_activateShortLogin());\n  return secretin\n    .activateShortLogin(shortpass, uuid.v4())\n    .then(() =>\n      dispatch(\n        activateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(activateShortLoginFailure());\n    });\n};\n\nexport const deactivateShortLogin = () => (dispatch, getState) => {\n  secretin\n    .deactivateShortLogin()\n    .then(() =>\n      dispatch(\n        deactivateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(deactivateShortLoginFailure());\n    });\n};\n\nexport const changePassword = ({ newPass }) => (dispatch, getState) => {\n  dispatch(_changePassword());\n  secretin\n    .changePassword(newPass)\n    .then(() => {\n      dispatch(changePasswordSuccess());\n    })\n    .catch(() => {\n      dispatch(changePasswordFailure());\n    });\n};\n\nexport const toggleTotp = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleTotp({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateTotp());\n};\n\nexport const showRescueCodes = () => (dispatch, getState) => {\n  if (\n    !window.confirm(\n      'Be careful, this will replace your previously generated codes. Continue?'\n    )\n  ) {\n    return;\n  }\n  secretin.getRescueCodes().then(rescueCodes => {\n    dispatch(showRescueCodesSuccess({ rescueCodes }));\n  });\n};\n\nexport const toggleShortLogin = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleShortLogin({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateShortLogin());\n};\n\nexport const toggleAutoLogout = ({ checked }) => (dispatch, getState) => {\n  const delay = checked ? 30 : 0;\n  return dispatch(changeTimeToClose({ timeToClose: delay }));\n};\n\nexport const changeDefaultUsername = ({ defaultUsername }) => (\n  dispatch,\n  getState\n) => {\n  secretin\n    .editOption('defaultUsername', defaultUsername)\n    .then(() => {\n      dispatch(changeDefaultUsernameSuccess({ defaultUsername }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport const changeTimeToClose = ({ timeToClose }) => (dispatch, getState) => {\n  secretin\n    .editOption('timeToClose', timeToClose)\n    .then(() => {\n      dispatch(changeDelaySuccess({ timeToClose }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport default OptionsSlice.reducer;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport importers from 'utils/importers';\nimport { findKey } from 'lodash';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: {},\n});\n\nexport const ImportSlice = createSlice({\n  name: 'Import',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      this.state.secret = secret;\n      this.state.tab = tab || 'details';\n      this.state.errors = {};\n    },\n    _importSecrets: (state, action) => {\n      state.importing = true;\n      state.success = false;\n      state.error = '';\n    },\n\n    detectTypeFailure: (state, action) => {\n      const { error } = action.payload;\n      state.error = error;\n      state.importType = '';\n      state.mandatoryFields = {};\n    },\n\n    detectTypeSuccess: (state, action) => {\n      const { file, importType, mandatoryFields } = action.payload;\n      state.importType = importType;\n      state.error = '';\n      state.file = file;\n      state.mandatoryFields = mandatoryFields;\n    },\n\n    importSecretsProgress: (state, action) => {\n      const { importStatus, importTotal } = action.payload;\n      state.error = '';\n      state.importStatus = importStatus;\n      state.importTotal = importTotal;\n    },\n\n    importSecretsSuccess: (state, action) => {\n      state.importing = false;\n      state.success = true;\n      state.importType = '';\n      state.error = '';\n      state.importStatus = 0;\n      state.importTotal = 0;\n      state.mandatoryFields = {};\n    },\n\n    importSecretsFailure: (state, action) => {\n      const { error } = action.payload;\n\n      state.importing = false;\n      state.success = false;\n      state.importType = '';\n      state.error = error;\n      state.mandatoryFields = {};\n    },\n\n    defaultStore: (state, action) => {\n      state = getInitialState();\n    },\n\n    changeMandatoryField: (state, action) => {\n      const { field, value } = action.payload;\n      state.mandatoryFields[field.name].value = value;\n    },\n  },\n  extraReducers: {\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  _importSecrets,\n  detectTypeFailure,\n  detectTypeSuccess,\n  importSecretsProgress,\n  importSecretsSuccess,\n  importSecretsFailure,\n  defaultStore,\n  changeMandatoryField,\n} = ImportSlice.actions;\n\nexport const detectType = ({ file }) => (dispatch, getState) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = ({ target }) => {\n    const file = target.result;\n    const importType = findKey(importers, importer => importer.detect(file));\n\n    if (typeof importType !== 'undefined') {\n      const mandatoryFields = importers[importType].mandatoryFields;\n      dispatch(detectTypeSuccess({ file, importType, mandatoryFields }));\n    } else {\n      dispatch(detectTypeFailure({ error: 'Invalid type' }));\n    }\n  };\n  return reader;\n};\n\nexport const importSecrets = ({ file, type, mandatoryFields }) => (\n  dispatch,\n  getState\n) => {\n  dispatch(_importSecrets());\n  importers[type]\n    .parse(\n      file,\n      mandatoryFields,\n      ({ state: importStatus, total: importTotal }) =>\n        dispatch(\n          importSecretsProgress({\n            importStatus,\n            importTotal,\n          })\n        )\n    )\n    .then(() => {\n      dispatch(importSecretsSuccess());\n    })\n    .catch(error => {\n      dispatch(importSecretsFailure({ error }));\n    });\n};\n\nexport default ImportSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport AppUIReducer from '../slices/AppUISlice';\nimport EditSecretUIReducer from '../slices/EditSecretUISlice';\nimport MetadataReducer from '../slices/MetadataSlice';\nimport NewSecretUIReducer from '../slices/NewSecretUISlice';\nimport ShowSecretUIReducer from '../slices/ShowSecretUISlice';\nimport OptionsReducer from '../slices/OptionsSlice';\nimport ImportReducer from '../slices/ImportSlice';\n\nexport default configureStore({\n  reducer: {\n    AppUI: AppUIReducer,\n    EditSecretUI: EditSecretUIReducer,\n    Metadata: MetadataReducer,\n    NewSecretUI: NewSecretUIReducer,\n    ShowSecretUI: ShowSecretUIReducer,\n    Options: OptionsReducer,\n    Import: ImportReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: [\n          'AppUI/onLoginUserProgress',\n          'AppUI/loginUserSuccess',\n          'Metadata/addSecretToFolderSuccess',\n        ],\n        // Ignore these paths in the state\n        ignoredPaths: ['AppUI.currentUser', 'Metadata.metadata'],\n      },\n    }),\n});\n","import urljoin from 'url-join';\n\nexport function buildSecretURL(folders = [], basePath = '/secrets') {\n  return urljoin(basePath, folders.join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.array,\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users.map(user => (\n        <UserAvatar key={user.id} user={user} size={size} />\n      ))}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n    folder: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({\n        secret,\n        tab: secret.type === 'folder' ? 'access' : 'details',\n      })\n    );\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({ secret, tab: 'access' })\n    );\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    this.props.dispatch(\n      MetadataActions.removeSecretFromCurrentFolder({\n        secret,\n        currentFolderId,\n      })\n    );\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () =>\n        this.props.dispatch(MetadataActions.deleteSecret({ secret })),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret, currentUser, folder } = this.props;\n\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!this.props.isOnline}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!this.props.isOnline}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { online, currentUser } = state.AppUI;\n  const { metadata } = state.Metadata;\n  return {\n    isOnline: online,\n    currentUser,\n    folder: metadata.find(m => m.id === ownProps.parentFolderId),\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListItemOptions);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport store from 'stores/store';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n\n  const secretRights = secret.users.find(\n    user => user.id === currentUser.username\n  ).rights;\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL([...folders, secret.id])}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders[folders.length - 1]}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    store.dispatch(MetadataActions.addSecretToFolder({ secret, folder }));\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = store.getState().AppUI.currentUser;\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.users.find(user => user.id === currentUserId).rights !==\n        0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.users.find(user => user.id === currentUserId).rights !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  const dispatch = useDispatch();\n\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const secretRights =\n    secret.users.find(user => user.id === currentUser.username)?.rights || 0;\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => dispatch(ShowSecretUIActions.showSecret({ secret }))}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders[folders.length - 1]}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.array,\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: [],\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const metadata = useSelector(state => state.Metadata.metadata);\n\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) => [\n      ...memo,\n      {\n        folderId,\n        link: buildSecretURL(\n          [folderId],\n          memo[memo.length - 1] ? memo[memo.length - 1].link : undefined\n        ),\n      },\n    ],\n    []\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = metadata?.find(m => m.id === folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return [\n      ...links,\n      <div key={key} className=\"breadcrumb-item\">\n        <NavLink\n          to={link}\n          className=\"breadcrumb-link\"\n          activeClassName=\"breadcrumb-link--active\"\n          exact\n        >\n          {folder.title}\n        </NavLink>\n      </div>,\n      <Icon\n        key={`${key}-sep`}\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />,\n    ];\n  }, []);\n\n  if (withTitle) {\n    breadcrumb.unshift(\n      <Icon\n        key=\"home-sep\"\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />\n    );\n\n    breadcrumb.unshift(\n      <Title\n        key=\"home\"\n        title={currentUser.username}\n        icon=\"home\"\n        link=\"/secrets/\"\n      />\n    );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  if (folder.root) return null;\n  return (\n    <div className=\"secret-list-folder\">\n      <div colSpan=\"4\" className=\"secret-list-folder-info\">\n        <SecretListBreadcrumb folders={folder.breadcrumb} withTitle={false} />\n      </div>\n    </div>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { escapeRegExp, set } from 'lodash';\nimport { List, AutoSizer } from 'react-virtualized';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.array,\n    isDragging: PropTypes.bool,\n    folders: PropTypes.array,\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n    currentUser: PropTypes.object,\n    allFolders: PropTypes.array,\n  };\n\n  render() {\n    const { allFolders, currentUser } = this.props;\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = {};\n    let sortedFolderRows = [];\n\n    const getUser = (users, username) =>\n      users.find(user => user.id === username);\n\n    if (this.props.filtered) {\n      filteredSecrets.forEach(secret => {\n        let folder = 'ROOT';\n        const user = getUser(secret.users, currentUser.username);\n        if (user) folder = Object.keys(user.folders)[0];\n        if (typeof folder === 'undefined') {\n          folder = 'ROOT';\n        }\n        set(filteredFolders, `${folder}.secrets.${secret.id}`, secret);\n        if (folder === 'ROOT') {\n          filteredFolders[folder].name = '';\n          filteredFolders[folder].root = true;\n        } else {\n          let root = false;\n          let breadcrumb = [];\n          let fullName = [];\n          let currentFolder = folder;\n          while (!root) {\n            const currentFolderDetails = allFolders.find(\n              fold => fold.id === currentFolder\n            );\n            fullName.unshift(currentFolderDetails.title);\n            root = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            ).includes('ROOT');\n\n            breadcrumb.unshift(currentFolder);\n            currentFolder = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            )[0];\n          }\n          filteredFolders[folder].name = fullName.join('/');\n          filteredFolders[folder].breadcrumb = breadcrumb;\n        }\n      });\n      let sortedFolders = Object.entries(filteredFolders).map(\n        ([id, folder]) => ({\n          ...folder,\n          id,\n        })\n      );\n      sortedFolders.sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      );\n      sortedFolders.sort((a, b) => a.root);\n      sortedFolderRows = sortedFolders\n        .map(folder => {\n          const secrets = Object.values(folder.secrets);\n          secrets.sort((a, b) => {\n            if (a.title === null) return 1;\n            if (b.title === null) return -1;\n            return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n          });\n          return [\n            { rowType: 'header', rowData: folder },\n            ...secrets.map(secret => ({ rowType: 'row', rowData: secret })),\n          ];\n        })\n        .flat();\n    } else {\n      filteredSecrets.sort((a, b) =>\n        a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n      );\n    }\n\n    const renderFilteredRow = ({ index, key, style }) => {\n      const { rowType, rowData } = sortedFolderRows[index];\n      if (rowType === 'header') {\n        return (\n          <div key={key} style={style}>\n            <SecretListFolderInfo key={rowData.id} folder={rowData} />\n          </div>\n        );\n      }\n\n      return (\n        <div key={key} style={style}>\n          <SecretListItemFolderSecret key={rowData.id} secret={rowData} />\n        </div>\n      );\n    };\n\n    const renderStandardRow = ({ index, key, style }) => {\n      const secret = filteredSecrets[index];\n      return (\n        <div key={key} style={style}>\n          <SecretListItem\n            key={secret.id}\n            secret={secret}\n            folders={this.props.folders}\n          />\n        </div>\n      );\n    };\n\n    const getRowHeight = ({ index }) => {\n      if (this.props.filtered && sortedFolderRows[index].rowType === 'header') {\n        const folder = sortedFolderRows[index].rowData;\n        if (folder.root) return 0;\n        return 75;\n      }\n      return 50;\n    };\n\n    return (\n      <div>\n        <div className={className}>\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  width={width}\n                  height={height}\n                  rowHeight={getRowHeight}\n                  rowRenderer={\n                    this.props.filtered ? renderFilteredRow : renderStandardRow\n                  }\n                  rowCount={\n                    this.props.filtered\n                      ? sortedFolderRows.length\n                      : filteredSecrets.length\n                  }\n                />\n              );\n            }}\n          </AutoSizer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.AppUI;\n  const allFolders =\n    Object.values(state.Metadata.metadata).filter(\n      secret => secret.type === 'folder'\n    ) || [];\n\n  return {\n    currentUser,\n    allFolders,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={() => dispatch(MetadataActions.loadMetadata())}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.object,\n    newSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    isLoading: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    this.props.metadataActions.createSecret({\n      folder: folder?.id,\n      isFolder,\n      title,\n      data,\n    });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.newSecretActions.hideModal}\n      >\n        <Modal.Header title={isFolder ? 'Add new folder' : 'Add new secret'} />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={isFolder ? 'Folder title' : 'Secret title'}\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={this.props.newSecretActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={this.props.newSecretActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.newSecretActions.hideModal}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={this.props.isLoading}\n          >\n            {isFolder ? 'Add folder' : 'Add secret'}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newSecretActions: bindActionCreators(NewSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.NewSecretUI,\n    isLoading: state.AppUI.loading,\n    folder: ownProps.folder,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretNew);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Secret from 'models/Secret';\n\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n};\n\nfunction SecretListNew({ folder }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const dispatch = useDispatch();\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew folder={folder} />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n          )\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        Add secret\n      </Button>\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n          )\n        }\n      >\n        <Icon id=\"add-folder\" size=\"small\" />\n        Create folder\n      </Button>\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SecretListSearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\nimport { connect } from 'react-redux';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    show: PropTypes.bool,\n    message: PropTypes.string,\n    state: PropTypes.number,\n    total: PropTypes.number,\n  };\n\n  static getDerivedStateFromProps({ message }) {\n    const nextMessage =\n      message instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    if (!this.props.show) return null;\n    const { state, total } = this.props;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = _state => {\n  const status = _state.AppUI.status;\n  if (!status)\n    return {\n      show: false,\n    };\n  const { message, state, total } = _state.AppUI.status;\n  return {\n    show: true,\n    message,\n    state,\n    total,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectProgress);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\n\nimport Secret from 'models/Secret';\n\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.array,\n    secrets: PropTypes.array,\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n    status: PropTypes.string,\n  };\n\n  static defaultProps = {\n    folders: [],\n    secrets: {},\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = 'All';\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = 'My secrets';\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = 'Shared secrets';\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        <UserConnectProgress />\n        <div className=\"page-content\">\n          {!this.props.showAll &&\n            !this.props.showMine &&\n            !this.props.showShared && (\n              <div className=\"page-content-actions\">\n                <SecretListNew folder={this.props.folder} />\n              </div>\n            )}\n          <div className=\"secret-list-content-table-header\">\n            <div>\n              <div className=\"secret-list-item-column--title\">Title</div>\n              <div className=\"secret-list-item-column--last-modified\">\n                Last modified\n              </div>\n              <div className=\"secret-list-item-column--shared-with\">\n                Shared with\n              </div>\n              <div className=\"secret-list-item-column--actions\" />\n            </div>\n          </div>\n          <SecretListContent\n            filtered={filtered}\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={this.props.status === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(SecretList)\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defaultMemoize } from 'reselect';\nimport equal from 'fast-deep-equal/es6';\n\nimport SecretList from 'components/secrets/SecretList';\n\nimport {\n  getAllSecrets,\n  getMySecrets,\n  getSecretsInFolder,\n  getSharedSecrets,\n} from 'selectors/MetadataSelectors';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nconst getFolders = defaultMemoize(\n  params => {\n    return params.path ? params.path.split('/') : [];\n  },\n  (previousVal, currentVal) => equal(previousVal, currentVal)\n);\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  const metadata = useSelector(state => state.Metadata.metadata);\n  const allSecrets = useSelector(getAllSecrets);\n  const mySecrets = useSelector(getMySecrets);\n  const sharedSecrets = useSelector(getSharedSecrets);\n  const folders = getFolders(params);\n  const folderId = folders[folders.length - 1];\n  const folderSecrets = useSelector(state =>\n    getSecretsInFolder(state, folderId)\n  );\n  if (showAll) {\n    return <SecretList secrets={allSecrets} showAll />;\n  } else if (showMine) {\n    return <SecretList secrets={mySecrets} showMine />;\n  } else if (showShared) {\n    return <SecretList secrets={sharedSecrets} showShared />;\n  }\n  const folder = metadata.find(f => f.id === folderId);\n  return (\n    <SecretList folder={folder} folders={folders} secrets={folderSecrets} />\n  );\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ShortLoginShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideShortLogin}\n      >\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showShortLogin, loading } = state.Options;\n  return {\n    errors,\n    shown: showShortLogin,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortLoginShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.object,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={this.props.actions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.totp}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showQRCode, loading } = state.Options;\n  return {\n    errors,\n    shown: showQRCode,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`);\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass RescueCodesShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.array,\n    currentUser: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = props.currentUser;\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideRescueCodes}\n      >\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { rescueCodes, showRescueCodes } = state.Options;\n  const { currentUser } = state.AppUI;\n  return {\n    rescueCodes,\n    shown: showRescueCodes,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RescueCodesShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n    dispatch: PropTypes.func,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    this.props.dispatch(\n      OptionsActions.changePassword({\n        newPass: this.props.newPass1,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={() => this.props.dispatch(OptionsActions.hideChangePassword())}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={(...args) =>\n                this.props.dispatch(OptionsActions.changeNewPass1(...args))\n              }\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={(...args) =>\n                    this.props.dispatch(OptionsActions.changeNewPass2(...args))\n                  }\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={() =>\n              this.props.dispatch(OptionsActions.hideChangePassword())\n            }\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  } = state.Options.newPass;\n  return {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  };\n};\n\nexport default connect(mapStateToProps)(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.object,\n    newPass: PropTypes.object,\n    isOnline: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChangeTimeToClose = this.onChangeTimeToClose.bind(this);\n    this.onChangeDefaultUsername = this.onChangeDefaultUsername.bind(this);\n    this.onSaveDefaultUsername = this.onSaveDefaultUsername.bind(this);\n    this.state = {\n      defaultUsername: props.options.defaultUsername,\n    };\n  }\n\n  onChangeDefaultUsername({ value }) {\n    this.setState({ defaultUsername: value });\n  }\n\n  onChangeTimeToClose({ value }) {\n    this.props.actions.changeTimeToClose({\n      timeToClose: value === '' ? -1 : parseInt(value, 10) || 0,\n    });\n  }\n\n  onSaveDefaultUsername() {\n    this.props.actions.changeDefaultUsername({\n      defaultUsername: this.state.defaultUsername,\n    });\n  }\n\n  render() {\n    const {\n      options,\n      isOnline,\n      options: { defaultUsername = '' },\n    } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Experience</h3>\n            <div className=\"options-section-item\">\n              <Input\n                name=\"defaultUsername\"\n                label=\"Default username\"\n                size=\"small\"\n                value={this.state.defaultUsername}\n                onChange={this.onChangeDefaultUsername}\n                disabled={!isOnline}\n              />\n              <div className=\"options-section-subitem-save\">\n                <Button\n                  type=\"button\"\n                  buttonStyle={\n                    this.state.defaultUsername === defaultUsername\n                      ? 'default'\n                      : 'primary'\n                  }\n                  onClick={this.onSaveDefaultUsername}\n                  size=\"small\"\n                  disabled={\n                    !isOnline || this.state.defaultUsername === defaultUsername\n                  }\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.totp}\n                onChange={this.props.actions.toggleTotp}\n                disabled={!isOnline}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.totp && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={this.props.actions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.shortLogin}\n                onChange={this.props.actions.toggleShortLogin}\n                disabled={!isOnline}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.timeToClose !== 0}\n                onChange={this.props.actions.toggleAutoLogout}\n                disabled={!isOnline}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {(options.timeToClose === -1 || options.timeToClose > 0) && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={\n                      options.timeToClose === -1\n                        ? ''\n                        : options.timeToClose.toString()\n                    }\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    disabled={!isOnline}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={this.props.actions.showChangePassword}\n                disabled={!isOnline}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { options } = state.Options;\n  const { online } = state.AppUI;\n  return {\n    options,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.name}\n        name={this.props.field.name}\n        value={this.props.field.value}\n        onChange={this.handleChange}\n        type={this.props.field.type}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport * as ImportActions from 'slices/ImportSlice';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields);\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields[key]}\n          onChange={this.props.actions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ImportActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { mandatoryFields } = state.Import;\n  return {\n    mandatoryFields,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport * as ImportActions from 'slices/ImportSlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.object,\n    importActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    this.props.importActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    this.props.importActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      this.props.metadataActions.loadMetadata();\n      setTimeout(() => {\n        this.props.importActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error.message}</span>}\n          {Object.keys(this.props.mandatoryFields).length > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  importActions: bindActionCreators(ImportActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  } = state.Import;\n  return {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport secretin from 'utils/secretin';\nimport Secretin from 'secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport { getSecretsInFolder } from 'selectors/MetadataSelectors';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.object,\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n    this.handleConnectionChange = this.handleConnectionChange.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener('connectionChange', this.handleConnectionChange);\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      this.handleConnectionChange\n    );\n  }\n\n  handleConnectionChange({ connection }) {\n    this.props.dispatch(AppUIActions.connectionChange(connection));\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      if (options.timeToClose > 0) {\n        const delay = options.timeToClose * 60 * 1000;\n        this.disconnectingEvent = setTimeout(\n          () => window.location.reload(),\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    // eslint-disable-next-line no-undef\n    const shortCommit = SECRETIN_APP_COMMIT\n      ? // eslint-disable-next-line no-undef\n        SECRETIN_APP_COMMIT.substr(0, 7)\n      : '';\n    // eslint-disable-next-line no-undef\n    const secretinAppVersion = SECRETIN_APP_COMMIT ? (\n      <span className=\"secretin-version\">\n        secretin-app{' '}\n        <a\n          // eslint-disable-next-line no-undef\n          href={`https://github.com/secretin/secretin-app/commit/${SECRETIN_APP_COMMIT}`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {shortCommit}\n        </a>\n      </span>\n    ) : (\n      <span className=\"secretin-version\">secretin-app dev</span>\n    );\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          {this.props.connected ? (\n            <Layout />\n          ) : (\n            <UserConnect\n              savedUsername={this.props.savedUsername}\n              loading={this.props.loading}\n              errors={this.props.errors}\n            />\n          )}\n          <div className=\"footer\">\n            <span className=\"secretin-version\">\n              secretin-lib v{Secretin.version}\n            </span>\n            {secretinAppVersion}\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { savedUsername, loading, errors, connected } = state.AppUI;\n  const secrets = getSecretsInFolder(state);\n  const { options } = state.Options;\n  return {\n    savedUsername,\n    loading,\n    errors,\n    connected,\n    secrets,\n    options,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './utils/wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { unregister } from 'utils/registerServiceWorker';\n\nimport store from 'stores/store';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootEl\n);\nif (typeof window.process === 'undefined') {\n  unregister(); // Get rid of the service worker, we don't need it\n}\n\n// if (module.hot) {\n//   module.hot.accept('components/App', () => {\n//     // eslint-disable-next-line global-require\n//     const NextApp = require('components/App').default;\n\n//     ReactDOM.render(<NextApp />, rootEl);\n//   });\n// }\n"],"sourceRoot":""}