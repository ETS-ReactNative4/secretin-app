{"version":3,"sources":["utils/secretin.js","slices/AppUISlice.js","selectors/MetadataSelectors.js","components/utilities/Form.js","components/utilities/Icon.js","components/utilities/Button.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Modal.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/User.js","models/Secret.js","slices/MetadataSlice.js","slices/ShowSecretUISlice.js","slices/EditSecretUISlice.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/secrets/SecretEditableTitle.js","components/secrets/SecretShowHeader.js","components/secrets/SecretHistoryButton.js","components/secrets/SecretHistory.js","components/utilities/Select.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/utilities/Flash.js","components/utilities/Tabs.js","components/secrets/SecretShow.js","slices/NewSecretUISlice.js","slices/OptionsSlice.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","slices/ImportSlice.js","stores/store.js","utils/URLHelper.js","components/users/UserAvatars.js","components/utilities/Dropdown.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["api","process","window","URLSearchParams","location","search","get","secretin","Secretin","SecretinBrowserAdapter","API","Server","Statuses","Errors","DecryptMetadataStatus","EndDecryptMetadataStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","UsernameAlreadyExistsError","UserNotFoundError","InvalidPasswordError","NeedTOTPTokenError","_loading","state","loading","_endLoading","AppUISlice","createSlice","name","initialState","savedUsername","getSavedUsername","connected","online","errors","currentUser","status","showShortpass","canITryShortLogin","reducers","endLoading","createSecret","createSecretSuccess","createSecretFailure","connectionChange","action","payload","connection","disconnectUserSuccess","createUserSuccess","createUserFailure","error","disableShortLoginSuccess","onLoginUserProgress","loginUserSuccess","loginUserFailure","addSecretToFolderFailure","removeSecretFromCurrentFolderFailure","hideShortpass","actions","disconnectUser","dispatch","disconnect","createUser","username","password","confirmPassword","setTimeout","newUser","then","catch","loginUser","token","loginUserProgress","options","totp","shortLogin","metadata","metadatas","constructor","getAllSecrets","createSelector","Metadata","Object","values","filter","secret","type","getMySecrets","AppUI","allSecrets","user","users","find","rights","getSecretsInFolder","folderId","userId","secretUser","id","folders","ROOT","keys","includes","getSharedSecrets","length","Form","props","uniqueId","onSubmit","bind","e","preventDefault","this","disabled","className","classNames","autoComplete","style","display","children","Component","defaultProps","SIZES","small","base","Icon","size","width","height","xlinkHref","Button","handleClick","onClick","buttonStyle","to","title","form","tabIndex","Input","handleChange","onTogglePasswordShow","showPassword","autoSelect","input","select","autoFocus","focus","setState","event","onChange","value","target","label","placeholder","readOnly","inputProps","htmlFor","ref","debounce","UserConnectForm","toggleSignup","signup","AppUIActions","checked","isOnline","db","isEmpty","connect","Modal","centered","backdropClassName","show","onHide","closeOnBackdropClick","onClose","undefined","Body","Header","Footer","Confirm","handleAccept","handleCancel","promise","Promise","resolve","reject","accept","cancel","used","text","cancelLabel","acceptLabel","confirm","confirmProps","comfirmElement","document","body","appendChild","createElement","component","ReactDOM","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","shortpass","shortlogin","deactivateShortLogin","UserConnect","SidebarMenuLink","activeClassName","exportDb","filename","element","setAttribute","encodeURIComponent","click","removeChild","download","moment","format","Sidebar","useDispatch","handleLogout","useCallback","useSelector","exact","SecretFieldRecord","raw","uuid","v4","date","content","rawData","SecretDataRecord","fields","params","push","getRaw","defaultFields","reduce","record","field","addNewField","entries","output","key","map","createFromRaw","DEFAULT_FIELDS","UserRights","userRightLabel","accessRights","Error","User","forEach","Secret","lastModifiedBy","lastModifiedAt","data","_user","accessRightForUser","FriendNotFoundError","_rebuildMetadata","buildSecrets","MetadataSlice","loadMetadataSuccess","deleteSecretSuccess","deleteSecretFailure","addSecretToFolderSuccess","removeSecretFromCurrentFolderSuccess","createSecretUserRightsSuccess","updateSecretSuccess","renameSecretSuccess","updateSecretUserRightsSuccess","secretMetadataIndex","secretId","findIndex","getIndex","userToUpdate","merge","deleteSecretUserRightsSuccess","secretMetadata","getById","userToFilter","extraReducers","loadMetadata","refreshUser","isFolder","folder","addFolder","addSecret","updateSecret","a","updateSecretStart","editSecret","getHistory","history","console","log","updateSecretFailure","renameSecret","newTitle","deleteSecret","createSecretUserRights","shareSecret","createSecretUserRightsFailure","unknown","updateSecretUserRights","updateSecretUserRightsFailure","deleteSecretUserRights","unshareSecret","deleteSecretUserRightsFailure","addSecretToFolder","removeSecretFromCurrentFolder","currentFolderId","removeSecretFromFolder","_handleError","isUpdating","ShowSecretUISlice","tab","historyDepth","showModal","showSecretSuccess","hideModal","changeTab","historyShowOlder","historyShowNewer","rawUser","showSecret","getSecret","secretWithData","EditSecretUISlice","isEditing","updateData","changeField","fieldIndex","fieldToUpdate","SecretField","onCopy","onGenerate","copyToClipboard","debug","Utils","PasswordGenerator","generatePassword","isNew","href","rel","canUpdate","SecretFields","SecretEdit","ownProps","EditSecretUI","bindActionCreators","EditSecretUIActions","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","SecretShowHeader","icon","canEditTitle","onEditTitle","SecretHistoryButton","side","SecretHistory","historyCount","modifiedAt","isLatest","isOldest","color","backgroundColor","borderColor","fontWeight","fromNow","ShowSecretUI","ShowSecretUIActions","Select","getValue","option","noop","WindowsSecretEdit","reverse","COLORS","getInitials","fullName","names","split","toUpperCase","substring","UserAvatar","colorIndex","sum","letter","charCodeAt","getAvatarColor","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","iconOnly","SecretUserListNew","on","MetadataActions","isValid","SecretUserList","canShare","canBeSharedBy","cantShare","isCurrentUser","Flash","Tabs","animation","Tab","BootstrapTab","SecretShow","handleChangeTab","showSecretActions","metadataActions","currentUserId","canBeUpdatedBy","shown","getIcon","activeKey","onSelect","eventKey","getInitialState","createWithDefaultFields","NewSecretUISlice","changeTitle","OptionsSlice","showQRCode","showShortLogin","showRescueCodes","newPass","newPass1","newPass2","rescueCodes","_activateTotp","_activateShortLogin","_toggleTotp","_toggleShortLogin","activateTotpFailure","hideQRCode","hideShortLogin","activateTotpSuccess","deactivateTotpSuccess","deactivateShortLoginSuccess","activateShortLoginSuccess","changeDelaySuccess","timeToClose","changeNewPass1","changeNewPass2","showChangePassword","hideChangePassword","_changePassword","changePasswordSuccess","changePasswordFailure","showRescueCodesSuccess","hideRescueCodes","deactivateTotp","getState","activateTotp","seed","testTotp","b32","err","activateShortLogin","changePassword","toggleTotp","getRescueCodes","toggleShortLogin","toggleAutoLogout","changeTimeToClose","editOption","InternalProgressBar","progressFunction","total","func","child","hashedParent","strings","querySelectorAll","j","textContent","toLowerCase","hashedTitle","rHashedTitle","defaultProgress","parseGroup","group","progress","entryPromises","slice","call","childEntry","update","childGroup","getElementsByTagName","addAndParseGroup","count","nb","groups","i","importers","keepass","parse","xml","mandatoryField","parser","DOMParser","xmlDoc","parseFromString","root","currentProgress","detect","file","isKeepass","mandatoryFields","importDb","isSecretin","JSON","ImportSlice","importType","importing","importStatus","importTotal","success","_importSecrets","detectTypeFailure","detectTypeSuccess","importSecretsProgress","importSecretsSuccess","importSecretsFailure","defaultStore","changeMandatoryField","detectType","reader","FileReader","readAsText","onload","result","findKey","importer","importSecrets","configureStore","reducer","AppUIReducer","EditSecretUIReducer","MetadataReducer","NewSecretUI","NewSecretUIReducer","ShowSecretUIReducer","Options","OptionsReducer","Import","ImportReducer","buildSecretURL","basePath","urljoin","join","UserAvatars","Dropdown","MenuItem","SecretListItemOptions","handleShow","handleShare","handleMoveToParent","parentFolderId","handleDelete","pullRight","Toggle","Menu","canBeDeleted","divider","m","itemTarget","drop","monitor","getItem","store","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","link","SecretListItemFolderTarget","DropTarget","dropTarget","SecretListItem","Title","SecretListBreadcrumb","withTitle","breadcrumb","memo","links","unshift","SecretListFolderInfo","secrets","sort","b","localeCompare","colSpan","SecretListContent","nextProps","nextState","endDecrypt","searchQuery","filtered","allFolders","fuzzyRegexp","RegExp","c","escapeRegExp","filteredSecrets","test","filteredFolders","sortedFolders","getUser","set","currentFolder","currentFolderDetails","fold","SecretListRefresh","SecretNew","newSecretActions","required","isLoading","NewSecretUIActions","SecretListNew","canWrite","SecretListSearch","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","message","Math","round","_state","SecretList","onSearch","showAll","showMine","showShared","DragDropContext","HTML5Backend","DragLayer","SecretListContainer","match","mySecrets","sharedSecrets","path","folderSecrets","f","ShortLoginShow","OptionsActions","QRCodeShow","generateSeed","replace","maxLength","getFile","codes","code","Blob","RescueCodesShow","URL","createObjectURL","ChangePasswordShow","handleChangePassword","Checkbox","checboxClassName","OptionsContainer","onChangeTimeToClose","parseInt","min","max","step","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","ImportMandatoryField","ImportersMandatoryFields","inputs","ImportActions","ImportContainer","handleFileChoosen","handleStartParsing","importActions","ImportMandatoryFields","Layout","App","disconnectingEvent","onAppFocus","onAppBlur","handleConnectionChange","addEventListener","removeEventListener","clearTimeout","delay","shortCommit","SECRETIN_APP_COMMIT","substr","secretinAppVersion","basename","version","Boolean","hostname","rootEl","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f63a415.chunk.js","sourcesContent":["import Secretin from 'secretin';\nimport SecretinBrowserAdapter from 'secretin/dist/adapters/browser.umd';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3000';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import secretin, { Statuses, Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\n// Helpers because we're often doing these small state updates\n\nconst _loading = state => {\n  state.loading = true;\n};\nconst _endLoading = state => {\n  state.loading = false;\n};\n\nexport const AppUISlice = createSlice({\n  name: 'AppUI',\n  initialState: {\n    savedUsername: secretin.getSavedUsername(),\n    loading: false,\n    connected: false,\n    online: true,\n    errors: {},\n    currentUser: null,\n    status: null,\n    showShortpass: secretin.canITryShortLogin(),\n  },\n  reducers: {\n    loading: _loading,\n    endLoading: _endLoading,\n    createSecret: _loading,\n    createSecretSuccess: _endLoading,\n    createSecretFailure: _endLoading,\n    connectionChange: (state, action) => {\n      state.online = action.payload.connection === 'online';\n    },\n    disconnectUserSuccess: state => {\n      state.savedUsername = secretin.getSavedUsername();\n      state.loading = false;\n      state.connected = false;\n      state.errors = {};\n      state.currentUser = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.currentUser = action.payload.currentUser;\n    },\n    createUserFailure: (state, action) => {\n      state.loading = false;\n      state.connected = false;\n      state.errors = action.payload.error;\n      state.status = null;\n    },\n    disableShortLoginSuccess: _endLoading,\n    onLoginUserProgress: (state, action) => {\n      const { status } = action.payload;\n      if (status) state.status = { ...status };\n    },\n    loginUserSuccess: (state, action) => {\n      const { currentUser } = action.payload;\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.status = null;\n      state.currentUser = currentUser;\n    },\n    loginUserFailure: (state, action) => {\n      const { error } = action.payload;\n      state.loading = false;\n      state.connected = false;\n      state.errors = error;\n      state.status = null;\n    },\n    addSecretToFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    removeSecretFromCurrentFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    hideShortpass: state => {\n      state.showShortpass = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loading,\n  endLoading,\n  createSecret,\n  createSecretSuccess,\n  createSecretFailure,\n  disconnectUserSuccess,\n  connectionChange,\n  createUserSuccess,\n  createUserFailure,\n  disableShortLoginSuccess,\n  onLoginUserProgress,\n  loginUserSuccess,\n  loginUserFailure,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n  hideShortpass,\n} = AppUISlice.actions;\n\nexport const disconnectUser = () => dispatch => {\n  secretin.currentUser.disconnect();\n  dispatch(disconnectUserSuccess());\n};\n\nexport const createUser = ({\n  username,\n  password,\n  confirmPassword,\n}) => dispatch => {\n  dispatch(loading());\n  if (password !== confirmPassword) {\n    setTimeout(\n      () =>\n        dispatch(\n          createUserFailure({\n            error: { confirmPassword: 'Passwords mismatch' },\n          })\n        ),\n      100\n    );\n  } else {\n    secretin\n      .newUser(username, password)\n      .then(currentUser => dispatch(createUserSuccess({ currentUser })))\n      .catch(error => {\n        if (error instanceof UsernameAlreadyExistsError) {\n          return dispatch(\n            createUserFailure({\n              error: { username: 'User already exists' },\n            })\n          );\n        }\n        throw error;\n      });\n  }\n};\n\nexport const loginUser = ({ username, password, token }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .loginUser(\n      username,\n      password,\n      token,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser =>\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      if (error instanceof UserNotFoundError) {\n        return dispatch(\n          loginUserFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      } else if (error instanceof InvalidPasswordError) {\n        if (token) {\n          return dispatch(\n            loginUserFailure({\n              error: {\n                totp: 'Token',\n                password: 'Invalid password',\n                token: 'or invalid token',\n              },\n            })\n          );\n        }\n        return dispatch(\n          loginUserFailure({\n            error: { password: 'Invalid password' },\n          })\n        );\n      } else if (error instanceof NeedTOTPTokenError) {\n        return dispatch(\n          loginUserFailure({\n            error: { totp: 'Token' },\n          })\n        );\n      }\n      throw error;\n    });\n};\n\nexport const loginUserProgress = status => dispatch => {\n  const currentUser = secretin.currentUser;\n  switch (status.constructor) {\n    case DecryptMetadataCacheStatus:\n    case DecryptMetadataStatus:\n    case DecryptUserOptionsStatus:\n      return dispatch(onLoginUserProgress({ status }));\n    case EndDecryptMetadataStatus:\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n      return dispatch(onLoginUserProgress({ status: null }));\n    default:\n      return;\n  }\n};\n\nexport const shortLogin = ({ shortpass }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .shortLogin(\n      shortpass,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser => {\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n    })\n    .catch(() => {\n      dispatch(\n        loginUserFailure({\n          error: { shortlogin: 'Invalid shortpass' },\n        })\n      );\n      setTimeout(() => {\n        dispatch(hideShortpass());\n      }, 1000);\n    });\n};\n\nexport const disableShortLogin = () => dispatch => {\n  dispatch(loading());\n  secretin.deactivateShortLogin();\n  dispatch(disableShortLoginSuccess());\n  dispatch(hideShortpass());\n};\n\nexport default AppUISlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getAllSecrets = createSelector(\n  state => state.Metadata.metadata,\n  metadata => {\n    return Object.values(metadata).filter(secret => secret.type !== 'folder');\n  }\n);\n\nexport const getMySecrets = createSelector(\n  getAllSecrets,\n  state => state.AppUI.currentUser,\n  (allSecrets, currentUser) => {\n    if (!allSecrets) return [];\n    return allSecrets.filter(secret => {\n      const user = secret.users.find(\n        user => user.username === currentUser.username\n      );\n      return user?.rights === 2;\n    });\n  }\n);\n\nexport const getSecretsInFolder = createSelector(\n  state => state.Metadata.metadata,\n  state => state.AppUI.currentUser,\n  (state, folderId) => folderId,\n  (metadata, currentUser, folderId) => {\n    if (!currentUser || !metadata) {\n      return {};\n    }\n    const userId = currentUser.username;\n    return Object.values(metadata).filter(secret => {\n      const secretUser = secret.users.find(user => user.id === userId);\n      const folders = secretUser?.folders || {};\n      return (\n        (!folderId && folders.ROOT) ||\n        (folderId && Object.keys(folders).includes(folderId))\n      );\n    });\n  }\n);\n\nexport const getSharedSecrets = createSelector(getAllSecrets, allSecrets => {\n  if (!allSecrets) return [];\n  return allSecrets.filter(secret => secret.users.length > 1);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.array,\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    disabled: false,\n    readOnly: false,\n    actions: [],\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n    if (this.props.autoFocus) {\n      setTimeout(() => this.input.focus(), 0);\n    }\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange(event) {\n    this.props.onChange({\n      name: this.props.name,\n      value: event.target.value,\n    });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n    } = this.props;\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.length > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            value={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? null : 'new-password'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass UserConnectForm extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? 'Sign up' : 'Sign in';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={this.props.isOnline && secretin.api.db}\n        >\n          Secret-in.me\n          <small>{status}</small>\n        </h2>\n\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.username}\n          autoFocus\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.password}\n          autoComplete\n        />\n        {this.props.errors.totp && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.token}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.confirmPassword}\n          />\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                I already have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  sign in\n                </a>\n              </span>\n            ) : (\n              <span>\n                I don&apos;t have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  create one\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { online } = state.AppUI;\n  return {\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.closeOnBackdropClick ? props.onClose : undefined}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  closeOnBackdropClick: PropTypes.bool,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.dispatch(\n      AppUIActions.shortLogin({ shortpass: this.state.shortpass })\n    );\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(AppUIActions.disableShortLogin());\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n\n        <Input\n          label=\"Shortpass\"\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(UserConnectShortPass);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n    showShortpass: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors } = this.props;\n\n    return (\n      <div className=\"user-connect\">\n        {this.props.showShortpass ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.shortlogin}\n          />\n        ) : (\n          <UserConnectForm loading={loading} errors={errors} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { showShortpass } = state.AppUI;\n  return {\n    showShortpass,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnect);\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { disconnectUser } from 'slices/AppUISlice';\n\nimport secretin from 'utils/secretin';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const dispatch = useDispatch();\n  const handleLogout = useCallback(() => {\n    dispatch(disconnectUser());\n  }, [dispatch]);\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={isOnline && secretin.api.db}>\n          {isOnline ? 'Secret-In.me' : 'Offline'}\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            All\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            My secrets\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            Shared secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            Settings\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              Export secrets\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            Import secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={handleLogout}>\n              <Icon id=\"logout\" size=\"base\" />\n              Log out\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import uuid from 'uuid';\n\nclass SecretFieldRecord {\n  constructor(raw = {}) {\n    this.id = raw.id || uuid.v4();\n    this.date = raw.date || null;\n    this.type = raw.type || 'text';\n    this.label = raw.label || '';\n    this.content = raw.content || '';\n  }\n\n  getRaw() {\n    const { id, date, type, label, content } = this;\n    return {\n      id,\n      date,\n      type,\n      label,\n      content,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = {\n      ...rawData,\n      content: rawData.content,\n    };\n    if (raw.value) delete raw.value;\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import SecretFieldRecord from 'models/SecretFieldRecord';\n\nclass SecretDataRecord {\n  constructor(raw = {}) {\n    this.type = raw.type || 'default';\n    this.fields = raw.fields || [];\n  }\n\n  addNewField(params = {}) {\n    this.fields.push(new SecretFieldRecord(params).getRaw());\n    return this;\n  }\n\n  getRaw() {\n    const { type, fields } = this;\n    return {\n      type,\n      fields,\n    };\n  }\n\n  static createWithDefaultFields(defaultFields) {\n    return defaultFields.reduce(\n      (record, field) => record.addNewField(field),\n      new SecretDataRecord()\n    );\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      switch (key) {\n        case 'fields':\n          return {\n            ...output,\n            fields: value.map(field =>\n              SecretFieldRecord.createFromRaw(field).getRaw()\n            ),\n          };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = [\n  { label: 'login', type: 'text' },\n  { label: 'password', type: 'password' },\n  { label: 'url', type: 'url' },\n];\n\nexport default SecretDataRecord;\n","import uuid from 'uuid';\n\nexport const UserRights = [\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n];\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User {\n  constructor(raw = {}) {\n    this.id = raw.username || uuid.v4();\n    this.username = raw.username || '';\n    this.rights = raw.rights || 0;\n    this.folders = raw.folders || {};\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const { id, username, rights, folders } = this;\n    return {\n      id,\n      username,\n      rights,\n      folders,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    return new User(rawData);\n  }\n}\n\nexport default User;\n","import moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret {\n  constructor(raw = {}) {\n    this.id = raw.id || null;\n    this.type = raw.type || null;\n    this.title = raw.title || null;\n    this.lastModifiedBy = raw.lastModifiedBy || null;\n    this.lastModifiedAt = raw.lastModifiedAt || null;\n    this.users = raw.users || {};\n    this.data = raw.data || null;\n  }\n\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (Object.keys(this.users) > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.find(_user => _user.id === user.username)?.rights || 0;\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data,\n      users,\n    } = this;\n    return {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data: data?.getRaw(),\n      users: users.map(user => user.getRaw()),\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      if (!value) return output;\n      switch (key) {\n        case 'users':\n          return {\n            ...output,\n            users: Object.values(value).map(user => User.createFromRaw(user)),\n          };\n        case 'data':\n          return {\n            ...output,\n            data: SecretDataRecord.createFromRaw(value).getRaw(),\n          };\n        case 'lastModifiedAt':\n          return { ...output, lastModifiedAt: moment(value) };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import secretin, { Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Secret from 'models/Secret';\n\nimport {\n  createSecretSuccess,\n  createSecretFailure,\n  loginUserProgress,\n  loginUserSuccess,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} from 'slices/AppUISlice';\nimport {\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} from 'slices/ShowSecretUISlice';\n\nconst { FriendNotFoundError } = Errors;\n\nconst buildSecrets = metadata => {\n  return metadata.map(secret => Secret.createFromRaw(secret));\n};\n\nconst getIndex = (state, secretId) =>\n  state.metadata.findIndex(secret => secret.id === secretId);\n\nconst getById = (state, secretId) =>\n  state.metadata.find(secret => secret.id === secretId);\n\n// Helper function reused in many actions\nconst _rebuildMetadata = (state, action) => {\n  const { metadata } = action.payload;\n  state.metadata = buildSecrets(Object.values(metadata));\n};\n\nexport const MetadataSlice = createSlice({\n  name: 'Metadata',\n  initialState: {\n    metadata: [],\n  },\n  reducers: {\n    loadMetadataSuccess: _rebuildMetadata,\n    deleteSecretSuccess: _rebuildMetadata,\n    deleteSecretFailure: _rebuildMetadata,\n    addSecretToFolderSuccess: _rebuildMetadata,\n    removeSecretFromCurrentFolderSuccess: _rebuildMetadata,\n    createSecretUserRightsSuccess: _rebuildMetadata,\n    updateSecretSuccess: _rebuildMetadata,\n    renameSecretSuccess: _rebuildMetadata,\n\n    updateSecretUserRightsSuccess: (state, action) => {\n      const { secret, user, rights } = action.payload;\n      const secretMetadataIndex = getIndex(state, secret.id);\n      state.metadata[secretMetadataIndex].users = state.metadata[\n        secretMetadataIndex\n      ].users.map(userToUpdate => {\n        if (userToUpdate.id === user.id) {\n          return userToUpdate.merge({ rights });\n        }\n        return userToUpdate;\n      });\n    },\n\n    deleteSecretUserRightsSuccess: (state, action) => {\n      const { secret, user } = action.payload;\n      const secretMetadata = getById(state, secret.id);\n      secretMetadata.users = secretMetadata.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: _rebuildMetadata,\n    [loginUserSuccess]: _rebuildMetadata,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loadMetadataSuccess,\n  deleteSecretSuccess,\n  deleteSecretFailure,\n  addSecretToFolderSuccess,\n  removeSecretFromCurrentFolderSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretSuccess,\n  renameSecretSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} = MetadataSlice.actions;\n\nexport const loadMetadata = () => dispatch => {\n  secretin\n    .refreshUser(true, (...args) => dispatch(loginUserProgress(...args)))\n    .then(() => {\n      dispatch(\n        loadMetadataSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    });\n};\n\nexport const createSecret = (\n  { title, data, folder, isFolder } = { isFolder: false }\n) => dispatch => {\n  let promise;\n  if (isFolder) {\n    if (folder) {\n      promise = secretin.addFolder(title, folder);\n    } else {\n      promise = secretin.addFolder(title);\n    }\n  } else if (folder) {\n    promise = secretin.addSecret(title, data, folder);\n  } else {\n    promise = secretin.addSecret(title, data);\n  }\n\n  return promise\n    .then(() =>\n      dispatch(\n        createSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(createSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const updateSecret = ({ secret, data }) => async dispatch => {\n  dispatch(updateSecretStart());\n  try {\n    const payload = { data };\n    await secretin.editSecret(secret.id, data);\n    try {\n      payload.history = await secretin.getHistory(secret.id);\n    } catch (err) {\n      payload.history = [];\n      console.log(err);\n    }\n    dispatch(\n      updateSecretSuccess({\n        ...payload,\n        metadata: secretin.currentUser.metadatas,\n      })\n    );\n  } catch (error) {\n    dispatch(updateSecretFailure({ error }));\n    throw error;\n  }\n};\n\nexport const renameSecret = ({ secret, newTitle }) => dispatch => {\n  return secretin\n    .renameSecret(secret.id, newTitle)\n    .then(() => {\n      dispatch(\n        renameSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const deleteSecret = ({ secret }) => dispatch => {\n  return secretin\n    .deleteSecret(secret.id)\n    .catch(error => {\n      dispatch(\n        deleteSecretFailure({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n      throw error;\n    })\n    .then(() =>\n      dispatch(\n        deleteSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    );\n};\n\nexport const createSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() => {\n      dispatch(\n        createSecretUserRightsSuccess({\n          metadata: secretin.currentUser.metadatas,\n          user,\n          rights,\n        })\n      );\n    })\n    .catch(error => {\n      if (error instanceof FriendNotFoundError) {\n        return dispatch(\n          createSecretUserRightsFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      }\n      dispatch(\n        createSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const updateSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() =>\n      dispatch(updateSecretUserRightsSuccess({ secret, user, rights }))\n    )\n    .catch(error => {\n      dispatch(\n        updateSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const deleteSecretUserRights = ({ secret, user }) => dispatch => {\n  return secretin\n    .unshareSecret(secret.id, user.username)\n    .then(() => dispatch(deleteSecretUserRightsSuccess({ secret, user })))\n    .catch(error => {\n      dispatch(\n        deleteSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const addSecretToFolder = ({ secret, folder }) => dispatch => {\n  return secretin\n    .addSecretToFolder(secret.id, folder.id)\n    .then(() =>\n      dispatch(\n        addSecretToFolderSuccess({\n          secret,\n          folder,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        addSecretToFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const removeSecretFromCurrentFolder = ({\n  secret,\n  currentFolderId,\n}) => dispatch => {\n  return secretin\n    .removeSecretFromFolder(secret.id, currentFolderId)\n    .then(() =>\n      dispatch(\n        removeSecretFromCurrentFolderSuccess({\n          secret,\n          currentFolderId,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        removeSecretFromCurrentFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport default MetadataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport Secret from 'models/Secret';\nimport User from 'models/User';\nimport {\n  updateSecretSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} from 'slices/MetadataSlice';\n\nconst getInitialState = () => ({\n  secret: null,\n  errors: {},\n  tab: 'details',\n  isUpdating: false,\n  historyDepth: 0,\n});\n\nconst _handleError = (state, action) => {\n  const { error } = action.payload;\n  state.errors = error;\n  state.isUpdating = false;\n};\n\nexport const ShowSecretUISlice = createSlice({\n  name: 'ShowSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      state.secret = secret;\n      state.tab = tab || 'details';\n      state.errors = {};\n    },\n    showSecretSuccess: (state, action) => {\n      const { secret } = action.payload;\n      state.secret = secret;\n      state.errors = {};\n    },\n    hideModal: (state, action) => {\n      state.secret = null;\n      state.errors = {};\n      state.historyDepth = 0;\n    },\n    changeTab: (state, action) => {\n      const { tab } = action.payload;\n      state.tab = tab;\n    },\n    updateSecretStart: (state, action) => {\n      state.isUpdating = true;\n      state.errors = {};\n    },\n    historyShowOlder: state => {\n      if (state.historyDepth + 1 < state.secret.history.length)\n        state.historyDepth += 1;\n    },\n    historyShowNewer: state => {\n      if (state.historyDepth - 1 >= 0) state.historyDepth -= 1;\n    },\n    updateSecretFailure: _handleError,\n    createSecretUserRightsFailure: _handleError,\n    updateSecretUserRightsFailure: _handleError,\n    deleteSecretUserRightsFailure: _handleError,\n  },\n  extraReducers: {\n    [updateSecretSuccess]: (state, action) => {\n      const { metadata, history } = action.payload;\n      const secretMetadata = metadata[state.secret.id];\n      // The metadata coming back from Secretin has flat user objects indexed by id\n      // Recreate the array of User instances\n      secretMetadata.users = Object.values(secretMetadata.users).map(rawUser =>\n        User.createFromRaw(rawUser)\n      );\n      state.secret = state.secret.merge(metadata[state.secret.id]);\n      state.secret.history = history;\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [createSecretUserRightsSuccess]: (state, action) => {\n      const { user, rights } = action.payload;\n      state.secret.users.push(user.merge({ rights }));\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [updateSecretUserRightsSuccess]: (state, action) => {\n      const { rights, user } = action.payload;\n      state.secret.users = state.secret.users.map(_user => {\n        if (_user.id === user.id) return _user.merge({ rights });\n        return _user;\n      });\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [deleteSecretUserRightsSuccess]: (state, action) => {\n      const { user } = action.payload;\n      state.secret.users = state.secret.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n      state.isUpdating = false;\n      state.errors = {};\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  showSecretSuccess,\n  hideModal,\n  changeTab,\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n  historyShowOlder,\n  historyShowNewer,\n} = ShowSecretUISlice.actions;\n\nexport const showSecret = ({ secret, tab }) => async dispatch => {\n  dispatch(showModal({ secret, tab }));\n  if (secret.type === 'folder') {\n    dispatch(showSecretSuccess({ secret }));\n  } else {\n    const data = await secretin.getSecret(secret.id);\n    const raw = !data.fields ? { fields: data } : data;\n    const secretWithData = Secret.createFromRaw(secret.getRaw());\n    secretWithData.data = SecretDataRecord.createFromRaw(raw).getRaw();\n    try {\n      secretWithData.history = await secretin.getHistory(secret.id);\n    } catch (error) {\n      console.log(error);\n      secretWithData.history = [];\n    }\n    dispatch(\n      showSecretSuccess({\n        secret: secretWithData,\n      })\n    );\n  }\n};\n\nexport default ShowSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { showSecretSuccess } from 'slices/ShowSecretUISlice';\nimport { hideModal } from 'slices/ShowSecretUISlice';\nimport { updateSecretSuccess } from 'slices/MetadataSlice';\n\nexport const EditSecretUISlice = createSlice({\n  name: 'EditSecretUI',\n  initialState: {\n    isEditing: false,\n    data: null,\n  },\n  reducers: {\n    updateData: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.data;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      state.isEditing = true;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [showSecretSuccess]: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.secret.data;\n    },\n    [hideModal]: state => {\n      state.isEditing = false;\n      state.data = null;\n    },\n    [updateSecretSuccess]: state => {\n      state.isEditing = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateData, changeField } = EditSecretUISlice.actions;\n\nexport default EditSecretUISlice.reducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\n\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({ value: '' });\n    setTimeout(() => {\n      this.handleChange({\n        value: Utils.PasswordGenerator.generatePassword(),\n      });\n    }, 100);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            Open\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        Copy\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.field.label}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={actions}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Button\n              title=\"Generate password\"\n              buttonStyle=\"icon\"\n              onClick={this.onGenerate}\n              tabIndex=\"-1\"\n            >\n              <Icon id=\"generate\" size=\"small\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecretField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.array,\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as EditSecretUIActions from 'slices/EditSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.fields}\n          onChange={\n            this.props.canUpdate ? this.props.actions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(EditSecretUIActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = ownProps.data || state.EditSecretUI.data;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Icon from 'components/utilities/Icon';\n\nexport const SecretShowHeader = ({\n  icon,\n  title,\n  canEditTitle,\n  isUpdating,\n  onEditTitle,\n}) => {\n  return (\n    <div>\n      <Icon id={icon} size=\"small\" />\n      <SecretEditableTitle\n        title={title}\n        canUpdate={canEditTitle}\n        isUpdating={isUpdating}\n        onSubmit={newTitle => {\n          if (newTitle !== title) {\n            onEditTitle(newTitle);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nSecretShowHeader.propTypes = {\n  canEditTitle: PropTypes.bool,\n  title: PropTypes.string,\n  icon: PropTypes.string,\n  isUpdating: PropTypes.bool,\n  onEditTitle: PropTypes.func,\n};\n\nexport default SecretShowHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst SecretHistoryButton = ({ side, disabled, onClick }) => {\n  return (\n    <div className=\"secret-history-button\">\n      <Button\n        title={side}\n        buttonStyle=\"icon\"\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <Icon id={side} />\n      </Button>\n    </div>\n  );\n};\n\nSecretHistoryButton.propTypes = {\n  disabled: PropTypes.bool,\n  side: PropTypes.oneOf('previous', 'next'),\n  onClick: PropTypes.func,\n};\n\nexport default SecretHistoryButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport SecretHistoryButton from 'components/secrets/SecretHistoryButton';\nimport SecretEdit from 'components/secrets/SecretEdit';\n\nclass SecretHistory extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    historyDepth: PropTypes.number,\n    historyCount: PropTypes.number,\n    modifiedAt: PropTypes.string,\n    isLatest: PropTypes.bool,\n    isOldest: PropTypes.bool,\n    dispatch: PropTypes.func,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const {\n      historyDepth,\n      historyCount,\n      modifiedAt,\n      isLatest,\n      isOldest,\n      data,\n    } = this.props;\n    const { historyShowOlder, historyShowNewer } = this.props.actions;\n    const color = isLatest ? '#1abc9c' : '#afafaf';\n    return (\n      <div className=\"secret-history\">\n        <div\n          className=\"secret-history-header\"\n          style={{\n            backgroundColor: color,\n            borderColor: color,\n          }}\n        >\n          <div className=\"secret-history-navigation\">\n            <SecretHistoryButton\n              disabled={historyDepth >= historyCount - 1}\n              side=\"previous\"\n              onClick={historyShowOlder}\n            />\n            <SecretHistoryButton\n              disabled={historyDepth <= 0}\n              side=\"next\"\n              onClick={historyShowNewer}\n            />\n          </div>\n          <span\n            style={{ color: 'white', fontWeight: '600' }}\n            title={moment(modifiedAt).format('MMM Do, YYYY HH:mm')}\n          >\n            {isLatest && '(latest)'}\n            {isOldest && '(oldest)'} {moment(modifiedAt).fromNow()}\n          </span>\n        </div>\n        <div className=\"secret-history-fields\">\n          <SecretEdit isUpdating={false} canUpdate={false} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { secret, historyDepth } = state.ShowSecretUI;\n  return {\n    data: secret?.history[historyDepth]?.secret,\n    modifiedAt: secret?.history[historyDepth]?.lastModifiedAt,\n    historyCount: secret?.history.length,\n    historyDepth,\n    isLatest: historyDepth === 0,\n    isOldest: historyDepth + 1 >= secret?.history.length,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ShowSecretUIActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretHistory);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.length > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      // TODO : figure out sorting\n      // .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ]);\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps)(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'green-sea',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'orange',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: new User(),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.merge({ [name]: value }),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      'read access',\n      'read and write access',\n      'read, write and share access',\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: 'Are you sure?',\n      text: (\n        <span>\n          You are about to give <b>{rights}</b> to <b>{to}</b> on <b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: 'Share the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(\n          MetadataActions.createSecretUserRights({\n            secret: this.props.secret,\n            user: this.state.user,\n            rights: this.state.user.rights,\n          })\n        );\n        this.setState({\n          user: new User(),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder=\"User name...\"\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          error={this.props.errors.username}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default connect()(SecretUserListNew);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Secret from 'models/Secret';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser) {\n  if (cantShare) {\n    return \"You don't have the permission to share this secret\";\n  } else if (isCurrentUser) {\n    return \"You can't modify or remove yourself\";\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    isUpdating: PropTypes.bool,\n    isOnline: PropTypes.bool,\n    currentUser: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    this.props.dispatch(\n      MetadataActions.updateSecretUserRights({\n        secret: this.props.secret,\n        user,\n        rights,\n      })\n    );\n  }\n\n  onRemoveUserRights(user) {\n    this.props.dispatch(\n      MetadataActions.deleteSecretUserRights({\n        secret: this.props.secret,\n        user,\n      })\n    );\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && this.props.isOnline;\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users.map(user => (\n            <SecretUserListItem\n              key={user.id}\n              user={user}\n              disabled={\n                !canShare ||\n                currentUser.username === user.id ||\n                this.props.isUpdating\n              }\n              disabledReason={getDisabledReason(\n                !canShare,\n                currentUser.username === user.id\n              )}\n              onChangeUserRights={this.onChangeUserRights}\n              onRemoveUserRights={this.onRemoveUserRights}\n            />\n          ))}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser, online } = state.AppUI;\n  return {\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport SecretShowHeader from 'components/secrets/SecretShowHeader';\nimport SecretHistory from 'components/secrets/SecretHistory';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    data: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    showSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    this.props.showSecretActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    this.props.metadataActions.updateSecret({\n      secret: this.props.secret,\n      data: this.props.data,\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = this.props.currentUser;\n    const users = this.props.secret.users.filter(\n      user => user.id !== currentUserId\n    );\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(this.props.currentUser) &&\n      (this.props.isOnline || users.length === 0);\n\n    return (\n      <Modal\n        show={this.props.shown}\n        closeOnBackdropClick={!this.props.isEditing}\n        onClose={this.props.showSecretActions.hideModal}\n      >\n        <Modal.Header>\n          <SecretShowHeader\n            icon={this.props.secret.getIcon()}\n            title={this.props.secret.title}\n            canEditTitle={canUpdate}\n            isUpdating={this.props.isUpdating}\n            onEditTitle={newTitle => {\n              setTimeout(() => {\n                this.props.metadataActions.renameSecret({\n                  secret: this.props.secret,\n                  newTitle,\n                });\n              });\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {this.props.secret.type === 'windows' && (\n            <Flash type=\"info\">\n              This secret is used for your Windows domain authentication. It\n              cannot be deleted.\n            </Flash>\n          )}\n          <Tabs\n            id=\"secret-tabs\"\n            activeKey={this.props.tab}\n            onSelect={this.handleChangeTab}\n          >\n            {this.props.secret.type !== 'folder' && (\n              <Tab eventKey=\"details\" title=\"Details\">\n                {this.props.secret.type === 'windows' ? (\n                  <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                ) : (\n                  <SecretEdit\n                    isUpdating={this.props.isUpdating}\n                    canUpdate={canUpdate}\n                    data={this.props.secret.fields}\n                  />\n                )}\n              </Tab>\n            )}\n\n            {this.props.secret.type !== 'windows' && (\n              <Tab eventKey=\"access\" title=\"Who has access\">\n                <SecretUserList\n                  isUpdating={this.props.isUpdating}\n                  errors={this.props.errors}\n                  secret={this.props.secret}\n                />\n              </Tab>\n            )}\n\n            {this.props.secret?.history?.length > 1 && (\n              <Tab eventKey=\"history\" title=\"History\">\n                <SecretHistory />\n              </Tab>\n            )}\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.showSecretActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            {this.props.isEditing ? 'Cancel' : 'Close'}\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              Save\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSecretActions: bindActionCreators(ShowSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { secret, errors, tab, isUpdating } = state.ShowSecretUI;\n  const { isEditing, data } = state.EditSecretUI;\n  const { currentUser, online } = state.AppUI;\n  return {\n    secret,\n    shown: !!secret,\n    errors,\n    tab,\n    isUpdating,\n    isEditing,\n    data,\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretShow);\n","import { createSlice } from '@reduxjs/toolkit';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nimport { createSecretSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ).getRaw(),\n});\n\nexport const NewSecretUISlice = createSlice({\n  name: 'NewSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { folder, isFolder } = action.payload;\n      state.shown = true;\n      state.title = `Untitled ${isFolder ? 'folder' : 'secret'}`;\n      state.folder = folder;\n      state.isFolder = isFolder;\n    },\n    hideModal: () => getInitialState(),\n    changeTitle: (state, action) => {\n      const { value } = action.payload;\n      state.title = value;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: () => getInitialState(),\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  hideModal,\n  changeTitle,\n  changeField,\n} = NewSecretUISlice.actions;\n\nexport default NewSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nimport { loginUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  options: {},\n  errors: {},\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: {\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  },\n  rescueCodes: [],\n  loading: false,\n});\n\nexport const OptionsSlice = createSlice({\n  name: 'Options',\n  initialState: getInitialState(),\n  reducers: {\n    _activateTotp: (state, action) => {\n      state.loading = true;\n    },\n\n    _activateShortLogin: (state, action) => {\n      state.loading = true;\n    },\n\n    _toggleTotp: (state, action) => {\n      const { checked } = action.payload;\n      state.showQRCode = checked;\n    },\n\n    _toggleShortLogin: (state, action) => {\n      const { checked } = action.payload;\n      state.showShortLogin = checked;\n    },\n\n    activateTotpFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors.totp = error;\n      state.loading = false;\n    },\n\n    hideQRCode: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    hideShortLogin: (state, action) => {\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    activateTotpSuccess: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.totp = true;\n    },\n\n    deactivateTotpSuccess: (state, action) => {\n      state.options.totp = false;\n    },\n\n    deactivateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.options.shortLogin = shortLogin;\n    },\n\n    activateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.shortLogin = shortLogin;\n    },\n\n    changeDelaySuccess: (state, action) => {\n      const { timeToClose } = action.payload;\n      state.options.timeToClose = timeToClose;\n    },\n\n    changeNewPass1: (state, action) => {\n      const newPass1 = action.payload;\n      state.newPass.newPass1 = newPass1.value;\n    },\n\n    changeNewPass2: (state, action) => {\n      const newPass2 = action.payload;\n      state.newPass.newPass2 = newPass2.value;\n    },\n\n    showChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = true;\n    },\n\n    hideChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = false;\n    },\n\n    _changePassword: (state, action) => {\n      state.newPass.loading = true;\n      state.newPass.error = '';\n    },\n\n    changePasswordSuccess: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.status = 'success';\n    },\n\n    changePasswordFailure: (state, action) => {\n      state.newPass.error = 'Password change failed';\n      state.newPass.loading = false;\n      state.newPass.status = 'failure';\n    },\n\n    showRescueCodesSuccess: (state, action) => {\n      const { rescueCodes } = action.payload;\n      state.rescueCodes = rescueCodes;\n      state.showRescueCodes = true;\n    },\n\n    hideRescueCodes: (state, action) => {\n      state.rescueCodes = [];\n      state.showRescueCodes = false;\n    },\n  },\n  extraReducers: {\n    [loginUserSuccess]: (state, action) => {\n      const { options } = action.payload;\n      state.options = options;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  _activateTotp,\n  _activateShortLogin,\n  _toggleTotp,\n  _toggleShortLogin,\n  activateTotpFailure,\n  activateTotpSuccess,\n  hideQRCode,\n  hideShortLogin,\n  deactivateTotpSuccess,\n  deactivateShortLoginSuccess,\n  activateShortLoginSuccess,\n  changeDelaySuccess,\n  changeNewPass1,\n  changeNewPass2,\n  showChangePassword,\n  hideChangePassword,\n  _changePassword,\n  changePasswordSuccess,\n  changePasswordFailure,\n  showRescueCodesSuccess,\n  hideRescueCodes,\n} = OptionsSlice.actions;\n\nexport const deactivateTotp = () => (dispatch, getState) =>\n  secretin\n    .deactivateTotp()\n    .then(() => dispatch(deactivateTotpSuccess()))\n    .catch(() => {\n      // dispatch(deactivateTotpFailure());\n    });\n\nexport const activateTotp = ({ seed, token }) => (dispatch, getState) => {\n  dispatch(_activateTotp());\n  return secretin.api\n    .testTotp(seed.b32, token)\n    .then(() => secretin.activateTotp(seed))\n    .then(() => dispatch(activateTotpSuccess()))\n    .catch(err => {\n      if (err === 'Invalid couple') {\n        dispatch(activateTotpFailure({ error: 'Synchronisation error' }));\n      } else {\n        dispatch(activateTotpFailure({ error: 'An error occured' }));\n      }\n    });\n};\n\nexport const activateShortLogin = ({ shortpass }) => (dispatch, getState) => {\n  dispatch(_activateShortLogin());\n  return secretin\n    .activateShortLogin(shortpass, uuid.v4())\n    .then(() =>\n      dispatch(\n        activateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(activateShortLoginFailure());\n    });\n};\n\nexport const deactivateShortLogin = () => (dispatch, getState) => {\n  secretin\n    .deactivateShortLogin()\n    .then(() =>\n      dispatch(\n        deactivateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(deactivateShortLoginFailure());\n    });\n};\n\nexport const changePassword = ({ newPass }) => (dispatch, getState) => {\n  dispatch(_changePassword());\n  secretin\n    .changePassword(newPass)\n    .then(() => {\n      dispatch(changePasswordSuccess());\n    })\n    .catch(() => {\n      dispatch(changePasswordFailure());\n    });\n};\n\nexport const toggleTotp = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleTotp({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateTotp());\n};\n\nexport const showRescueCodes = () => (dispatch, getState) => {\n  if (\n    !window.confirm(\n      'Be careful, this will replace your previously generated codes. Continue?'\n    )\n  ) {\n    return;\n  }\n  secretin.getRescueCodes().then(rescueCodes => {\n    dispatch(showRescueCodesSuccess({ rescueCodes }));\n  });\n};\n\nexport const toggleShortLogin = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleShortLogin({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateShortLogin());\n};\n\nexport const toggleAutoLogout = ({ checked }) => (dispatch, getState) => {\n  const delay = checked ? 30 : 0;\n  return dispatch(changeTimeToClose({ timeToClose: delay }));\n};\n\nexport const changeTimeToClose = ({ timeToClose }) => (dispatch, getState) => {\n  secretin\n    .editOption('timeToClose', timeToClose)\n    .then(() => {\n      dispatch(changeDelaySuccess({ timeToClose }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport default OptionsSlice.reducer;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport importers from 'utils/importers';\nimport { findKey } from 'lodash';\n\nconst getInitialState = () => ({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: {},\n});\n\nexport const ImportSlice = createSlice({\n  name: 'Import',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      this.state.secret = secret;\n      this.state.tab = tab || 'details';\n      this.state.errors = {};\n    },\n    _importSecrets: (state, action) => {\n      state.importing = true;\n      state.success = false;\n      state.error = '';\n    },\n\n    detectTypeFailure: (state, action) => {\n      const { error } = action.payload;\n      state.error = error;\n      state.importType = '';\n      state.mandatoryFields = {};\n    },\n\n    detectTypeSuccess: (state, action) => {\n      const { file, importType, mandatoryFields } = action.payload;\n      state.importType = importType;\n      state.error = '';\n      state.file = file;\n      state.mandatoryFields = mandatoryFields;\n    },\n\n    importSecretsProgress: (state, action) => {\n      const { importStatus, importTotal } = action.payload;\n      state.error = '';\n      state.importStatus = importStatus;\n      state.importTotal = importTotal;\n    },\n\n    importSecretsSuccess: (state, action) => {\n      state.importing = false;\n      state.success = true;\n      state.importType = '';\n      state.error = '';\n      state.importStatus = 0;\n      state.importTotal = 0;\n      state.mandatoryFields = {};\n    },\n\n    importSecretsFailure: (state, action) => {\n      const { error } = action.payload;\n\n      state.importing = false;\n      state.success = false;\n      state.importType = '';\n      state.error = error;\n      state.mandatoryFields = {};\n    },\n\n    defaultStore: (state, action) => {\n      state = getInitialState();\n    },\n\n    changeMandatoryField: (state, action) => {\n      const { field, value } = action.payload;\n      state.mandatoryFields[field.name].value = value;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  _importSecrets,\n  detectTypeFailure,\n  detectTypeSuccess,\n  importSecretsProgress,\n  importSecretsSuccess,\n  importSecretsFailure,\n  defaultStore,\n  changeMandatoryField,\n} = ImportSlice.actions;\n\nexport const detectType = ({ file }) => (dispatch, getState) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = ({ target }) => {\n    const file = target.result;\n    const importType = findKey(importers, importer => importer.detect(file));\n\n    if (typeof importType !== 'undefined') {\n      const mandatoryFields = importers[importType].mandatoryFields;\n      dispatch(detectTypeSuccess({ file, importType, mandatoryFields }));\n    } else {\n      dispatch(detectTypeFailure({ error: 'Invalid type' }));\n    }\n  };\n  return reader;\n};\n\nexport const importSecrets = ({ file, type, mandatoryFields }) => (\n  dispatch,\n  getState\n) => {\n  dispatch(_importSecrets());\n  importers[type]\n    .parse(\n      file,\n      mandatoryFields,\n      ({ state: importStatus, total: importTotal }) =>\n        dispatch(\n          importSecretsProgress({\n            importStatus,\n            importTotal,\n          })\n        )\n    )\n    .then(() => {\n      dispatch(importSecretsSuccess());\n    })\n    .catch(error => {\n      dispatch(importSecretsFailure({ error }));\n    });\n};\n\nexport default ImportSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport AppUIReducer from '../slices/AppUISlice';\nimport EditSecretUIReducer from '../slices/EditSecretUISlice';\nimport MetadataReducer from '../slices/MetadataSlice';\nimport NewSecretUIReducer from '../slices/NewSecretUISlice';\nimport ShowSecretUIReducer from '../slices/ShowSecretUISlice';\nimport OptionsReducer from '../slices/OptionsSlice';\nimport ImportReducer from '../slices/ImportSlice';\n\nexport default configureStore({\n  reducer: {\n    AppUI: AppUIReducer,\n    EditSecretUI: EditSecretUIReducer,\n    Metadata: MetadataReducer,\n    NewSecretUI: NewSecretUIReducer,\n    ShowSecretUI: ShowSecretUIReducer,\n    Options: OptionsReducer,\n    Import: ImportReducer,\n  },\n});\n","import urljoin from 'url-join';\n\nexport function buildSecretURL(folders = [], basePath = '/secrets') {\n  return urljoin(basePath, folders.join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.array,\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users.map(user => (\n        <UserAvatar key={user.id} user={user} size={size} />\n      ))}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n    folder: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({\n        secret,\n        tab: secret.type === 'folder' ? 'access' : 'details',\n      })\n    );\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({ secret, tab: 'access' })\n    );\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    this.props.dispatch(\n      MetadataActions.removeSecretFromCurrentFolder({\n        secret,\n        currentFolderId,\n      })\n    );\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () =>\n        this.props.dispatch(MetadataActions.deleteSecret({ secret })),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret, currentUser, folder } = this.props;\n\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!this.props.isOnline}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!this.props.isOnline}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { online, currentUser } = state.AppUI;\n  const { metadata } = state.Metadata;\n  return {\n    isOnline: online,\n    currentUser,\n    folder: metadata.find(m => m.id === ownProps.parentFolderId),\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListItemOptions);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport store from 'stores/store';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n\n  const secretRights = secret.users.find(\n    user => user.id === currentUser.username\n  ).rights;\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL([...folders, secret.id])}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <tr className={className}>\n      <td className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders[folders.length - 1]}\n          secret={secret}\n        />\n      </td>\n    </tr>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    store.dispatch(MetadataActions.addSecretToFolder({ secret, folder }));\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = store.getState().AppUI.currentUser;\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.users.find(user => user.id === currentUserId).rights !==\n        0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.users.find(user => user.id === currentUserId).rights !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  const dispatch = useDispatch();\n\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const secretRights =\n    secret.users.find(user => user.id === currentUser.username)?.rights || 0;\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => dispatch(ShowSecretUIActions.showSecret({ secret }))}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <tr className={className}>\n      <td className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </td>\n    </tr>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders[folders.length - 1]}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.array,\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: [],\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const metadata = useSelector(state => state.Metadata.metadata);\n\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) => [\n      ...memo,\n      {\n        folderId,\n        link: buildSecretURL(\n          [folderId],\n          memo[memo.length - 1] ? memo[memo.length - 1].link : undefined\n        ),\n      },\n    ],\n    []\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = metadata?.find(m => m.id === folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return [\n      ...links,\n      <div key={key} className=\"breadcrumb-item\">\n        <NavLink\n          to={link}\n          className=\"breadcrumb-link\"\n          activeClassName=\"breadcrumb-link--active\"\n          exact\n        >\n          {folder.title}\n        </NavLink>\n      </div>,\n      <Icon\n        key={`${key}-sep`}\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />,\n    ];\n  }, []);\n\n  if (withTitle) {\n    breadcrumb.unshift(\n      <Icon\n        key=\"home-sep\"\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />\n    );\n\n    breadcrumb.unshift(\n      <Title\n        key=\"home\"\n        title={currentUser.username}\n        icon=\"home\"\n        link=\"/secrets/\"\n      />\n    );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  const secrets = Object.values(folder.secrets);\n  secrets.sort((a, b) => {\n    if (a.title === null) return 1;\n    if (b.title === null) return -1;\n    return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n  });\n  return (\n    <tbody className=\"secret-list-content-table-body\">\n      {!folder.root === true && (\n        <tr className=\"secret-list-folder\">\n          <td colSpan=\"4\" className=\"secret-list-folder-info\">\n            <SecretListBreadcrumb\n              folders={folder.breadcrumb}\n              withTitle={false}\n            />\n          </td>\n        </tr>\n      )}\n      {secrets.map(secret => (\n        <SecretListItemFolderSecret key={secret.id} secret={secret} />\n      ))}\n    </tbody>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { escapeRegExp, set } from 'lodash';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.array,\n    isDragging: PropTypes.bool,\n    folders: PropTypes.array,\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n    currentUser: PropTypes.object,\n    allFolders: PropTypes.array,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.endDecrypt ||\n      nextProps.searchQuery !== this.props.searchQuery ||\n      nextProps.filtered !== this.props.filtered ||\n      nextProps.folders.length !== this.props.folders.length\n    );\n  }\n\n  render() {\n    const { allFolders, currentUser } = this.props;\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = {};\n    let sortedFolders = [];\n\n    const getUser = (users, username) =>\n      users.find(user => user.id === username);\n\n    if (this.props.filtered) {\n      filteredSecrets.forEach(secret => {\n        let folder = 'ROOT';\n        const user = getUser(secret.users, currentUser.username);\n        if (user) folder = Object.keys(user.folders)[0];\n        if (typeof folder === 'undefined') {\n          folder = 'ROOT';\n        }\n        set(filteredFolders, `${folder}.secrets.${secret.id}`, secret);\n        if (folder === 'ROOT') {\n          filteredFolders[folder].name = '';\n          filteredFolders[folder].root = true;\n        } else {\n          let root = false;\n          let breadcrumb = [];\n          let fullName = [];\n          let currentFolder = folder;\n          while (!root) {\n            const currentFolderDetails = allFolders.find(\n              fold => fold.id === currentFolder\n            );\n            fullName.unshift(currentFolderDetails.title);\n            root = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            ).includes('ROOT');\n\n            breadcrumb.unshift(currentFolder);\n            currentFolder = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            )[0];\n          }\n          filteredFolders[folder].name = fullName.join('/');\n          filteredFolders[folder].breadcrumb = breadcrumb;\n        }\n      });\n      sortedFolders = Object.entries(filteredFolders).map(([id, folder]) => ({\n        ...folder,\n        id,\n      }));\n      sortedFolders.sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      );\n      sortedFolders.sort((a, b) => a.root);\n    } else {\n      filteredSecrets.sort((a, b) =>\n        a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n      );\n    }\n\n    return (\n      <table className={className}>\n        <thead className=\"secret-list-content-table-header\">\n          <tr>\n            <th className=\"secret-list-item-column--title\">Title</th>\n            <th className=\"secret-list-item-column--last-modified\">\n              Last modified\n            </th>\n            <th className=\"secret-list-item-column--shared-with\">\n              Shared with\n            </th>\n            <th className=\"secret-list-item-column--actions\" />\n          </tr>\n        </thead>\n        {this.props.filtered ? (\n          sortedFolders.map(folder => (\n            <SecretListFolderInfo key={folder.id} folder={folder} />\n          ))\n        ) : (\n          <tbody className=\"secret-list-content-table-body\">\n            {filteredSecrets.map(secret => (\n              <SecretListItem\n                key={secret.id}\n                secret={secret}\n                folders={this.props.folders}\n              />\n            ))}\n          </tbody>\n        )}\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.AppUI;\n  const allFolders =\n    Object.values(state.Metadata.metadata).filter(\n      secret => secret.type === 'folder'\n    ) || [];\n\n  return {\n    currentUser,\n    allFolders,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={() => dispatch(MetadataActions.loadMetadata())}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.object,\n    newSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    isLoading: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    this.props.metadataActions.createSecret({\n      folder: folder?.id,\n      isFolder,\n      title,\n      data,\n    });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.newSecretActions.hideModal}\n      >\n        <Modal.Header title={isFolder ? 'Add new folder' : 'Add new secret'} />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={isFolder ? 'Folder title' : 'Secret title'}\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={this.props.newSecretActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={this.props.newSecretActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.newSecretActions.hideModal}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={this.props.isLoading}\n          >\n            {isFolder ? 'Add folder' : 'Add secret'}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newSecretActions: bindActionCreators(NewSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.NewSecretUI,\n    isLoading: state.AppUI.loading,\n    folder: ownProps.folder,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretNew);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Secret from 'models/Secret';\n\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n};\n\nfunction SecretListNew({ folder }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const dispatch = useDispatch();\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew folder={folder} />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n          )\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        Add secret\n      </Button>\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n          )\n        }\n      >\n        <Icon id=\"add-folder\" size=\"small\" />\n        Create folder\n      </Button>\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SecretListSearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\nimport { connect } from 'react-redux';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    message: PropTypes.string,\n    state: PropTypes.number,\n    total: PropTypes.number,\n  };\n\n  static getDerivedStateFromProps({ message }) {\n    const nextMessage =\n      message instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    const { state, total } = this.props;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = _state => {\n  const { message, state, total } = _state.AppUI.status;\n  return {\n    message,\n    state,\n    total,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectProgress);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\n\nimport Secret from 'models/Secret';\n\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.array,\n    secrets: PropTypes.array,\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n    status: PropTypes.string,\n  };\n\n  static defaultProps = {\n    folders: [],\n    secrets: {},\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = 'All';\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = 'My secrets';\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = 'Shared secrets';\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        {this.props.status !== null && <UserConnectProgress />}\n        <div className=\"page-content\">\n          {!this.props.showAll &&\n            !this.props.showMine &&\n            !this.props.showShared && (\n              <div className=\"page-content-actions\">\n                <SecretListNew folder={this.props.folder} />\n              </div>\n            )}\n          <SecretListContent\n            filtered={filtered}\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={this.props.status === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nconst mapStateToProps = state => {\n  const { status } = state.AppUI;\n  return {\n    status,\n  };\n};\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(connect(mapStateToProps)(SecretList))\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport SecretList from 'components/secrets/SecretList';\n\nimport {\n  getAllSecrets,\n  getMySecrets,\n  getSecretsInFolder,\n  getSharedSecrets,\n} from 'selectors/MetadataSelectors';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  const metadata = useSelector(state => state.Metadata.metadata);\n  const allSecrets = useSelector(getAllSecrets);\n  const mySecrets = useSelector(getMySecrets);\n  const sharedSecrets = useSelector(getSharedSecrets);\n  const folders = params.path ? params.path.split('/') : [];\n  const folderId = folders[folders.length - 1];\n  const folderSecrets = useSelector(state =>\n    getSecretsInFolder(state, folderId)\n  );\n  if (showAll) {\n    return <SecretList secrets={allSecrets} showAll />;\n  } else if (showMine) {\n    return <SecretList secrets={mySecrets} showMine />;\n  } else if (showShared) {\n    return <SecretList secrets={sharedSecrets} showShared />;\n  }\n  const folder = metadata.find(f => f.id === folderId);\n  return (\n    <SecretList folder={folder} folders={folders} secrets={folderSecrets} />\n  );\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ShortLoginShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideShortLogin}\n      >\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showShortLogin, loading } = state.Options;\n  return {\n    errors,\n    shown: showShortLogin,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortLoginShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.object,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={this.props.actions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.totp}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showQRCode, loading } = state.Options;\n  return {\n    errors,\n    shown: showQRCode,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`);\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass RescueCodesShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.array,\n    currentUser: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = props.currentUser;\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideRescueCodes}\n      >\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { rescueCodes, showRescueCodes } = state.Options;\n  const { currentUser } = state.AppUI;\n  return {\n    rescueCodes,\n    shown: showRescueCodes,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RescueCodesShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n    dispatch: PropTypes.func,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    this.props.dispatch(\n      OptionsActions.changePassword({\n        newPass: this.props.newPass1,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={() => this.props.dispatch(OptionsActions.hideChangePassword())}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={(...args) =>\n                this.props.dispatch(OptionsActions.changeNewPass1(...args))\n              }\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={(...args) =>\n                    this.props.dispatch(OptionsActions.changeNewPass2(...args))\n                  }\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={() =>\n              this.props.dispatch(OptionsActions.hideChangePassword())\n            }\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  } = state.Options.newPass;\n  return {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  };\n};\n\nexport default connect(mapStateToProps)(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.object,\n    newPass: PropTypes.object,\n    isOnline: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChangeTimeToClose = this.onChangeTimeToClose.bind(this);\n  }\n\n  onChangeTimeToClose({ value }) {\n    this.props.actions.changeTimeToClose({\n      timeToClose: parseInt(value, 10) || 0,\n    });\n  }\n\n  render() {\n    const { options, isOnline } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.totp}\n                onChange={this.props.actions.toggleTotp}\n                disabled={!isOnline}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.totp && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={this.props.actions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.shortLogin}\n                onChange={this.props.actions.toggleShortLogin}\n                disabled={!isOnline}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.timeToClose > 0}\n                onChange={this.props.actions.toggleAutoLogout}\n                disabled={!isOnline}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {options.timeToClose > 0 && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={options.timeToClose}\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    debounce={800}\n                    disabled={!isOnline}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={this.props.actions.showChangePassword}\n                disabled={!isOnline}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { options } = state.Options;\n  const { online } = state.AppUI;\n  return {\n    options,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.name}\n        name={this.props.field.name}\n        value={this.props.field.value}\n        onChange={this.handleChange}\n        type={this.props.field.type}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport * as ImportActions from 'slices/ImportSlice';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields);\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields[key]}\n          onChange={this.props.actions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ImportActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { mandatoryFields } = state.Import;\n  return {\n    mandatoryFields,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport * as ImportActions from 'slices/ImportSlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.object,\n    importActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    this.props.importActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    this.props.importActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      this.props.metadataActions.loadMetadata();\n      setTimeout(() => {\n        this.props.importActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error.message}</span>}\n          {Object.keys(this.props.mandatoryFields).length > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  importActions: bindActionCreators(ImportActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  } = state.Import;\n  return {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport secretin from 'utils/secretin';\nimport Secretin from 'secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport { getSecretsInFolder } from 'selectors/MetadataSelectors';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.object,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      statue: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n    this.handleConnectionChange = this.handleConnectionChange.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener('connectionChange', this.handleConnectionChange);\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      this.handleConnectionChange\n    );\n  }\n\n  handleConnectionChange({ connection }) {\n    this.props.dispatch(AppUIActions.connectionChange(connection));\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      if (options.timeToClose > 0) {\n        const delay = options.timeToClose * 60 * 1000;\n        this.disconnectingEvent = setTimeout(\n          () => this.props.dispatch(AppUIActions.disconnectUser()),\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    // eslint-disable-next-line no-undef\n    const shortCommit = SECRETIN_APP_COMMIT\n      ? // eslint-disable-next-line no-undef\n        SECRETIN_APP_COMMIT.substr(0, 7)\n      : '';\n    // eslint-disable-next-line no-undef\n    const secretinAppVersion = SECRETIN_APP_COMMIT ? (\n      <span className=\"secretin-version\">\n        secretin-app{' '}\n        <a\n          // eslint-disable-next-line no-undef\n          href={`https://github.com/secretin/secretin-app/commit/${SECRETIN_APP_COMMIT}`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {shortCommit}\n        </a>\n      </span>\n    ) : (\n      <span className=\"secretin-version\">secretin-app dev</span>\n    );\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          {this.props.connected ? (\n            <Layout />\n          ) : (\n            <UserConnect\n              savedUsername={this.props.savedUsername}\n              loading={this.props.loading}\n              errors={this.props.errors}\n              status={this.props.status}\n            />\n          )}\n          <span className=\"secretin-version\">\n            secretin-lib v{Secretin.version}\n          </span>\n          {secretinAppVersion}\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { savedUsername, loading, errors, connected, status } = state.AppUI;\n  const secrets = getSecretsInFolder(state);\n  const { options } = state.Options;\n  return {\n    savedUsername,\n    loading,\n    errors,\n    connected,\n    status,\n    secrets,\n    options,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { unregister } from 'utils/registerServiceWorker';\n\nimport store from 'stores/store';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootEl\n);\nif (typeof window.process === 'undefined') {\n  unregister(); // Get rid of the service worker, we don't need it\n}\n\n// if (module.hot) {\n//   module.hot.accept('components/App', () => {\n//     // eslint-disable-next-line global-require\n//     const NextApp = require('components/App').default;\n\n//     ReactDOM.render(<NextApp />, rootEl);\n//   });\n// }\n"],"sourceRoot":""}