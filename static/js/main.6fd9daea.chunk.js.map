{"version":3,"sources":["utils/secretin.js","utils/alt.js","actions/AppUIActions.js","utils/makeImmutable.js","actions/MetadataActions.js","stores/AppUIStore.js","actions/OptionsActions.js","stores/OptionsStore.js","models/User.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/Secret.js","stores/MetadataStore.js","components/utilities/Form.js","components/utilities/Icon.js","components/utilities/Button.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Modal.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","actions/ShowSecretUIActions.js","stores/ShowSecretUIStore.js","actions/EditSecretUIActions.js","stores/EditSecretUIStore.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/utilities/Select.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/secrets/SecretEditableTitle.js","components/utilities/Flash.js","components/utilities/Tabs.js","components/secrets/SecretShow.js","utils/URLHelper.js","components/users/UserAvatars.js","components/utilities/Dropdown.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","actions/NewSecretUIActions.js","stores/NewSecretUIStore.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","actions/ImportActions.js","stores/ImportStore.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["api","process","window","URLSearchParams","location","search","get","secretin","Secretin","SecretinBrowserAdapter","API","Server","Statuses","Object","objectSpread","Errors","alt","Alt","batchingFunction","ReactDOM","unstable_batchedUpdates","debug","DecryptMetadataStatus","EndDecryptMetadataStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","UsernameAlreadyExistsError","UserNotFoundError","InvalidPasswordError","NeedTOTPTokenError","AppUIActions","classCallCheck","this","generateActions","dispatch","currentUser","disconnect","_this","username","_ref","password","confirmPassword","setTimeout","createUserFailure","error","newUser","then","createUserSuccess","catch","_this2","_ref2","token","loginUser","loginUserProgress","loginUserSuccess","options","totp","shortLogin","canITryShortLogin","metadata","metadatas","loginUserFailure","status","_this3","constructor","_this4","shortpass","_ref3","shortlogin","deactivateShortLogin","createActions","makeImmutable","giveStoreModel","StoreModel","config","setState","currentState","nextState","state","getState","onSerialize","toJS","onDeserialize","data","Immutable","fromJS","FriendNotFoundError","MetadataActions","refreshUser","loadMetadataSuccess","promise","arguments","length","undefined","isFolder","title","folder","addFolder","addSecret","createSecretSuccess","createSecretFailure","secret","editSecret","id","updateSecretSuccess","updateSecretFailure","newTitle","renameSecret","renameSecretSuccess","renameSecretFailure","_this5","_ref4","deleteSecret","deleteSecretFailure","deleteSecretSuccess","_this6","_ref5","user","rights","shareSecret","createSecretUserRightsSuccess","createSecretUserRightsFailure","unknown","_this7","_ref6","updateSecretUserRightsSuccess","updateSecretUserRightsFailure","_this8","_ref7","unshareSecret","deleteSecretUserRightsSuccess","deleteSecretUserRightsFailure","_this9","_ref8","addSecretToFolder","addSecretToFolderSuccess","addSecretToFolderFailure","_this10","_ref9","currentFolderId","removeSecretFromFolder","removeSecretFromCurrentFolderSuccess","removeSecretFromCurrentFolderFailure","AppUIState","Record","savedUsername","loading","connected","online","errors","Map","AppUIStore","bindActions","bindAction","CREATE_SECRET","CREATE_SECRET_SUCCESS","endLoading","CREATE_SECRET_FAILURE","getSavedUsername","merge","connection","set","createStore","OptionsActions","deactivateTotp","deactivateTotpSuccess","deactivateTotpFailure","seed","testTotp","b32","activateTotp","activateTotpSuccess","err","activateTotpFailure","activateShortLogin","uuid","v4","activateShortLoginSuccess","activateShortLoginFailure","deactivateShortLoginSuccess","deactivateShortLoginFailure","newPass","changePassword","changePasswordSuccess","changePasswordFailure","checked","confirm","getRescueCodes","rescueCodes","showRescueCodesSuccess","delay","changeTimeToClose","timeToClose","editOption","changeDelaySuccess","changeDelayFailure","OptionsState","showQRCode","showShortLogin","showRescueCodes","shown","newPass1","newPass2","List","OptionsStore","LOGIN_USER_SUCCESS","onLoadOptions","setIn","value","defaultRecord","folders","UserRights","userRightLabel","accessRights","Error","concat","User","attributes","possibleConstructorReturn","getPrototypeOf","call","rawData","map","key","SecretFieldRecord","mapKeys","date","type","label","content","fields","SecretDataRecord","params","update","push","defaultFieds","reduce","record","field","addNewField","createFromRaw","toList","DEFAULT_FIELDS","lastModifiedBy","lastModifiedAt","users","Secret","size","accessRightForUser","moment","MetadataState","buildSecrets","MetadataStore","onLoadMetadataSuccess","_ref10","updateIn","userToUpdate","_ref11","filterNot","userToFilter","secretId","folderId","getCurrentUser","userId","filter","metadatum","getIn","getAllSecrets","first","Form","props","uniqueId","onSubmit","bind","assertThisInitialized","e","preventDefault","disabled","className","classNames","react_default","a","createElement","autoComplete","name","style","display","children","Component","defaultProps","SIZES","small","base","Icon","_this$props","defineProperty","width","height","xlinkHref","Button","handleClick","onClick","buttonStyle","to","react_router_dom","form","tabIndex","Input","onChange","handleChange","onTogglePasswordShow","showPassword","autoSelect","input","select","target","input--error","autoFocus","placeholder","readOnly","actions","inputProps","htmlFor","assign","ref","utilities_Button","utilities_Icon","debounce","UserConnect","toggleSignup","signup","showShortpass","createUser","utilities_Form","isOnline","db","utilities_Input","isEmpty","Modal","modal--centered","centered","Modal_default","backdropClassName","show","onHide","onClose","onBackdropClick","Body","Header","Footer","Confirm","handleAccept","handleCancel","Promise","resolve","reject","accept","cancel","used","utilities_Modal","text","cancelLabel","acceptLabel","confirmProps","comfirmElement","document","body","appendChild","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","disableShortLogin","hideShortpass","users_UserConnectShortPass","UserConnectForm","SidebarMenuLink","objectWithoutProperties","activeClassName","exportDb","filename","element","setAttribute","encodeURIComponent","click","removeChild","download","format","Sidebar","exact","ShowSecretUIActions","tab","showModal","showSecretSuccess","getSecret","raw","ShowSecretUIState","isUpdating","UPDATE_SECRET","UPDATE_SECRET_SUCCESS","UPDATE_SECRET_FAILURE","RENAME_SECRET","RENAME_SECRET_SUCCESS","RENAME_SECRET_FAILURE","CREATE_SECRET_USER_RIGHTS","UPDATE_SECRET_USER_RIGHTS","DELETE_SECRET_USER_RIGHTS","CREATE_SECRET_USER_RIGHTS_SUCCESS","UPDATE_SECRET_USER_RIGHTS_SUCCESS","DELETE_SECRET_USER_RIGHTS_SUCCESS","CREATE_SECRET_USER_RIGHTS_FAILURE","UPDATE_SECRET_USER_RIGHTS_FAILURE","DELETE_SECRET_USER_RIGHTS_FAILURE","ShowSecretUIStore","onUpdateSecret","onUpdateSecretSuccess","onUpdateSecretFailure","waitFor","getById","toMap","EditSecretUIActions","EditSecretUIState","isEditing","EditSecretUIStore","SHOW_SECRET_SUCCESS","HIDE_MODAL","onHideModal","onUpdateData","findIndex","fieldToUpdate","SecretField","onCopy","onGenerate","copyToClipboard","Utils","PasswordGenerator","generatePassword","isNew","href","rel","canUpdate","SecretFields","secrets_SecretField","SecretEdit","secrets_SecretFields","changeField","connectToStores","Select","getValue","option","noop","WindowsSecretEdit","sortBy","reverse","utilities_Select","COLORS","UserAvatar","color","fullName","colorIndex","split","sum","letter","charCodeAt","getAvatarColor","names","toUpperCase","substring","getInitials","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","users_UserAvatar","iconOnly","SecretUserListNew","on","createSecretUserRights","isValid","SecretUserList","updateSecretUserRights","deleteSecretUserRights","canShare","canBeSharedBy","secrets_SecretUserListItem","cantShare","isCurrentUser","toArray","secrets_SecretUserListNew","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","Flash","Tabs","Tabs_default","animation","Tab","BootstrapTab","SecretShow","handleChangeTab","changeTab","updateSecret","currentUserId","canBeUpdatedBy","hideModal","getIcon","secrets_SecretEditableTitle","utilities_Flash","Tabs_Tabs","activeKey","onSelect","Tabs_Tab","eventKey","secrets_WindowsSecretEdit","secrets_SecretEdit","secrets_SecretUserList","buildSecretURL","basePath","urljoin","join","UserAvatars","Dropdown","MenuItem","MenuItem_default","SecretListItemOptions","handleShow","showSecret","handleShare","handleMoveToParent","parentFolderId","removeSecretFromCurrentFolder","handleDelete","_this$props2","utilities_Dropdown","pullRight","Toggle","Menu","canBeDeleted","divider","itemTarget","drop","monitor","getItem","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connect","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","secret-list-item--is-dragging","secret-list-item--is-over","secret-list-item--can-drop","secret-list-item--cant-drop","link","fromNow","users_UserAvatars","Options","last","SecretListItemFolderTarget","DropTarget","dropTarget","SecretListItem_Secret","SecretListItem","Folder","Title","icon","withTitle","SecretListBreadcrumb","breadcrumb","memo","links","unshift","utilities_Title","SecretListFolderInfo","secrets","toLowerCase","has","colSpan","secrets_SecretListBreadcrumb","SecretListContent","nextProps","endDecrypt","searchQuery","filtered","secret-list-content-table--is-dragging","fuzzyRegexp","RegExp","c","escapeRegExp","filteredSecrets","test","filteredFolders","allFolders","getAllFolders","forEach","folderSeq","entrySeq","root","currentFolder","secrets_SecretListFolderInfo","secrets_SecretListItem","SecretListRefresh","loadMetadata","NewSecretUIActions","NewSecretUIState","createWithDefaultFields","NewSecretUIStore","SecretNew","toObject","createSecret","changeTitle","required","isLoading","SecretListNew","canWrite","secrets_SecretNew","SecretListSearch","focus","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","message","nextStatus","_this$props$status","total","Math","round","SecretList","onSearch","showAll","showMine","showShared","secrets_SecretListRefresh","secrets_SecretListSearch","users_UserConnectProgress","secrets_SecretListNew","secrets_SecretListContent","secrets_SecretList","DragDropContext","HTML5Backend","DragLayer","SecretListContainer","match","getMySecret","getSharedSecret","path","getSecretsInFolder","QRCodeShow","hideShortLogin","generateSeed","replace","slice","hideQRCode","qrcode_react_lib_default","maxLength","getFile","codes","code","i","toConsumableArray","Blob","hideRescueCodes","URL","createObjectURL","ChangePasswordShow","handleChangePassword","getNewPass","hideChangePassword","changeNewPass1","changeNewPass2","Checkbox","checboxClassName","checkbox--checked","checkbox--unchecked","OptionsContainer","parseInt","options_QRCodeShow","utilities_Checkbox","toggleTotp","RescueCodesShow","ShortLoginShow","toggleShortLogin","toggleAutoLogout","onChangeTimeToClose","min","max","step","options_ChangePasswordShow","showChangePassword","getOptions","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","InternalProgressBar","progressFunction","func","child","hashedParent","strings","querySelectorAll","j","textContent","hashedTitle","rHashedTitle","defaultProgress","console","log","parseGroup","group","progress","entryPromises","childEntry","childGroup","getElementsByTagName","addAndParseGroup","importers","keepass","parse","xml","mandatoryField","DOMParser","parseFromString","count","nb","groups","detect","file","parser","isKeepass","mandatoryFields","importDb","isSecretin","JSON","ImportActions","reader","FileReader","readAsText","onload","result","importType","findKey","importer","detectTypeSuccess","detectTypeFailure","importStatus","importTotal","importSecretsProgress","importSecretsSuccess","importSecretsFailure","ImportState","importing","success","ImportStore","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","import_ImportFileChooser","ImportMandatoryField","ImportersMandatoryFields","keys","inputs","import_ImportMandatoryField","changeMandatoryField","ImportContainer","handleFileChoosen","handleStartParsing","detectType","importSecrets","defaultStore","utilities_Spinner","ImportMandatoryFields","Layout","secrets_SecretShow","components_Sidebar","react_router","secrets_SecretListContainer","component","App","disconnectingEvent","onAppFocus","onAppBlur","addEventListener","_AppUIStore$getState","connectionChange","removeEventListener","clearTimeout","disconnectUser","basename","components_Layout","users_UserConnect","version","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","rootEl","getElementById","components_App","origin","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6fd9daea.chunk.js","sourcesContent":["import Secretin from 'secretin';\nimport { SecretinBrowserAdapter } from 'secretin/dist/adapters/browser';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3000';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import ReactDOM from 'react-dom';\nimport Alt from 'alt';\n\nconst alt = new Alt({\n  batchingFunction: ReactDOM.unstable_batchedUpdates,\n});\nAlt.debug('alt', alt);\n\nexport default alt;\n","import alt from 'utils/alt';\nimport secretin, { Statuses, Errors } from 'utils/secretin';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\nclass AppUIActions {\n  constructor() {\n    this.generateActions(\n      'createUserSuccess',\n      'createUserFailure',\n      'loginUserSuccess',\n      'loginUserFailure',\n      'appReady',\n      'connectionChange'\n    );\n  }\n\n  disconnectUser() {\n    return dispatch => {\n      dispatch();\n      secretin.currentUser.disconnect();\n    };\n  }\n\n  createUser({ username, password, confirmPassword }) {\n    return dispatch => {\n      dispatch();\n      if (password !== confirmPassword) {\n        setTimeout(\n          () =>\n            this.createUserFailure({\n              error: { confirmPassword: 'Passwords mismatch' },\n            }),\n          100\n        );\n      } else {\n        secretin\n          .newUser(username, password)\n          .then(currentUser => this.createUserSuccess({ currentUser }))\n          .catch(error => {\n            if (error instanceof UsernameAlreadyExistsError) {\n              return this.createUserFailure({\n                error: { username: 'User already exists' },\n              });\n            }\n            throw error;\n          });\n      }\n    };\n  }\n\n  loginUser({ username, password, token }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .loginUser(username, password, token, this.loginUserProgress, false)\n        .then(currentUser =>\n          this.loginUserSuccess({\n            currentUser,\n            options: {\n              ...currentUser.options,\n              totp: currentUser.totp,\n              shortLogin: secretin.canITryShortLogin(),\n            },\n            metadata: currentUser.metadatas,\n          })\n        )\n        .catch(error => {\n          if (error instanceof UserNotFoundError) {\n            return this.loginUserFailure({\n              error: { username: 'User not found' },\n            });\n          } else if (error instanceof InvalidPasswordError) {\n            if (token) {\n              return this.loginUserFailure({\n                error: {\n                  totp: 'Token',\n                  password: 'Invalid password',\n                  token: 'or invalid token',\n                },\n              });\n            }\n            return this.loginUserFailure({\n              error: { password: 'Invalid password' },\n            });\n          } else if (error instanceof NeedTOTPTokenError) {\n            return this.loginUserFailure({\n              error: { totp: 'Token' },\n            });\n          }\n          throw error;\n        });\n    };\n  }\n\n  loginUserProgress(status) {\n    return dispatch => {\n      const currentUser = secretin.currentUser;\n      switch (status.constructor) {\n        case DecryptMetadataCacheStatus:\n          return dispatch({ status });\n        case DecryptMetadataStatus:\n          return dispatch({ status });\n        case DecryptUserOptionsStatus:\n          return dispatch({\n            status,\n            currentUser,\n          });\n        case EndDecryptMetadataStatus:\n          this.loginUserSuccess({\n            currentUser,\n            options: {\n              ...currentUser.options,\n              totp: currentUser.totp,\n              shortLogin: secretin.canITryShortLogin(),\n            },\n            metadata: currentUser.metadatas,\n          });\n          return dispatch({\n            status: null,\n          });\n        default:\n          return;\n      }\n    };\n  }\n\n  shortLogin({ shortpass }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .shortLogin(shortpass, this.loginUserProgress, false)\n        .then(currentUser => {\n          this.loginUserSuccess({\n            currentUser,\n            options: {\n              ...currentUser.options,\n              totp: currentUser.totp,\n              shortLogin: secretin.canITryShortLogin(),\n            },\n            metadata: currentUser.metadatas,\n          });\n        })\n        .catch(() =>\n          this.loginUserFailure({\n            error: { shortlogin: 'Invalid shortpass' },\n          })\n        );\n    };\n  }\n\n  disableShortLogin() {\n    return dispatch => {\n      dispatch();\n      secretin.deactivateShortLogin();\n    };\n  }\n}\n\nexport default alt.createActions(AppUIActions);\n","import Immutable from 'immutable';\n\nexport default function makeImmutable(giveStoreModel) {\n  const StoreModel = giveStoreModel;\n\n  StoreModel.config = {\n    setState(currentState, nextState) {\n      this.state = nextState;\n      return this.state;\n    },\n\n    getState(currentState) {\n      return currentState.state || currentState;\n    },\n\n    onSerialize(currentState) {\n      const state = currentState.state || currentState;\n      return state.toJS();\n    },\n\n    onDeserialize(data) {\n      return Immutable.fromJS(data);\n    },\n  };\n\n  return StoreModel;\n}\n","import alt from 'utils/alt';\nimport secretin, { Errors } from 'utils/secretin';\n\nconst { FriendNotFoundError } = Errors;\n\nclass MetadataActions {\n  constructor() {\n    this.generateActions(\n      'loadMetadataSuccess',\n      'createSecretSuccess',\n      'createSecretFailure',\n      'updateSecretSuccess',\n      'updateSecretFailure',\n      'renameSecretSuccess',\n      'renameSecretFailure',\n      'deleteSecretSuccess',\n      'deleteSecretFailure',\n      'createSecretUserRightsSuccess',\n      'createSecretUserRightsFailure',\n      'updateSecretUserRightsSuccess',\n      'updateSecretUserRightsFailure',\n      'deleteSecretUserRightsSuccess',\n      'deleteSecretUserRightsFailure',\n      'removeSecretFromCurrentFolderSuccess',\n      'removeSecretFromCurrentFolderFailure',\n      'addSecretToFolderSuccess',\n      'addSecretToFolderFailure'\n    );\n  }\n\n  loadMetadata() {\n    return dispatch => {\n      dispatch();\n      secretin.refreshUser().then(() => {\n        this.loadMetadataSuccess({\n          metadata: secretin.currentUser.metadatas,\n        });\n      });\n    };\n  }\n\n  createSecret({ title, data, folder, isFolder } = { isFolder: false }) {\n    let promise;\n    if (isFolder) {\n      if (folder) {\n        promise = secretin.addFolder(title, folder);\n      } else {\n        promise = secretin.addFolder(title);\n      }\n    } else if (folder) {\n      promise = secretin.addSecret(title, data.toJS(), folder);\n    } else {\n      promise = secretin.addSecret(title, data.toJS());\n    }\n\n    return dispatch => {\n      dispatch();\n\n      promise\n        .then(() =>\n          this.createSecretSuccess({\n            metadata: secretin.currentUser.metadatas,\n          })\n        )\n        .catch(error => {\n          this.createSecretFailure({ error });\n          throw error;\n        });\n    };\n  }\n\n  updateSecret({ secret, data }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .editSecret(secret.id, data)\n        .then(() => {\n          this.updateSecretSuccess({\n            metadata: secretin.currentUser.metadatas,\n            data,\n          });\n        })\n        .catch(error => {\n          this.updateSecretFailure({ error });\n          throw error;\n        });\n    };\n  }\n\n  renameSecret({ secret, newTitle }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .renameSecret(secret.id, newTitle)\n        .then(() => {\n          this.renameSecretSuccess({\n            metadata: secretin.currentUser.metadatas,\n          });\n        })\n        .catch(error => {\n          this.renameSecretFailure({ error });\n          throw error;\n        });\n    };\n  }\n\n  deleteSecret({ secret }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .deleteSecret(secret.id)\n        .catch(error => {\n          this.deleteSecretFailure({\n            metadata: secretin.currentUser.metadatas,\n          });\n          throw error;\n        })\n        .then(() =>\n          this.deleteSecretSuccess({\n            metadata: secretin.currentUser.metadatas,\n          })\n        );\n    };\n  }\n\n  createSecretUserRights({ secret, user, rights }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .shareSecret(secret.id, user.username, rights)\n        .then(() => secretin.refreshUser())\n        .then(() => {\n          this.createSecretUserRightsSuccess({\n            metadata: secretin.currentUser.metadatas,\n          });\n        })\n        .catch(error => {\n          if (error instanceof FriendNotFoundError) {\n            return this.createSecretUserRightsFailure({\n              error: { username: 'User not found' },\n            });\n          }\n          this.createSecretUserRightsFailure({\n            error: { unknown: 'Unknown error' },\n          });\n          throw error;\n        });\n    };\n  }\n\n  updateSecretUserRights({ secret, user, rights }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .shareSecret(secret.id, user.username, rights)\n        .then(() =>\n          this.updateSecretUserRightsSuccess({ secret, user, rights })\n        )\n        .catch(error => {\n          this.updateSecretUserRightsFailure({\n            error: { unknown: 'Unknown error' },\n          });\n          throw error;\n        });\n    };\n  }\n\n  deleteSecretUserRights({ secret, user }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .unshareSecret(secret.id, user.username)\n        .then(() => this.deleteSecretUserRightsSuccess({ secret, user }))\n        .catch(error => {\n          this.deleteSecretUserRightsFailure({\n            error: { unknown: 'Unknown error' },\n          });\n          throw error;\n        });\n    };\n  }\n\n  addSecretToFolder({ secret, folder }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .addSecretToFolder(secret.id, folder.id)\n        .then(() =>\n          this.addSecretToFolderSuccess({\n            secret,\n            folder,\n            metadata: secretin.currentUser.metadatas,\n          })\n        )\n        .catch(error => {\n          this.addSecretToFolderFailure({\n            error: { unknown: 'Unknown error' },\n          });\n          throw error;\n        });\n    };\n  }\n\n  removeSecretFromCurrentFolder({ secret, currentFolderId }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .removeSecretFromFolder(secret.id, currentFolderId)\n        .then(() =>\n          this.removeSecretFromCurrentFolderSuccess({\n            secret,\n            currentFolderId,\n            metadata: secretin.currentUser.metadatas,\n          })\n        )\n        .catch(error => {\n          this.removeSecretFromCurrentFolderFailure({\n            error: { unknown: 'Unknown error' },\n          });\n          throw error;\n        });\n    };\n  }\n}\n\nexport default alt.createActions(MetadataActions);\n","import Immutable, { Record } from 'immutable';\nimport alt from 'utils/alt';\nimport secretin from 'utils/secretin';\nimport makeImmutable from 'utils/makeImmutable';\n\nimport AppUIActions from 'actions/AppUIActions';\nimport MetadataActions from 'actions/MetadataActions';\n\nconst AppUIState = new Record({\n  savedUsername: '',\n  loading: false,\n  connected: false,\n  online: true,\n  errors: new Immutable.Map(),\n  currentUser: null,\n  status: null,\n});\n\nclass AppUIStore {\n  constructor() {\n    this.bindActions(AppUIActions);\n    this.bindAction(MetadataActions.CREATE_SECRET, this.loading);\n    this.bindAction(MetadataActions.CREATE_SECRET_SUCCESS, this.endLoading);\n    this.bindAction(MetadataActions.CREATE_SECRET_FAILURE, this.endLoading);\n\n    this.state = new AppUIState({\n      savedUsername: secretin.getSavedUsername(),\n    });\n  }\n\n  loading() {\n    this.setState(\n      this.state.merge({\n        loading: true,\n      })\n    );\n  }\n\n  endLoading() {\n    this.setState(\n      this.state.merge({\n        loading: false,\n      })\n    );\n  }\n\n  onConnectionChange({ connection }) {\n    this.setState(\n      this.state.merge({\n        online: connection === 'online',\n      })\n    );\n  }\n\n  onCreateUser() {\n    this.setState(\n      this.state.merge({\n        loading: true,\n      })\n    );\n  }\n\n  onDisconnectUser() {\n    this.setState(\n      this.state.merge({\n        savedUsername: secretin.getSavedUsername(),\n        loading: false,\n        connected: false,\n        errors: new Immutable.Map(),\n        currentUser: null,\n      })\n    );\n  }\n\n  onCreateUserSuccess({ currentUser }) {\n    this.setState(\n      this.state.merge({\n        loading: false,\n        connected: true,\n        errors: new Immutable.Map(),\n        currentUser,\n      })\n    );\n  }\n\n  onCreateUserFailure({ error }) {\n    this.setState(\n      this.state.merge({\n        loading: false,\n        connected: false,\n        errors: new Immutable.Map(error),\n        status: null,\n      })\n    );\n  }\n\n  onLoginUser() {\n    this.setState(\n      this.state.merge({\n        loading: true,\n      })\n    );\n  }\n\n  onShortLogin() {\n    this.setState(\n      this.state.merge({\n        loading: true,\n      })\n    );\n  }\n\n  onLoginUserProgress({ status, currentUser }) {\n    if (currentUser) {\n      this.setState(\n        this.state.merge({\n          status,\n          connected: true,\n          currentUser,\n        })\n      );\n    } else {\n      this.setState(this.state.set('status', status));\n    }\n  }\n\n  onLoginUserSuccess({ currentUser }) {\n    this.setState(\n      this.state.merge({\n        loading: false,\n        connected: true,\n        errors: new Immutable.Map(),\n        status: null,\n        currentUser,\n      })\n    );\n  }\n\n  onLoginUserFailure({ error }) {\n    this.setState(\n      this.state.merge({\n        loading: false,\n        connected: false,\n        errors: new Immutable.Map(error),\n        status: null,\n      })\n    );\n  }\n\n  static isLoading() {\n    return this.getState().get('loading');\n  }\n\n  static getCurrentUser() {\n    return this.getState().get('currentUser');\n  }\n\n  static isOnline() {\n    return this.getState().get('online');\n  }\n}\n\nexport default alt.createStore(makeImmutable(AppUIStore), 'AppUIStore');\n","import alt from 'utils/alt';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nclass OptionsActions {\n  constructor() {\n    this.generateActions(\n      'deactivateTotpSuccess',\n      'deactivateTotpFailure',\n      'activateTotpSuccess',\n      'activateTotpFailure',\n      'activateShortLoginSuccess',\n      'activateShortLoginFailure',\n      'deactivateShortLoginSuccess',\n      'deactivateShortLoginFailure',\n      'showImportKeepass',\n      'hideImportKeepass',\n      'showChangePassword',\n      'hideChangePassword',\n      'importKeepassProgress',\n      'importKeepassSuccess',\n      'importKeepassFailure',\n      'hideQRCode',\n      'hideShortLogin',\n      'changeDelaySuccess',\n      'changeDelayFailure',\n      'showRescueCodesSuccess',\n      'hideRescueCodes',\n      'changeNewPass1',\n      'changeNewPass2',\n      'changePasswordSuccess',\n      'changePasswordFailure'\n    );\n  }\n\n  deactivateTotp() {\n    return dispatch => {\n      dispatch();\n      secretin\n        .deactivateTotp()\n        .then(() => {\n          this.deactivateTotpSuccess();\n        })\n        .catch(() => {\n          this.deactivateTotpFailure();\n        });\n    };\n  }\n\n  activateTotp({ seed, token }) {\n    return dispatch => {\n      dispatch();\n      secretin.api\n        .testTotp(seed.b32, token)\n        .then(() => secretin.activateTotp(seed))\n        .then(() => {\n          this.activateTotpSuccess();\n        })\n        .catch(err => {\n          if (err === 'Invalid couple') {\n            this.activateTotpFailure({ error: 'Synchronisation error' });\n          } else {\n            this.activateTotpFailure({ error: 'An error occured' });\n          }\n        });\n    };\n  }\n\n  activateShortLogin({ shortpass }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .activateShortLogin(shortpass, uuid.v4())\n        .then(() => {\n          this.activateShortLoginSuccess({\n            shortLogin: secretin.canITryShortLogin(),\n          });\n        })\n        .catch(() => {\n          this.activateShortLoginFailure();\n        });\n    };\n  }\n\n  deactivateShortLogin() {\n    return dispatch => {\n      dispatch();\n      secretin\n        .deactivateShortLogin()\n        .then(() => {\n          this.deactivateShortLoginSuccess({\n            shortLogin: secretin.canITryShortLogin(),\n          });\n        })\n        .catch(() => {\n          this.deactivateShortLoginFailure();\n        });\n    };\n  }\n\n  changePassword({ newPass }) {\n    return dispatch => {\n      dispatch();\n      secretin\n        .changePassword(newPass)\n        .then(() => {\n          this.changePasswordSuccess();\n        })\n        .catch(() => {\n          this.changePasswordFailure();\n        });\n    };\n  }\n\n  toggleTotp({ checked }) {\n    if (checked) {\n      return true;\n    }\n\n    return this.deactivateTotp();\n  }\n\n  showRescueCodes() {\n    return dispatch => {\n      dispatch();\n      // eslint-disable-next-line no-alert\n      if (\n        !window.confirm(\n          'Be careful, this will replace your previously generated codes. Continue?'\n        )\n      ) {\n        return;\n      }\n      secretin.getRescueCodes().then(rescueCodes => {\n        this.showRescueCodesSuccess({ rescueCodes });\n      });\n    };\n  }\n\n  toggleShortLogin({ checked }) {\n    if (checked) {\n      return true;\n    }\n\n    return this.deactivateShortLogin();\n  }\n\n  toggleAutoLogout({ checked }) {\n    const delay = checked ? 30 : 0;\n    return this.changeTimeToClose({ timeToClose: delay });\n  }\n\n  changeTimeToClose({ timeToClose }) {\n    secretin\n      .editOption('timeToClose', timeToClose)\n      .then(() => {\n        this.changeDelaySuccess({ timeToClose });\n      })\n      .catch(() => {\n        this.changeDelayFailure();\n      });\n    return true;\n  }\n}\n\nexport default alt.createActions(OptionsActions);\n","import Immutable, { Record } from 'immutable';\nimport alt from 'utils/alt';\nimport makeImmutable from 'utils/makeImmutable';\n\nimport AppUIActions from 'actions/AppUIActions';\nimport OptionsActions from 'actions/OptionsActions';\n\nconst OptionsState = new Record({\n  options: new Immutable.Map(),\n  errors: new Immutable.Map(),\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: new Immutable.Map({\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  }),\n  rescueCodes: new Immutable.List(),\n  loading: false,\n});\n\nclass OptionsStore {\n  constructor() {\n    this.bindAction(AppUIActions.LOGIN_USER_SUCCESS, this.onLoadOptions);\n    this.bindActions(OptionsActions);\n\n    this.state = new OptionsState();\n  }\n\n  onLoadOptions({ options }) {\n    this.setState(this.state.set('options', new Immutable.Map(options)));\n  }\n\n  onActivateTotp() {\n    this.setState(this.state.set('loading', true));\n  }\n\n  onActivateShortLogin() {\n    this.setState(this.state.set('loading', true));\n  }\n\n  onToggleTotp(showQRCode) {\n    this.setState(this.state.set('showQRCode', showQRCode));\n  }\n\n  onToggleShortLogin(showShortLogin) {\n    this.setState(this.state.set('showShortLogin', showShortLogin));\n  }\n\n  onActivateTotpFailure({ error }) {\n    this.setState(\n      this.state.merge({\n        errors: new Immutable.Map({ totp: error }),\n        loading: false,\n      })\n    );\n  }\n\n  onHideQRCode() {\n    this.setState(\n      this.state.merge({\n        showQRCode: false,\n        loading: false,\n        errors: new Immutable.Map(),\n      })\n    );\n  }\n\n  onHideShortLogin() {\n    this.setState(\n      this.state.merge({\n        showShortLogin: false,\n        loading: false,\n        errors: new Immutable.Map(),\n      })\n    );\n  }\n\n  onActivateTotpSuccess() {\n    this.setState(\n      this.state\n        .merge({\n          showQRCode: false,\n          loading: false,\n          errors: new Immutable.Map(),\n        })\n        .setIn(['options', 'totp'], true)\n    );\n  }\n\n  onDeactivateTotpSuccess() {\n    this.setState(this.state.setIn(['options', 'totp'], false));\n  }\n\n  onDeactivateShortLoginSuccess({ shortLogin }) {\n    this.setState(this.state.setIn(['options', 'shortLogin'], shortLogin));\n  }\n\n  onActivateShortLoginSuccess({ shortLogin }) {\n    this.setState(\n      this.state\n        .merge({\n          showShortLogin: false,\n          loading: false,\n          errors: new Immutable.Map(),\n        })\n        .setIn(['options', 'shortLogin'], shortLogin)\n    );\n  }\n\n  onChangeDelaySuccess({ timeToClose }) {\n    this.setState(this.state.setIn(['options', 'timeToClose'], timeToClose));\n  }\n\n  onChangeNewPass1(newPass1) {\n    this.setState(this.state.setIn(['newPass', 'newPass1'], newPass1.value));\n  }\n\n  onChangeNewPass2(newPass2) {\n    this.setState(this.state.setIn(['newPass', 'newPass2'], newPass2.value));\n  }\n\n  onShowChangePassword() {\n    this.setState(\n      this.state\n        .setIn(['newPass', 'newPass1'], '')\n        .setIn(['newPass', 'newPass2'], '')\n        .setIn(['newPass', 'error'], '')\n        .setIn(['newPass', 'loading'], false)\n        .setIn(['newPass', 'shown'], true)\n    );\n  }\n\n  onHideChangePassword() {\n    this.setState(\n      this.state\n        .setIn(['newPass', 'newPass1'], '')\n        .setIn(['newPass', 'newPass2'], '')\n        .setIn(['newPass', 'error'], '')\n        .setIn(['newPass', 'loading'], false)\n        .setIn(['newPass', 'shown'], false)\n    );\n  }\n\n  onChangePassword() {\n    this.setState(\n      this.state\n        .setIn(['newPass', 'loading'], true)\n        .setIn(['newPass', 'error'], '')\n    );\n  }\n\n  onChangePasswordSuccess() {\n    this.setState(\n      this.state\n        .setIn(['newPass', 'newPass1'], '')\n        .setIn(['newPass', 'newPass2'], '')\n        .setIn(['newPass', 'error'], '')\n        .setIn(['newPass', 'loading'], false)\n        .setIn(['newPass', 'status'], 'success')\n    );\n  }\n\n  onChangePasswordFailure() {\n    this.setState(\n      this.state\n        .setIn(['newPass', 'error'], 'Password change failed')\n        .setIn(['newPass', 'loading'], false)\n        .setIn(['newPass', 'status'], 'failure')\n    );\n  }\n\n  onShowRescueCodesSuccess({ rescueCodes }) {\n    this.setState(\n      this.state.merge({\n        rescueCodes: new Immutable.List(rescueCodes),\n        showRescueCodes: true,\n      })\n    );\n  }\n\n  onHideRescueCodes() {\n    this.setState(\n      this.state.merge({\n        rescueCodes: new Immutable.List(),\n        showRescueCodes: false,\n      })\n    );\n  }\n\n  static getOptions() {\n    return this.getState().get('options');\n  }\n\n  static getNewPass() {\n    return this.getState().get('newPass');\n  }\n}\n\nexport default alt.createStore(makeImmutable(OptionsStore), 'OptionsStore');\n","import Immutable from 'immutable';\nimport uuid from 'uuid';\n\nconst defaultRecord = {\n  id: null,\n  username: null,\n  rights: null,\n  folders: new Immutable.Map(),\n};\n\nexport const UserRights = new Immutable.List([\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n]);\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User extends (new Immutable.Record(defaultRecord)) {\n  constructor(attributes = new Immutable.Map()) {\n    super(attributes.set('id', attributes.get('username', uuid.v4())));\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Immutable.fromJS(rawData).map((value, key) => {\n      switch (key) {\n        case 'folders':\n          return Immutable.fromJS(value);\n        default:\n          return value;\n      }\n    });\n    return new User(raw);\n  }\n}\n\nexport default User;\n","import Immutable from 'immutable';\nimport uuid from 'uuid';\n\nconst defaultRecord = {\n  id: null,\n  date: null,\n  type: 'text',\n  label: '',\n  content: '',\n};\n\nclass SecretFieldRecord extends (new Immutable.Record(defaultRecord)) {\n  constructor(attributes = new Immutable.Map()) {\n    super(attributes.set('id', attributes.get('id', uuid.v4())));\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Immutable.fromJS(rawData).mapKeys(key => {\n      switch (key) {\n        case 'value':\n          return 'content';\n        default:\n          return key;\n      }\n    });\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import Immutable from 'immutable';\n\nimport SecretFieldRecord from 'models/SecretFieldRecord';\n\nconst defaultRecord = {\n  type: 'default',\n  fields: new Immutable.List(),\n};\n\nclass SecretDataRecord extends (new Immutable.Record(defaultRecord)) {\n  addNewField(params = new Immutable.Map()) {\n    return this.update('fields', fields =>\n      fields.push(new SecretFieldRecord(params))\n    );\n  }\n\n  static createWithDefaultFields(defaultFieds) {\n    return defaultFieds.reduce(\n      (record, field) => record.addNewField(field),\n      new SecretDataRecord()\n    );\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Immutable.fromJS(rawData).map((value, key) => {\n      switch (key) {\n        case 'fields':\n          return value\n            .map(field => SecretFieldRecord.createFromRaw(field))\n            .toList();\n        default:\n          return value;\n      }\n    });\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = new Immutable.List([\n  new Immutable.Map({ label: 'login', type: 'text' }),\n  new Immutable.Map({ label: 'password', type: 'password' }),\n  new Immutable.Map({ label: 'url', type: 'url' }),\n]);\n\nexport default SecretDataRecord;\n","import Immutable from 'immutable';\nimport moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst defaultRecord = {\n  id: null,\n  type: null,\n  title: null,\n  lastModifiedBy: null,\n  lastModifiedAt: null,\n  users: new Immutable.Map(),\n  data: null,\n};\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret extends (new Immutable.Record(defaultRecord)) {\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (this.users.size > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.get(user.username).get('rights');\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Immutable.fromJS(rawData).map((value, key) => {\n      switch (key) {\n        case 'users':\n          return value.map(user => User.createFromRaw(user));\n        case 'data':\n          return SecretDataRecord.createFromRaw(value);\n        case 'lastModifiedAt':\n          return moment(value);\n        default:\n          return value;\n      }\n    });\n\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import Immutable, { Record } from 'immutable';\nimport alt from 'utils/alt';\nimport makeImmutable from 'utils/makeImmutable';\n\nimport secretin from 'utils/secretin';\nimport AppUIActions from 'actions/AppUIActions';\nimport MetadataActions from 'actions/MetadataActions';\nimport AppUIStore from 'stores/AppUIStore';\n\nimport Secret from 'models/Secret';\n\nconst MetadataState = new Record({\n  metadata: new Immutable.Map(),\n});\n\nfunction buildSecrets(metadata) {\n  return Immutable.fromJS(metadata).map(secret => Secret.createFromRaw(secret));\n}\n\nclass MetadataStore {\n  constructor() {\n    this.bindAction(\n      AppUIActions.LOGIN_USER_SUCCESS,\n      this.onLoadMetadataSuccess\n    );\n    this.bindActions(MetadataActions);\n\n    this.state = new MetadataState();\n  }\n\n  onLoadMetadataSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onCreateSecretSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onDeleteSecretSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onDeleteSecretFailure({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  // onAddSecretToFolder({ secret, folder }) {\n  //  // TODO: Do something while we add the secret to a folder\n  // }\n\n  onAddSecretToFolderSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onRemoveSecretFromCurrentFolderSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onCreateSecretUserRightsSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onUpdateSecretSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onRenameSecretSuccess({ metadata }) {\n    this.setState(this.state.set('metadata', buildSecrets(metadata)));\n  }\n\n  onUpdateSecretUserRightsSuccess({ secret, user, rights }) {\n    this.setState(\n      this.state.updateIn(['metadata', secret.id, 'users'], users =>\n        users.map(userToUpdate => {\n          if (userToUpdate.id === user.id) {\n            return userToUpdate.set('rights', rights);\n          }\n          return userToUpdate;\n        })\n      )\n    );\n  }\n\n  onDeleteSecretUserRightsSuccess({ secret, user }) {\n    this.setState(\n      this.state.updateIn(['metadata', secret.id, 'users'], users =>\n        users.filterNot(userToFilter => userToFilter.id === user.id)\n      )\n    );\n  }\n\n  static getById(secretId) {\n    const { metadata } = this.getState();\n    if (!metadata) {\n      return new Immutable.Map();\n    }\n    return metadata.get(secretId);\n  }\n\n  static getSecretsInFolder(folderId) {\n    const { metadata } = this.getState();\n    const currentUser = AppUIStore.getCurrentUser();\n    if (!currentUser || !metadata) {\n      return new Immutable.Map();\n    }\n\n    const userId = currentUser.username;\n\n    return metadata.filter(\n      metadatum =>\n        (!folderId && metadatum.getIn(['users', userId, 'folders', 'ROOT'])) ||\n        (folderId && metadatum.getIn(['users', userId, 'folders', folderId]))\n    );\n  }\n\n  static getAllFolders() {\n    const { metadata } = this.getState();\n    return (\n      metadata.filter(secret => secret.type === 'folder') || new Immutable.Map()\n    );\n  }\n\n  static getAllSecrets() {\n    const { metadata } = this.getState();\n    return (\n      metadata.filter(secret => secret.type !== 'folder') || new Immutable.Map()\n    );\n  }\n\n  static getMySecret() {\n    return (\n      this.getAllSecrets().filter(\n        secret =>\n          secret.users\n            .filter(user => user.username === secretin.currentUser.username)\n            .first()\n            .get('rights') === 2\n      ) || new Immutable.Map()\n    );\n  }\n\n  static getSharedSecret() {\n    return (\n      this.getAllSecrets().filter(secret => secret.users.size > 1) ||\n      new Immutable.Map()\n    );\n  }\n}\n\nexport default alt.createStore(makeImmutable(MetadataStore), 'MetadataStore');\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.instanceOf(Immutable.List),\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    disabled: false,\n    readOnly: false,\n    actions: new Immutable.List(),\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n  }\n\n  onChange({ value }) {\n    this.props.onChange({\n      name: this.props.name,\n      value,\n    });\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange({ target }) {\n    const { value } = target;\n    this.onChange({ value });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n    } = this.props;\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.size > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            value={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? null : 'new-password'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport Immutable from 'immutable';\nimport secretin from 'utils/secretin';\n\nimport AppUIActions from 'actions/AppUIActions';\nimport AppUIStore from 'stores/AppUIStore';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.instanceOf(Immutable.Map),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      AppUIActions.createUser({\n        username: this.state.username,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n      });\n    } else {\n      AppUIActions.loginUser({\n        username: this.state.username,\n        password: this.state.password,\n        token: this.state.token,\n      });\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? 'Sign up' : 'Sign in';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={AppUIStore.isOnline() && secretin.api.db}\n        >\n          Secret-in.me\n          <small>{status}</small>\n        </h2>\n\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.get('username')}\n          autoFocus\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.get('password')}\n          autoComplete\n        />\n        {this.props.errors.get('totp') && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.get('token')}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.get('confirmPassword')}\n          />\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                I already have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  sign in\n                </a>\n              </span>\n            ) : (\n              <span>\n                I don&apos;t have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  create one\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default UserConnect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.onClose}\n      onBackdropClick={props.onClose}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\n\nimport AppUIActions from 'actions/AppUIActions';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    AppUIActions.shortLogin({ shortpass: this.state.shortpass });\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        AppUIActions.disableShortLogin();\n        return this.props.onCancel();\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n\n        <Input\n          label=\"Shortpass\"\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default UserConnectShortPass;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport secretin from 'utils/secretin';\n\nimport AppUIActions from 'actions/AppUIActions';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.instanceOf(Immutable.Map),\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.hideShortpass = this.hideShortpass.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      AppUIActions.createUser({\n        username: this.state.username,\n        password: this.state.password,\n      });\n    } else {\n      AppUIActions.loginUser({\n        username: this.state.username,\n        password: this.state.password,\n        token: this.state.token,\n      });\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  hideShortpass() {\n    this.setState({\n      showShortpass: false,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors } = this.props;\n\n    return (\n      <div className=\"user-connect\">\n        {this.state.showShortpass ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.get('shortlogin')}\n            onCancel={this.hideShortpass}\n          />\n        ) : (\n          <UserConnectForm loading={loading} errors={errors} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default UserConnect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\n\nimport secretin from 'utils/secretin';\nimport AppUIStore from 'stores/AppUIStore';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const currentUser = AppUIStore.getCurrentUser();\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={AppUIStore.isOnline() && secretin.api.db}>\n          {AppUIStore.isOnline() ? 'Secret-In.me' : 'Offline'}\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            All\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            My secrets\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            Shared secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            Settings\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              Export secrets\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            Import secrets\n          </SidebarMenuLink>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import alt from 'utils/alt';\nimport secretin from 'utils/secretin';\n\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nclass ShowSecretUIActions {\n  constructor() {\n    this.generateActions(\n      'showModal',\n      'showSecretSuccess',\n      'hideModal',\n      'changeTab'\n    );\n  }\n\n  showSecret({ secret, tab }) {\n    this.showModal({ secret, tab });\n    return dispatch => {\n      dispatch();\n      if (secret.type === 'folder') {\n        this.showSecretSuccess({ secret });\n      } else {\n        secretin.getSecret(secret.id).then(data => {\n          const raw = !data.fields ? { fields: data } : data;\n          this.showSecretSuccess({\n            secret: secret.set('data', SecretDataRecord.createFromRaw(raw)),\n          });\n        });\n      }\n    };\n  }\n}\n\nexport default alt.createActions(ShowSecretUIActions);\n","import Immutable, { Record } from 'immutable';\nimport alt from 'utils/alt';\nimport makeImmutable from 'utils/makeImmutable';\n\nimport MetadataActions from 'actions/MetadataActions';\nimport ShowSecretUIActions from 'actions/ShowSecretUIActions';\n\nimport MetadataStore from 'stores/MetadataStore';\n\nconst ShowSecretUIState = new Record({\n  secret: null,\n  errors: new Immutable.Map(),\n  tab: 'details',\n  isUpdating: false,\n});\n\nconst {\n  UPDATE_SECRET,\n  UPDATE_SECRET_SUCCESS,\n  UPDATE_SECRET_FAILURE,\n  RENAME_SECRET,\n  RENAME_SECRET_SUCCESS,\n  RENAME_SECRET_FAILURE,\n  CREATE_SECRET_USER_RIGHTS,\n  UPDATE_SECRET_USER_RIGHTS,\n  DELETE_SECRET_USER_RIGHTS,\n  CREATE_SECRET_USER_RIGHTS_SUCCESS,\n  UPDATE_SECRET_USER_RIGHTS_SUCCESS,\n  DELETE_SECRET_USER_RIGHTS_SUCCESS,\n  CREATE_SECRET_USER_RIGHTS_FAILURE,\n  UPDATE_SECRET_USER_RIGHTS_FAILURE,\n  DELETE_SECRET_USER_RIGHTS_FAILURE,\n} = MetadataActions;\n\nclass ShowSecretUIStore {\n  constructor() {\n    this.bindActions(ShowSecretUIActions);\n    this.bindAction(UPDATE_SECRET, this.onUpdateSecret);\n    this.bindAction(RENAME_SECRET, this.onUpdateSecret);\n    this.bindAction(CREATE_SECRET_USER_RIGHTS, this.onUpdateSecret);\n    this.bindAction(CREATE_SECRET_USER_RIGHTS, this.onUpdateSecret);\n    this.bindAction(UPDATE_SECRET_USER_RIGHTS, this.onUpdateSecret);\n    this.bindAction(DELETE_SECRET_USER_RIGHTS, this.onUpdateSecret);\n    this.bindAction(UPDATE_SECRET_SUCCESS, this.onUpdateSecretSuccess);\n    this.bindAction(UPDATE_SECRET_FAILURE, this.onUpdateSecretFailure);\n    this.bindAction(RENAME_SECRET_SUCCESS, this.onUpdateSecretSuccess);\n    this.bindAction(RENAME_SECRET_FAILURE, this.onUpdateSecretFailure);\n    this.bindAction(\n      CREATE_SECRET_USER_RIGHTS_SUCCESS,\n      this.onUpdateSecretSuccess\n    );\n    this.bindAction(\n      UPDATE_SECRET_USER_RIGHTS_SUCCESS,\n      this.onUpdateSecretSuccess\n    );\n    this.bindAction(\n      DELETE_SECRET_USER_RIGHTS_SUCCESS,\n      this.onUpdateSecretSuccess\n    );\n    this.bindAction(\n      CREATE_SECRET_USER_RIGHTS_FAILURE,\n      this.onUpdateSecretFailure\n    );\n    this.bindAction(\n      UPDATE_SECRET_USER_RIGHTS_FAILURE,\n      this.onUpdateSecretFailure\n    );\n    this.bindAction(\n      DELETE_SECRET_USER_RIGHTS_FAILURE,\n      this.onUpdateSecretFailure\n    );\n\n    this.state = new ShowSecretUIState();\n  }\n\n  onShowModal({ secret, tab }) {\n    this.setState(\n      this.state.merge({\n        secret,\n        tab: tab || 'details',\n        errors: new Immutable.Map(),\n      })\n    );\n  }\n\n  onShowSecretSuccess({ secret }) {\n    this.setState(\n      this.state.set('secret', secret).set('errors', new Immutable.Map())\n    );\n  }\n\n  onHideModal() {\n    this.setState(\n      this.state.set('secret', null).set('errors', new Immutable.Map())\n    );\n  }\n\n  onChangeTab({ tab }) {\n    this.setState(this.state.set('tab', tab));\n  }\n\n  onUpdateSecret() {\n    this.setState(\n      this.state.set('errors', new Immutable.Map()).set('isUpdating', true)\n    );\n  }\n\n  onUpdateSecretSuccess() {\n    this.waitFor(MetadataStore);\n    this.setState(\n      this.state\n        .update('secret', secret =>\n          secret\n            ? secret.merge(\n                MetadataStore.getById(this.state.secret.id)\n                  .toMap()\n                  .remove('data')\n              )\n            : null\n        )\n        .set('isUpdating', false)\n        .set('errors', new Immutable.Map())\n    );\n  }\n\n  onUpdateSecretFailure({ error }) {\n    this.setState(\n      this.state\n        .set('errors', new Immutable.Map(error))\n        .set('isUpdating', false)\n    );\n  }\n}\n\nexport default alt.createStore(\n  makeImmutable(ShowSecretUIStore),\n  'ShowSecretUIStore'\n);\n","import alt from 'utils/alt';\n\nclass EditSecretUIActions {\n  constructor() {\n    this.generateActions('changeField');\n  }\n}\n\nexport default alt.createActions(EditSecretUIActions);\n","import { Record } from 'immutable';\nimport alt from 'utils/alt';\nimport makeImmutable from 'utils/makeImmutable';\n\nimport EditSecretUIActions from 'actions/EditSecretUIActions';\nimport ShowSecretUIActions from 'actions/ShowSecretUIActions';\nimport MetadataActions from 'actions/MetadataActions';\n\nconst EditSecretUIState = new Record({\n  isEditing: false,\n  data: null,\n});\n\nclass EditSecretUIStore {\n  constructor() {\n    this.bindActions(EditSecretUIActions);\n    this.bindAction(\n      ShowSecretUIActions.SHOW_SECRET_SUCCESS,\n      this.onUpdateSecret\n    );\n    this.bindAction(ShowSecretUIActions.HIDE_MODAL, this.onHideModal);\n    this.bindAction(MetadataActions.UPDATE_SECRET_SUCCESS, this.onUpdateData);\n\n    this.state = new EditSecretUIState();\n  }\n\n  onUpdateSecret({ secret }) {\n    this.setState(\n      this.state.merge({\n        isEditing: false,\n        data: secret.data,\n      })\n    );\n  }\n\n  onUpdateData({ data }) {\n    this.setState(\n      this.state.merge({\n        isEditing: false,\n        data,\n      })\n    );\n  }\n\n  onHideModal() {\n    this.setState(\n      this.state.merge({\n        isEditing: false,\n        data: null,\n      })\n    );\n  }\n\n  onChangeField({ field, value }) {\n    this.setState(\n      this.state\n        .updateIn(['data', 'fields'], fields =>\n          fields.update(\n            fields.findIndex(fieldToUpdate => fieldToUpdate.id === field.id),\n            fieldToUpdate => fieldToUpdate.set('content', value)\n          )\n        )\n        .set('isEditing', true)\n    );\n  }\n}\n\nexport default alt.createStore(\n  makeImmutable(EditSecretUIStore),\n  'EditSecretUIStore'\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\n\nimport SecretFieldRecord from 'models/SecretFieldRecord';\n\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.instanceOf(SecretFieldRecord),\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({ value: '' });\n    setTimeout(() => {\n      this.handleChange({\n        value: Utils.PasswordGenerator.generatePassword(),\n      });\n    }, 100);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            Open\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        Copy\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.field.label}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={new Immutable.List(actions)}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Button\n              title=\"Generate password\"\n              buttonStyle=\"icon\"\n              onClick={this.onGenerate}\n              tabIndex=\"-1\"\n            >\n              <Icon id=\"generate\" size=\"small\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecretField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.instanceOf(Immutable.List),\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectToStores from 'alt-utils/lib/connectToStores';\n\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nimport EditSecretUIActions from 'actions/EditSecretUIActions';\nimport EditSecretUIStore from 'stores/EditSecretUIStore';\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.instanceOf(SecretDataRecord),\n    canUpdate: PropTypes.bool,\n  };\n\n  static getStores() {\n    return [EditSecretUIStore];\n  }\n\n  static getPropsFromStores() {\n    return { data: EditSecretUIStore.getState().get('data') };\n  }\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.get('fields')}\n          onChange={\n            this.props.canUpdate ? EditSecretUIActions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connectToStores(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.instanceOf(Immutable.List),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.instanceOf(Immutable.List),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: new Immutable.List(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.size > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectToStores from 'alt-utils/lib/connectToStores';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport EditSecretUIStore from 'stores/EditSecretUIStore';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.instanceOf(SecretDataRecord),\n    canUpdate: PropTypes.bool,\n  };\n\n  static getStores() {\n    return [EditSecretUIStore];\n  }\n\n  static getPropsFromStores() {\n    return { data: EditSecretUIStore.getState().get('data') };\n  }\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ])\n      .toList();\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connectToStores(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'green-sea',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'orange',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport MetadataActions from 'actions/MetadataActions';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.instanceOf(Immutable.Map),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: User.createFromRaw({\n        username: '',\n        rights: 0,\n      }),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.set(name, value),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      'read access',\n      'read and write access',\n      'read, write and share access',\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: 'Are you sure?',\n      text: (\n        <span>\n          You are about to give <b>{rights}</b> to <b>{to}</b> on <b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: 'Share the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        MetadataActions.createSecretUserRights({\n          secret: this.props.secret,\n          user: this.state.user,\n          rights: this.state.user.rights,\n        });\n        this.setState({\n          user: User.createFromRaw({\n            username: '',\n            rights: 0,\n          }),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder=\"User name...\"\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          error={this.props.errors.get('username')}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default SecretUserListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\n\nimport Secret from 'models/Secret';\nimport MetadataActions from 'actions/MetadataActions';\nimport AppUIStore from 'stores/AppUIStore';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser) {\n  if (cantShare) {\n    return \"You dn't have the permission to share this secret\";\n  } else if (isCurrentUser) {\n    return \"You can't modify or remove yourself\";\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.instanceOf(Immutable.Map),\n    isUpdating: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    MetadataActions.updateSecretUserRights({\n      secret: this.props.secret,\n      user,\n      rights,\n    });\n  }\n\n  onRemoveUserRights(user) {\n    MetadataActions.deleteSecretUserRights({\n      secret: this.props.secret,\n      user,\n    });\n  }\n\n  render() {\n    const currentUser = AppUIStore.getCurrentUser();\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && AppUIStore.isOnline();\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users\n            .map(user => (\n              <SecretUserListItem\n                key={user.id}\n                user={user}\n                disabled={\n                  !canShare ||\n                  currentUser.username === user.id ||\n                  this.props.isUpdating\n                }\n                disabledReason={getDisabledReason(\n                  !canShare,\n                  currentUser.username === user.id\n                )}\n                onChangeUserRights={this.onChangeUserRights}\n                onRemoveUserRights={this.onRemoveUserRights}\n              />\n            ))\n            .toArray()}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SecretUserList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectToStores from 'alt-utils/lib/connectToStores';\nimport Immutable from 'immutable';\n\nimport ShowSecretUIActions from 'actions/ShowSecretUIActions';\nimport MetadataActions from 'actions/MetadataActions';\nimport ShowSecretUIStore from 'stores/ShowSecretUIStore';\nimport EditSecretUIStore from 'stores/EditSecretUIStore';\nimport AppUIStore from 'stores/AppUIStore';\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.instanceOf(Immutable.Map),\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n  };\n\n  static getStores() {\n    return [ShowSecretUIStore, EditSecretUIStore];\n  }\n\n  static getPropsFromStores() {\n    const state = ShowSecretUIStore.getState();\n    return {\n      secret: state.secret,\n      errors: state.errors,\n      shown: !!state.secret,\n      tab: state.tab,\n      isUpdating: state.isUpdating,\n      isEditing: EditSecretUIStore.getState().get('isEditing'),\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    ShowSecretUIActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    MetadataActions.updateSecret({\n      secret: this.props.secret,\n      data: EditSecretUIStore.getState().get('data'),\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = AppUIStore.getCurrentUser();\n    const users = this.props.secret.users\n      .toList()\n      .filterNot(user => user.id === currentUserId);\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(AppUIStore.getCurrentUser()) &&\n      (AppUIStore.isOnline() || users.size === 0);\n\n    return (\n      <Modal show={this.props.shown} onClose={ShowSecretUIActions.hideModal}>\n        <Modal.Header>\n          <Icon id={this.props.secret.getIcon()} size=\"small\" />\n          <SecretEditableTitle\n            title={this.props.secret.title}\n            canUpdate={canUpdate}\n            isUpdating={this.props.isUpdating}\n            onSubmit={newTitle => {\n              if (newTitle !== this.props.secret.title) {\n                setTimeout(() => {\n                  MetadataActions.renameSecret({\n                    secret: this.props.secret,\n                    newTitle,\n                  });\n                });\n              }\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {this.props.secret.type === 'windows' && (\n            <Flash type=\"info\">\n              This secret is used for your Windows domain authentication. It\n              cannot be deleted.\n            </Flash>\n          )}\n          <Tabs\n            id=\"secret-tabs\"\n            activeKey={this.props.tab}\n            onSelect={this.handleChangeTab}\n          >\n            {this.props.secret.type !== 'folder' && (\n              <Tab eventKey=\"details\" title=\"Details\">\n                {this.props.secret.type === 'windows' ? (\n                  <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                ) : (\n                  <SecretEdit\n                    isUpdating={this.props.isUpdating}\n                    canUpdate={canUpdate}\n                  />\n                )}\n              </Tab>\n            )}\n\n            {this.props.secret.type !== 'windows' && (\n              <Tab eventKey=\"access\" title=\"Who has access\">\n                <SecretUserList\n                  isUpdating={this.props.isUpdating}\n                  errors={this.props.errors}\n                  secret={this.props.secret}\n                />\n              </Tab>\n            )}\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={ShowSecretUIActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            Close\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              Save\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connectToStores(SecretShow);\n","import Immutable from 'immutable';\nimport urljoin from 'url-join';\n\nexport function buildSecretURL(\n  folders = new Immutable.List(),\n  basePath = '/secrets'\n) {\n  return urljoin(basePath, folders.toArray().join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.instanceOf(Immutable.List),\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users\n        .map(user => <UserAvatar key={user.id} user={user} size={size} />)\n        .toArray()}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppUIStore from 'stores/AppUIStore';\nimport MetadataStore from 'stores/MetadataStore';\nimport MetadataActions from 'actions/MetadataActions';\nimport ShowSecretUIActions from 'actions/ShowSecretUIActions';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    ShowSecretUIActions.showSecret({\n      secret,\n      tab: secret.type === 'folder' ? 'access' : 'details',\n    });\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    ShowSecretUIActions.showSecret({ secret, tab: 'access' });\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    MetadataActions.removeSecretFromCurrentFolder({\n      secret,\n      currentFolderId,\n    });\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () => MetadataActions.deleteSecret({ secret }),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret } = this.props;\n    const currentUser = AppUIStore.getCurrentUser();\n    const folder = MetadataStore.getById(parentFolderId);\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!AppUIStore.isOnline()}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!AppUIStore.isOnline()}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default SecretListItemOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport Immutable from 'immutable';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport MetadataActions from 'actions/MetadataActions';\n\nimport { buildSecretURL } from 'utils/URLHelper';\nimport AppUIStore from 'stores/AppUIStore';\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.instanceOf(Immutable.List),\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = AppUIStore.getCurrentUser();\n  const secretRights = secret.getIn(['users', currentUser.username, 'rights']);\n  const users = secret.users\n    .toList()\n    .filterNot(user => user.id === currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL(folders.push(secret.id))}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <tr className={className}>\n      <td className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (AppUIStore.isOnline() || users.size === 0)\n          ? connectDragSource(link)\n          : link}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.size > 0 ? <UserAvatars users={users} /> : '––'}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders.last()}\n          secret={secret}\n        />\n      </td>\n    </tr>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    MetadataActions.addSecretToFolder({ secret, folder });\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = AppUIStore.getCurrentUser();\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.getIn(['users', currentUserId, 'rights']) !== 0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.getIn(['users', currentUserId, 'rights']) !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport AppUIStore from 'stores/AppUIStore';\nimport ShowSecretUIActions from 'actions/ShowSecretUIActions';\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = AppUIStore.getCurrentUser();\n  const users = secret.users\n    .toList()\n    .filterNot(user => user.id === currentUser.username);\n\n  const secretRights = secret.getIn(['users', currentUser.username, 'rights']);\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => ShowSecretUIActions.showSecret({ secret })}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <tr className={className}>\n      <td className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (AppUIStore.isOnline() || users.size === 0)\n          ? connectDragSource(link)\n          : link}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.size > 0 ? <UserAvatars users={users} /> : '––'}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </td>\n    </tr>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.instanceOf(Immutable.List),\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders.last()}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\nimport MetadataStore from 'stores/MetadataStore';\nimport AppUIStore from 'stores/AppUIStore';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.instanceOf(Immutable.List),\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: new Immutable.List(),\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) =>\n      memo.push({\n        folderId,\n        link: buildSecretURL(\n          new Immutable.List([folderId]),\n          memo.last() ? memo.last().link : undefined\n        ),\n      }),\n    new Immutable.List()\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = MetadataStore.getById(folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return links\n      .push(\n        <div key={key} className=\"breadcrumb-item\">\n          <NavLink\n            to={link}\n            className=\"breadcrumb-link\"\n            activeClassName=\"breadcrumb-link--active\"\n            exact\n          >\n            {folder.title}\n          </NavLink>\n        </div>\n      )\n      .push(\n        <Icon\n          key={`${key}-sep`}\n          id=\"chevron-right\"\n          className=\"breadcrumb-item-separator\"\n        />\n      );\n  }, new Immutable.List());\n\n  const currentUser = AppUIStore.getCurrentUser();\n  if (withTitle) {\n    breadcrumb = breadcrumb\n      .unshift(\n        <Icon\n          key=\"home-sep\"\n          id=\"chevron-right\"\n          className=\"breadcrumb-item-separator\"\n        />\n      )\n      .unshift(\n        <Title\n          key=\"home\"\n          title={currentUser.username}\n          icon=\"home\"\n          link=\"/secrets/\"\n        />\n      );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  const secrets = folder\n    .get('secrets')\n    .sortBy(secret => secret.get('title').toLowerCase());\n  return (\n    <tbody className=\"secret-list-content-table-body\">\n      {!folder.has('root') && (\n        <tr className=\"secret-list-folder\">\n          <td colSpan=\"4\" className=\"secret-list-folder-info\">\n            <SecretListBreadcrumb\n              folders={folder.get('breadcrumb')}\n              withTitle={false}\n            />\n          </td>\n        </tr>\n      )}\n      {secrets\n        .map(secret => (\n          <SecretListItemFolderSecret key={secret.id} secret={secret} />\n        ))\n        .toArray()}\n    </tbody>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport classNames from 'classnames';\nimport { escapeRegExp } from 'lodash';\nimport AppUIStore from 'stores/AppUIStore';\nimport MetadataStore from 'stores/MetadataStore';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.instanceOf(Immutable.Map),\n    isDragging: PropTypes.bool,\n    folders: PropTypes.instanceOf(Immutable.List),\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.endDecrypt ||\n      nextProps.searchQuery !== this.props.searchQuery ||\n      nextProps.filtered !== this.props.filtered ||\n      nextProps.folders.size !== this.props.folders.size\n    );\n  }\n\n  render() {\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = new Immutable.Map();\n\n    const currentUser = AppUIStore.getCurrentUser();\n\n    if (this.props.filtered) {\n      const allFolders = MetadataStore.getAllFolders();\n      filteredSecrets.forEach(secret => {\n        let folderSeq = secret\n          .getIn(['users', currentUser.username, 'folders'])\n          .entrySeq()\n          .first();\n        if (typeof folderSeq === 'undefined') {\n          folderSeq = ['ROOT'];\n        }\n        filteredFolders = filteredFolders.setIn(\n          [folderSeq[0], 'secrets', secret.id],\n          secret\n        );\n        if (folderSeq[0] === 'ROOT') {\n          filteredFolders = filteredFolders.setIn([folderSeq[0], 'name'], '');\n          filteredFolders = filteredFolders.setIn([folderSeq[0], 'root'], true);\n        } else {\n          let root = false;\n          let breadcrumb = Immutable.List();\n          let currentFolder = folderSeq;\n          while (!root) {\n            root = allFolders\n              .getIn([\n                currentFolder[0],\n                'users',\n                currentUser.username,\n                'folders',\n              ])\n              .has('ROOT');\n            breadcrumb = breadcrumb.unshift(currentFolder[0]);\n            currentFolder = allFolders\n              .getIn([\n                currentFolder[0],\n                'users',\n                currentUser.username,\n                'folders',\n              ])\n              .entrySeq()\n              .first();\n          }\n          filteredFolders = filteredFolders.setIn(\n            [folderSeq[0], 'name'],\n            breadcrumb.join('/')\n          );\n          filteredFolders = filteredFolders.setIn(\n            [folderSeq[0], 'breadcrumb'],\n            breadcrumb\n          );\n        }\n      });\n\n      filteredFolders = filteredFolders\n        .sortBy(folder => folder.get('name').toLowerCase())\n        .sortBy(folder => !folder.has('root'));\n    } else {\n      filteredSecrets = filteredSecrets.sortBy(secret =>\n        secret.get('title').toLowerCase()\n      );\n    }\n\n    return (\n      <table className={className}>\n        <thead className=\"secret-list-content-table-header\">\n          <tr>\n            <th className=\"secret-list-item-column--title\">Title</th>\n            <th className=\"secret-list-item-column--last-modified\">\n              Last modified\n            </th>\n            <th className=\"secret-list-item-column--shared-with\">\n              Shared with\n            </th>\n            <th className=\"secret-list-item-column--actions\" />\n          </tr>\n        </thead>\n        {this.props.filtered ? (\n          filteredFolders\n            .map((folder, id) => (\n              <SecretListFolderInfo key={id} folder={folder} />\n            ))\n            .toArray()\n        ) : (\n          <tbody className=\"secret-list-content-table-body\">\n            {filteredSecrets\n              .map(secret => (\n                <SecretListItem\n                  key={secret.id}\n                  secret={secret}\n                  folders={this.props.folders}\n                />\n              ))\n              .toArray()}\n          </tbody>\n        )}\n      </table>\n    );\n  }\n}\n\nexport default SecretListContent;\n","import React from 'react';\n\nimport MetadataActions from 'actions/MetadataActions';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={MetadataActions.loadMetadata}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import alt from 'utils/alt';\n\nclass NewSecretUIActions {\n  constructor() {\n    this.generateActions(\n      'showModal',\n      'hideModal',\n      'changeTitle',\n      'changeField'\n    );\n  }\n}\n\nexport default alt.createActions(NewSecretUIActions);\n","import { Record } from 'immutable';\nimport alt from 'utils/alt';\nimport makeImmutable from 'utils/makeImmutable';\n\nimport NewSecretUIActions from 'actions/NewSecretUIActions';\nimport MetadataActions from 'actions/MetadataActions';\n\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst NewSecretUIState = new Record({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ),\n});\n\nclass NewSecretUIStore {\n  constructor() {\n    this.bindActions(NewSecretUIActions);\n    this.bindAction(MetadataActions.CREATE_SECRET_SUCCESS, this.onHideModal);\n\n    this.state = new NewSecretUIState();\n  }\n\n  onShowModal({ folder, isFolder }) {\n    this.setState(\n      this.state.merge({\n        shown: true,\n        title: `Untilted ${isFolder ? 'folder' : 'secret'}`,\n        folder,\n        isFolder,\n      })\n    );\n  }\n\n  onHideModal() {\n    this.setState(new NewSecretUIState());\n  }\n\n  onChangeTitle({ value }) {\n    this.setState(this.state.set('title', value));\n  }\n\n  onChangeField({ field, value }) {\n    this.setState(\n      this.state.updateIn(['data', 'fields'], fields =>\n        fields.update(\n          fields.findIndex(fieldToUpdate => fieldToUpdate.id === field.id),\n          fieldToUpdate => fieldToUpdate.set('content', value)\n        )\n      )\n    );\n  }\n}\n\nexport default alt.createStore(\n  makeImmutable(NewSecretUIStore),\n  'NewSecretUIStore'\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectToStores from 'alt-utils/lib/connectToStores';\n\nimport MetadataActions from 'actions/MetadataActions';\nimport NewSecretUIActions from 'actions/NewSecretUIActions';\nimport NewSecretUIStore from 'stores/NewSecretUIStore';\nimport AppUIStore from 'stores/AppUIStore';\n\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.instanceOf(SecretDataRecord),\n  };\n\n  static getStores() {\n    return [NewSecretUIStore];\n  }\n\n  static getPropsFromStores() {\n    return NewSecretUIStore.getState().toObject();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    MetadataActions.createSecret({ folder, isFolder, title, data });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n\n    return (\n      <Modal show={this.props.shown} onClose={NewSecretUIActions.hideModal}>\n        <Modal.Header title={isFolder ? 'Add new folder' : 'Add new secret'} />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={isFolder ? 'Folder title' : 'Secret title'}\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={NewSecretUIActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={NewSecretUIActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={NewSecretUIActions.hideModal}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={AppUIStore.isLoading()}\n          >\n            {isFolder ? 'Add folder' : 'Add secret'}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connectToStores(SecretNew);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Secret from 'models/Secret';\nimport AppUIStore from 'stores/AppUIStore';\nimport NewSecretUIActions from 'actions/NewSecretUIActions';\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n};\n\nfunction SecretListNew({ folder }) {\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    const currentUser = AppUIStore.getCurrentUser();\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        Add secret\n      </Button>\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n        }\n      >\n        <Icon id=\"add-folder\" size=\"small\" />\n        Create folder\n      </Button>\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SecretListSearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n  };\n\n  static getDerivedStateFromProps({ status: nextStatus }) {\n    const nextMessage =\n      nextStatus instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : nextStatus.message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    const { state, total } = this.props.status;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nexport default UserConnectProgress;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\nimport Immutable from 'immutable';\n\nimport AppUIStore from 'stores/AppUIStore';\nimport Secret from 'models/Secret';\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.instanceOf(Immutable.List),\n    secrets: PropTypes.instanceOf(Immutable.Map),\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    folders: new Immutable.List(),\n    secrets: new Immutable.Map(),\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = 'All';\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = 'My secrets';\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = 'Shared secrets';\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        {AppUIStore.getState().get('status') !== null && (\n          <UserConnectProgress status={AppUIStore.getState().get('status')} />\n        )}\n        <div className=\"page-content\">\n          {!this.props.showAll &&\n            !this.props.showMine &&\n            !this.props.showShared && (\n              <div className=\"page-content-actions\">\n                <SecretListNew folder={this.props.folder} />\n              </div>\n            )}\n          <SecretListContent\n            filtered={\n              this.props.showAll || this.props.showMine || this.props.showShared\n            }\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={AppUIStore.getState().get('status') === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(SecretList)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\n\nimport MetadataStore from 'stores/MetadataStore';\nimport SecretList from 'components/secrets/SecretList';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  if (showAll) {\n    const secrets = MetadataStore.getAllSecrets();\n    return <SecretList secrets={secrets} showAll />;\n  } else if (showMine) {\n    const secrets = MetadataStore.getMySecret();\n    return <SecretList secrets={secrets} showMine />;\n  } else if (showShared) {\n    const secrets = MetadataStore.getSharedSecret();\n    return <SecretList secrets={secrets} showShared />;\n  }\n\n  const path = params.path ? params.path.split('/') : [];\n  const folders = new Immutable.List(path);\n  const folderId = folders.last();\n  const folder = MetadataStore.getById(folderId);\n  const secrets = MetadataStore.getSecretsInFolder(folderId);\n\n  return <SecretList folder={folder} folders={folders} secrets={secrets} />;\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectToStores from 'alt-utils/lib/connectToStores';\nimport Immutable from 'immutable';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport OptionsStore from 'stores/OptionsStore';\nimport OptionsActions from 'actions/OptionsActions';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: new Immutable.Map(),\n    loading: false,\n  };\n\n  static getStores() {\n    return [OptionsStore];\n  }\n\n  static getPropsFromStores() {\n    const state = OptionsStore.getState();\n    return {\n      errors: state.get('errors'),\n      shown: state.get('showShortLogin'),\n      loading: state.get('loading'),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    OptionsActions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={OptionsActions.hideShortLogin}>\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={OptionsActions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connectToStores(QRCodeShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\nimport connectToStores from 'alt-utils/lib/connectToStores';\nimport Immutable from 'immutable';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport OptionsStore from 'stores/OptionsStore';\nimport OptionsActions from 'actions/OptionsActions';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.instanceOf(Immutable.Map),\n    loading: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: new Immutable.Map(),\n    loading: false,\n  };\n\n  static getStores() {\n    return [OptionsStore];\n  }\n\n  static getPropsFromStores() {\n    const state = OptionsStore.getState();\n    return {\n      errors: state.get('errors'),\n      shown: state.get('showQRCode'),\n      loading: state.get('loading'),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    OptionsActions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={OptionsActions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.get('totp')}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={OptionsActions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connectToStores(QRCodeShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectToStores from 'alt-utils/lib/connectToStores';\nimport Immutable from 'immutable';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport AppUIStore from 'stores/AppUIStore';\nimport OptionsStore from 'stores/OptionsStore';\nimport OptionsActions from 'actions/OptionsActions';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`).toArray();\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.instanceOf(Immutable.List),\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: new Immutable.List(),\n  };\n\n  static getStores() {\n    return [OptionsStore];\n  }\n\n  static getPropsFromStores() {\n    const state = OptionsStore.getState();\n    return {\n      rescueCodes: state.get('rescueCodes'),\n      shown: state.get('showRescueCodes'),\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = AppUIStore.getCurrentUser();\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal show={this.props.shown} onClose={OptionsActions.hideRescueCodes}>\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={OptionsActions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connectToStores(QRCodeShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectToStores from 'alt-utils/lib/connectToStores';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport OptionsStore from 'stores/OptionsStore';\nimport OptionsActions from 'actions/OptionsActions';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  static getStores() {\n    return [OptionsStore];\n  }\n\n  static getPropsFromStores() {\n    const state = OptionsStore.getNewPass();\n\n    return {\n      errors: state.get('error'),\n      shown: state.get('shown'),\n      loading: state.get('loading'),\n      status: state.get('status'),\n      newPass1: state.get('newPass1'),\n      newPass2: state.get('newPass2'),\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    OptionsActions.changePassword({\n      newPass: this.props.newPass1,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={OptionsActions.hideChangePassword}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={OptionsActions.changeNewPass1}\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={OptionsActions.changeNewPass2}\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={OptionsActions.hideChangePassword}\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default connectToStores(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport connectToStores from 'alt-utils/lib/connectToStores';\n\nimport AppUIStore from 'stores/AppUIStore';\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport OptionsActions from 'actions/OptionsActions';\n\nimport OptionsStore from 'stores/OptionsStore';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.instanceOf(Immutable.Map),\n    newPass: PropTypes.instanceOf(Immutable.Map),\n  };\n\n  static getStores() {\n    return [OptionsStore];\n  }\n\n  static getPropsFromStores() {\n    return {\n      options: OptionsStore.getOptions(),\n    };\n  }\n\n  onChangeTimeToClose({ value }) {\n    OptionsActions.changeTimeToClose({\n      timeToClose: parseInt(value, 10) || 0,\n    });\n  }\n\n  render() {\n    const { options } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.get('totp')}\n                onChange={OptionsActions.toggleTotp}\n                disabled={!AppUIStore.isOnline()}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.get('totp') && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={OptionsActions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.get('shortLogin')}\n                onChange={OptionsActions.toggleShortLogin}\n                disabled={!AppUIStore.isOnline()}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.get('timeToClose') > 0}\n                onChange={OptionsActions.toggleAutoLogout}\n                disabled={!AppUIStore.isOnline()}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {options.get('timeToClose') > 0 && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={options.get('timeToClose')}\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    debounce={800}\n                    disabled={!AppUIStore.isOnline()}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={OptionsActions.showChangePassword}\n                disabled={!AppUIStore.isOnline()}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connectToStores(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { findKey } from 'lodash';\n\nimport alt from 'utils/alt';\nimport importers from 'utils/importers';\n\nclass ImportActions {\n  constructor() {\n    this.generateActions(\n      'importSecretsProgress',\n      'importSecretsSuccess',\n      'importSecretsFailure',\n      'detectTypeSuccess',\n      'detectTypeFailure',\n      'defaultStore',\n      'changeMandatoryField'\n    );\n  }\n\n  detectType({ file }) {\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = ({ target }) => {\n      const file = target.result;\n      const importType = findKey(importers, importer => importer.detect(file));\n\n      if (typeof importType !== 'undefined') {\n        const mandatoryFields = importers[importType].mandatoryFields;\n        this.detectTypeSuccess({ file, importType, mandatoryFields });\n      } else {\n        this.detectTypeFailure({ error: 'Invalid type' });\n      }\n    };\n    return reader;\n  }\n\n  importSecrets({ file, type, mandatoryFields }) {\n    return dispatch => {\n      dispatch();\n      importers[type]\n        .parse(\n          file,\n          mandatoryFields.toJS(),\n          ({ state: importStatus, total: importTotal }) =>\n            this.importSecretsProgress({\n              importStatus,\n              importTotal,\n            })\n        )\n        .then(() => {\n          this.importSecretsSuccess();\n        })\n        .catch(error => {\n          this.importSecretsFailure({ error });\n        });\n    };\n  }\n}\n\nexport default alt.createActions(ImportActions);\n","import Immutable, { Record } from 'immutable';\nimport alt from 'utils/alt';\nimport makeImmutable from 'utils/makeImmutable';\n\nimport ImportActions from 'actions/ImportActions';\n\nconst ImportState = new Record({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: new Immutable.Map(),\n});\n\nclass ImportStore {\n  constructor() {\n    this.bindActions(ImportActions);\n    this.state = new ImportState();\n  }\n\n  onImportSecrets() {\n    this.setState(\n      this.state.merge({\n        importing: true,\n        success: false,\n        error: '',\n      })\n    );\n  }\n\n  onDetectTypeFailure({ error }) {\n    this.setState(\n      this.state.merge({\n        error,\n        importType: '',\n        mandatoryFields: new Immutable.Map(),\n      })\n    );\n  }\n\n  onDetectTypeSuccess({ file, importType, mandatoryFields }) {\n    this.setState(\n      this.state.merge({\n        importType,\n        error: '',\n        file,\n        mandatoryFields: Immutable.fromJS(mandatoryFields),\n      })\n    );\n  }\n\n  onImportSecretsProgress({ importStatus, importTotal }) {\n    this.setState(\n      this.state.merge({\n        importStatus,\n        importTotal,\n        error: '',\n      })\n    );\n  }\n\n  onImportSecretsSuccess() {\n    this.setState(\n      this.state.merge({\n        importing: false,\n        success: true,\n        importType: '',\n        error: '',\n        importStatus: 0,\n        importTotal: 0,\n        mandatoryFields: new Immutable.Map(),\n      })\n    );\n  }\n\n  onImportSecretsFailure({ error }) {\n    this.setState(\n      this.state.merge({\n        importing: false,\n        success: false,\n        importType: '',\n        error: error,\n        mandatoryFields: new Immutable.Map(),\n      })\n    );\n  }\n\n  onDefaultStore() {\n    this.setState(new ImportState());\n  }\n\n  onChangeMandatoryField({ field, value }) {\n    this.setState(\n      this.state.setIn(['mandatoryFields', field.get('name'), 'value'], value)\n    );\n  }\n}\n\nexport default alt.createStore(makeImmutable(ImportStore), 'ImportStore');\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.instanceOf(Immutable.Map),\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.get('name')}\n        name={this.props.field.get('name')}\n        value={this.props.field.get('value')}\n        onChange={this.handleChange}\n        type={this.props.field.get('type')}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport connectToStores from 'alt-utils/lib/connectToStores';\nimport ImportStore from 'stores/ImportStore';\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport ImportActions from 'actions/ImportActions';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.instanceOf(Immutable.Map),\n  };\n\n  static getStores() {\n    return [ImportStore];\n  }\n\n  static getPropsFromStores() {\n    const state = ImportStore.getState();\n\n    return {\n      mandatoryFields: state.get('mandatoryFields'),\n    };\n  }\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields.toJS());\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields.get(key)}\n          onChange={ImportActions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nexport default connectToStores(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport connectToStores from 'alt-utils/lib/connectToStores';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport ImportStore from 'stores/ImportStore';\nimport ImportActions from 'actions/ImportActions';\nimport MetadataActions from 'actions/MetadataActions';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.instanceOf(Immutable.Map),\n  };\n\n  static getStores() {\n    return [ImportStore];\n  }\n\n  static getPropsFromStores() {\n    const state = ImportStore.getState();\n\n    return {\n      error: state.get('error'),\n      importType: state.get('importType'),\n      importing: state.get('importing'),\n      importStatus: state.get('importStatus'),\n      importTotal: state.get('importTotal'),\n      success: state.get('success'),\n      file: state.get('file'),\n      mandatoryFields: state.get('mandatoryFields'),\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    ImportActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    ImportActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      MetadataActions.loadMetadata();\n      setTimeout(function() {\n        ImportActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error}</span>}\n          {this.props.mandatoryFields.size > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connectToStores(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport connectToStores from 'alt-utils/lib/connectToStores';\nimport secretin from 'utils/secretin';\nimport Secretin from 'secretin';\n\nimport AppUIActions from 'actions/AppUIActions';\nimport AppUIStore from 'stores/AppUIStore';\nimport OptionsStore from 'stores/OptionsStore';\nimport MetadataStore from 'stores/MetadataStore';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.instanceOf(Immutable.Map),\n    errors: PropTypes.instanceOf(Immutable.Map),\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      statue: PropTypes.number,\n      total: PropTypes.number,\n    }),\n  };\n\n  static getStores() {\n    return [AppUIStore, OptionsStore, MetadataStore];\n  }\n\n  static getPropsFromStores() {\n    const {\n      savedUsername,\n      loading,\n      errors,\n      connected,\n      status,\n    } = AppUIStore.getState();\n    return {\n      secrets: MetadataStore.getSecretsInFolder(),\n      options: OptionsStore.getOptions(),\n      savedUsername,\n      loading,\n      connected,\n      errors,\n      status,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener(\n      'connectionChange',\n      AppUIActions.connectionChange\n    );\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      AppUIActions.connectionChange\n    );\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      const delay = options.get('timeToClose') * 60 * 1000;\n      if (delay > 0) {\n        this.disconnectingEvent = setTimeout(\n          AppUIActions.disconnectUser,\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          {this.props.connected ? (\n            <Layout />\n          ) : (\n            <UserConnect\n              savedUsername={this.props.savedUsername}\n              loading={this.props.loading}\n              errors={this.props.errors}\n              status={this.props.status}\n            />\n          )}\n          <span className=\"secretin-version\">\n            secretin-lib v{Secretin.version}\n          </span>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connectToStores(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport registerServiceWorker from 'utils/registerServiceWorker';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(<App />, rootEl);\nif (typeof window.process === 'undefined') {\n  registerServiceWorker();\n}\n\nif (module.hot) {\n  module.hot.accept('components/App', () => {\n    // eslint-disable-next-line global-require\n    const NextApp = require('components/App').default;\n\n    ReactDOM.render(<NextApp />, rootEl);\n  });\n}\n"],"sourceRoot":""}