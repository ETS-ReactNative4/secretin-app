{"version":3,"sources":["utils/secretin.js","slices/AppUISlice.js","selectors/MetadataSelectors.js","components/utilities/Form.js","components/utilities/Icon.js","components/utilities/Button.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Modal.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/User.js","models/Secret.js","slices/MetadataSlice.js","slices/ShowSecretUISlice.js","slices/EditSecretUISlice.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/utilities/Select.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/secrets/SecretEditableTitle.js","components/utilities/Flash.js","components/utilities/Tabs.js","components/secrets/SecretShow.js","slices/NewSecretUISlice.js","slices/OptionsSlice.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","slices/ImportSlice.js","stores/store.js","utils/URLHelper.js","components/users/UserAvatars.js","components/utilities/Dropdown.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["api","process","window","URLSearchParams","location","search","get","secretin","Secretin","SecretinBrowserAdapter","API","Server","Statuses","Errors","DecryptMetadataStatus","EndDecryptMetadataStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","UsernameAlreadyExistsError","UserNotFoundError","InvalidPasswordError","NeedTOTPTokenError","_loading","state","loading","_endLoading","AppUISlice","createSlice","name","initialState","savedUsername","getSavedUsername","connected","online","errors","currentUser","status","reducers","endLoading","createSecret","createSecretSuccess","createSecretFailure","connectionChange","action","payload","connection","disconnectUserSuccess","createUserSuccess","createUserFailure","error","disableShortLoginSuccess","onLoginUserProgress","loginUserSuccess","loginUserFailure","addSecretToFolderFailure","removeSecretFromCurrentFolderFailure","actions","disconnectUser","dispatch","disconnect","createUser","username","password","confirmPassword","setTimeout","newUser","then","catch","loginUser","token","loginUserProgress","options","totp","shortLogin","canITryShortLogin","metadata","metadatas","constructor","getAllSecrets","createSelector","Metadata","Object","values","filter","secret","type","getMySecrets","AppUI","allSecrets","user","users","find","rights","getSecretsInFolder","folderId","userId","secretUser","id","folders","ROOT","keys","includes","getSharedSecrets","length","Form","props","uniqueId","onSubmit","bind","e","preventDefault","this","disabled","className","classNames","autoComplete","style","display","children","Component","defaultProps","SIZES","small","base","Icon","size","width","height","xlinkHref","Button","handleClick","onClick","buttonStyle","to","title","form","tabIndex","Input","onChange","debounce","handleChange","onTogglePasswordShow","showPassword","autoSelect","input","select","autoFocus","focus","value","setState","target","label","placeholder","readOnly","inputProps","htmlFor","ref","defaultValue","UserConnectForm","toggleSignup","signup","showShortpass","AppUIActions","checked","isOnline","db","isEmpty","connect","Modal","centered","backdropClassName","show","onHide","onClose","onBackdropClick","Body","Header","Footer","Confirm","handleAccept","handleCancel","promise","Promise","resolve","reject","accept","cancel","used","text","cancelLabel","acceptLabel","confirm","confirmProps","comfirmElement","document","body","appendChild","createElement","component","ReactDOM","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","shortpass","shortlogin","deactivateShortLogin","UserConnect","hideShortpass","SidebarMenuLink","activeClassName","exportDb","filename","element","setAttribute","encodeURIComponent","click","removeChild","download","moment","format","Sidebar","useDispatch","handleLogout","useCallback","useSelector","exact","SecretFieldRecord","raw","uuid","v4","date","content","rawData","SecretDataRecord","fields","params","push","getRaw","defaultFields","reduce","record","field","addNewField","entries","output","key","map","createFromRaw","DEFAULT_FIELDS","UserRights","userRightLabel","accessRights","Error","User","forEach","Secret","lastModifiedBy","lastModifiedAt","data","_user","accessRightForUser","FriendNotFoundError","_rebuildMetadata","buildSecrets","MetadataSlice","loadMetadataSuccess","deleteSecretSuccess","deleteSecretFailure","addSecretToFolderSuccess","removeSecretFromCurrentFolderSuccess","createSecretUserRightsSuccess","updateSecretSuccess","renameSecretSuccess","updateSecretUserRightsSuccess","secretMetadataIndex","secretId","findIndex","getIndex","userToUpdate","merge","deleteSecretUserRightsSuccess","secretMetadata","getById","userToFilter","extraReducers","loadMetadata","refreshUser","isFolder","folder","addFolder","addSecret","updateSecret","updateSecretStart","editSecret","updateSecretFailure","renameSecret","newTitle","deleteSecret","createSecretUserRights","shareSecret","createSecretUserRightsFailure","unknown","updateSecretUserRights","updateSecretUserRightsFailure","deleteSecretUserRights","unshareSecret","deleteSecretUserRightsFailure","addSecretToFolder","removeSecretFromCurrentFolder","currentFolderId","removeSecretFromFolder","_handleError","isUpdating","ShowSecretUISlice","tab","showModal","showSecretSuccess","hideModal","changeTab","rawUser","showSecret","getSecret","secretWithData","EditSecretUISlice","isEditing","updateData","changeField","fieldIndex","fieldToUpdate","SecretField","onCopy","onGenerate","copyToClipboard","debug","Utils","PasswordGenerator","generatePassword","isNew","href","rel","canUpdate","SecretFields","SecretEdit","EditSecretUI","bindActionCreators","EditSecretUIActions","Select","getValue","option","noop","WindowsSecretEdit","reverse","COLORS","getInitials","fullName","names","split","toUpperCase","substring","UserAvatar","color","colorIndex","sum","letter","charCodeAt","getAvatarColor","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","iconOnly","SecretUserListNew","on","MetadataActions","isValid","SecretUserList","canShare","canBeSharedBy","cantShare","isCurrentUser","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","Flash","Tabs","animation","Tab","BootstrapTab","SecretShow","handleChangeTab","showSecretActions","metadataActions","currentUserId","canBeUpdatedBy","shown","getIcon","activeKey","onSelect","eventKey","ShowSecretUI","ShowSecretUIActions","getInitialState","createWithDefaultFields","NewSecretUISlice","changeTitle","OptionsSlice","showQRCode","showShortLogin","showRescueCodes","newPass","newPass1","newPass2","rescueCodes","_activateTotp","_activateShortLogin","_toggleTotp","_toggleShortLogin","activateTotpFailure","hideQRCode","hideShortLogin","activateTotpSuccess","deactivateTotpSuccess","deactivateShortLoginSuccess","activateShortLoginSuccess","changeDelaySuccess","timeToClose","changeNewPass1","changeNewPass2","showChangePassword","hideChangePassword","_changePassword","changePasswordSuccess","changePasswordFailure","showRescueCodesSuccess","hideRescueCodes","deactivateTotp","getState","activateTotp","seed","testTotp","b32","err","activateShortLogin","changePassword","toggleTotp","getRescueCodes","toggleShortLogin","toggleAutoLogout","changeTimeToClose","editOption","InternalProgressBar","progressFunction","total","func","child","hashedParent","strings","querySelectorAll","j","textContent","toLowerCase","hashedTitle","rHashedTitle","defaultProgress","console","log","parseGroup","group","progress","entryPromises","slice","call","childEntry","update","childGroup","getElementsByTagName","addAndParseGroup","count","nb","groups","i","importers","keepass","parse","xml","mandatoryField","parser","DOMParser","xmlDoc","parseFromString","root","currentProgress","detect","file","isKeepass","mandatoryFields","importDb","isSecretin","JSON","ImportSlice","importType","importing","importStatus","importTotal","success","_importSecrets","detectTypeFailure","detectTypeSuccess","importSecretsProgress","importSecretsSuccess","importSecretsFailure","defaultStore","changeMandatoryField","detectType","reader","FileReader","readAsText","onload","result","findKey","importer","importSecrets","configureStore","reducer","AppUIReducer","EditSecretUIReducer","MetadataReducer","NewSecretUI","NewSecretUIReducer","ShowSecretUIReducer","Options","OptionsReducer","Import","ImportReducer","buildSecretURL","basePath","urljoin","join","UserAvatars","Dropdown","MenuItem","SecretListItemOptions","handleShow","handleShare","handleMoveToParent","parentFolderId","handleDelete","pullRight","Toggle","Menu","canBeDeleted","divider","ownProps","m","itemTarget","drop","monitor","getItem","store","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","link","fromNow","SecretListItemFolderTarget","DropTarget","dropTarget","SecretListItem","Title","icon","SecretListBreadcrumb","withTitle","breadcrumb","memo","undefined","links","unshift","SecretListFolderInfo","secrets","sort","a","b","localeCompare","colSpan","SecretListContent","nextProps","nextState","endDecrypt","searchQuery","filtered","allFolders","fuzzyRegexp","RegExp","c","escapeRegExp","filteredSecrets","test","filteredFolders","sortedFolders","getUser","set","currentFolder","currentFolderDetails","fold","SecretListRefresh","SecretNew","newSecretActions","required","isLoading","NewSecretUIActions","SecretListNew","canWrite","SecretListSearch","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","message","Math","round","_state","SecretList","onSearch","showAll","showMine","showShared","DragDropContext","HTML5Backend","DragLayer","SecretListContainer","match","mySecrets","sharedSecrets","path","folderSecrets","f","ShortLoginShow","OptionsActions","QRCodeShow","generateSeed","replace","maxLength","getFile","codes","code","Blob","RescueCodesShow","URL","createObjectURL","ChangePasswordShow","handleChangePassword","Checkbox","checboxClassName","OptionsContainer","onChangeTimeToClose","parseInt","min","max","step","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","ImportMandatoryField","ImportersMandatoryFields","inputs","ImportActions","ImportContainer","handleFileChoosen","handleStartParsing","importActions","ImportMandatoryFields","Layout","App","disconnectingEvent","onAppFocus","onAppBlur","handleConnectionChange","addEventListener","removeEventListener","clearTimeout","delay","basename","version","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","rootEl","getElementById","origin","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fc6296c5.chunk.js","sourcesContent":["import Secretin from 'secretin';\nimport { SecretinBrowserAdapter } from 'secretin/dist/adapters/browser';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3001';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import secretin, { Statuses, Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\n// Helpers because we're often doing these small state updates\n\nconst _loading = state => {\n  state.loading = true;\n};\nconst _endLoading = state => {\n  state.loading = false;\n};\n\nexport const AppUISlice = createSlice({\n  name: 'AppUI',\n  initialState: {\n    savedUsername: secretin.getSavedUsername(),\n    loading: false,\n    connected: false,\n    online: true,\n    errors: {},\n    currentUser: null,\n    status: null,\n  },\n  reducers: {\n    loading: _loading,\n    endLoading: _endLoading,\n    createSecret: _loading,\n    createSecretSuccess: _endLoading,\n    createSecretFailure: _endLoading,\n    connectionChange: (state, action) => {\n      state.online = action.payload.connection === 'online';\n    },\n    disconnectUserSuccess: state => {\n      state.savedUsername = secretin.getSavedUsername();\n      state.loading = false;\n      state.connected = false;\n      state.errors = {};\n      state.currentUser = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.currentUser = action.payload.currentUser;\n    },\n    createUserFailure: (state, action) => {\n      state.loading = false;\n      state.connected = false;\n      state.errors = action.payload.error;\n      state.status = null;\n    },\n    disableShortLoginSuccess: _endLoading,\n    onLoginUserProgress: (state, action) => {\n      const { status } = action.payload;\n      if (status) state.status = { ...status };\n    },\n    loginUserSuccess: (state, action) => {\n      const { currentUser } = action.payload;\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.status = null;\n      state.currentUser = currentUser;\n    },\n    loginUserFailure: (state, action) => {\n      const { error } = action.payload;\n      state.loading = false;\n      state.connected = false;\n      state.errors = error;\n      state.status = null;\n    },\n    addSecretToFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    removeSecretFromCurrentFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loading,\n  endLoading,\n  createSecret,\n  createSecretSuccess,\n  createSecretFailure,\n  disconnectUserSuccess,\n  connectionChange,\n  createUserSuccess,\n  createUserFailure,\n  disableShortLoginSuccess,\n  onLoginUserProgress,\n  loginUserSuccess,\n  loginUserFailure,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} = AppUISlice.actions;\n\nexport const disconnectUser = () => dispatch => {\n  secretin.currentUser.disconnect();\n  dispatch(disconnectUserSuccess());\n};\n\nexport const createUser = ({\n  username,\n  password,\n  confirmPassword,\n}) => dispatch => {\n  dispatch(loading());\n  if (password !== confirmPassword) {\n    setTimeout(\n      () =>\n        dispatch(\n          createUserFailure({\n            error: { confirmPassword: 'Passwords mismatch' },\n          })\n        ),\n      100\n    );\n  } else {\n    secretin\n      .newUser(username, password)\n      .then(currentUser => dispatch(createUserSuccess({ currentUser })))\n      .catch(error => {\n        if (error instanceof UsernameAlreadyExistsError) {\n          return dispatch(\n            createUserFailure({\n              error: { username: 'User already exists' },\n            })\n          );\n        }\n        throw error;\n      });\n  }\n};\n\nexport const loginUser = ({ username, password, token }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .loginUser(\n      username,\n      password,\n      token,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser =>\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      if (error instanceof UserNotFoundError) {\n        return dispatch(\n          loginUserFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      } else if (error instanceof InvalidPasswordError) {\n        if (token) {\n          return dispatch(\n            loginUserFailure({\n              error: {\n                totp: 'Token',\n                password: 'Invalid password',\n                token: 'or invalid token',\n              },\n            })\n          );\n        }\n        return dispatch(\n          loginUserFailure({\n            error: { password: 'Invalid password' },\n          })\n        );\n      } else if (error instanceof NeedTOTPTokenError) {\n        return dispatch(\n          loginUserFailure({\n            error: { totp: 'Token' },\n          })\n        );\n      }\n      throw error;\n    });\n};\n\nexport const loginUserProgress = status => dispatch => {\n  const currentUser = secretin.currentUser;\n  switch (status.constructor) {\n    case DecryptMetadataCacheStatus:\n    case DecryptMetadataStatus:\n    case DecryptUserOptionsStatus:\n      return dispatch(onLoginUserProgress({ status }));\n    case EndDecryptMetadataStatus:\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n      return dispatch(onLoginUserProgress({ status: null }));\n    default:\n      return;\n  }\n};\n\nexport const shortLogin = ({ shortpass }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .shortLogin(\n      shortpass,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser => {\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n    })\n    .catch(() =>\n      dispatch(\n        loginUserFailure({\n          error: { shortlogin: 'Invalid shortpass' },\n        })\n      )\n    );\n};\n\nexport const disableShortLogin = () => dispatch => {\n  dispatch(loading());\n  secretin.deactivateShortLogin();\n  dispatch(disableShortLoginSuccess());\n};\n\nexport default AppUISlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getAllSecrets = createSelector(\n  state => state.Metadata.metadata,\n  metadata => {\n    return Object.values(metadata).filter(secret => secret.type !== 'folder');\n  }\n);\n\nexport const getMySecrets = createSelector(\n  getAllSecrets,\n  state => state.AppUI.currentUser,\n  (allSecrets, currentUser) => {\n    if (!allSecrets) return [];\n    return allSecrets.filter(secret => {\n      const user = secret.users.find(\n        user => user.username === currentUser.username\n      );\n      return user?.rights === 2;\n    });\n  }\n);\n\nexport const getSecretsInFolder = createSelector(\n  state => state.Metadata.metadata,\n  state => state.AppUI.currentUser,\n  (state, folderId) => folderId,\n  (metadata, currentUser, folderId) => {\n    if (!currentUser || !metadata) {\n      return {};\n    }\n    const userId = currentUser.username;\n    return Object.values(metadata).filter(secret => {\n      const secretUser = secret.users.find(user => user.id === userId);\n      const folders = secretUser?.folders || {};\n      return (\n        (!folderId && folders.ROOT) ||\n        (folderId && Object.keys(folders).includes(folderId))\n      );\n    });\n  }\n);\n\nexport const getSharedSecrets = createSelector(getAllSecrets, allSecrets => {\n  if (!allSecrets) return [];\n  return allSecrets.filter(secret => secret.users.length > 1);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, debounce } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.array,\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    disabled: false,\n    readOnly: false,\n    actions: [],\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = debounce(this.onChange.bind(this), props.debounce);\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n    if (this.props.autoFocus) {\n      setTimeout(() => this.input.focus(), 0);\n    }\n  }\n\n  onChange({ value }) {\n    this.props.onChange({\n      name: this.props.name,\n      value,\n    });\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange({ target }) {\n    const { value } = target;\n    this.onChange({ value });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n    } = this.props;\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.length > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            defaultValue={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? null : 'new-password'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass UserConnectForm extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? 'Sign up' : 'Sign in';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={this.props.isOnline && secretin.api.db}\n        >\n          Secret-in.me\n          <small>{status}</small>\n        </h2>\n\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.username}\n          autoFocus\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.password}\n          autoComplete\n        />\n        {this.props.errors.totp && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.token}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.confirmPassword}\n          />\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                I already have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  sign in\n                </a>\n              </span>\n            ) : (\n              <span>\n                I don&apos;t have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  create one\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { online } = state.AppUI;\n  return {\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.onClose}\n      onBackdropClick={props.onClose}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.dispatch(\n      AppUIActions.shortLogin({ shortpass: this.state.shortpass })\n    );\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(AppUIActions.disableShortLogin());\n        return this.props.onCancel();\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n\n        <Input\n          label=\"Shortpass\"\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(UserConnectShortPass);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.hideShortpass = this.hideShortpass.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  hideShortpass() {\n    this.setState({\n      showShortpass: false,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors } = this.props;\n\n    return (\n      <div className=\"user-connect\">\n        {this.state.showShortpass ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.shortlogin}\n            onCancel={this.hideShortpass}\n          />\n        ) : (\n          <UserConnectForm loading={loading} errors={errors} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect()(UserConnect);\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { disconnectUser } from 'slices/AppUISlice';\n\nimport secretin from 'utils/secretin';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const dispatch = useDispatch();\n  const handleLogout = useCallback(() => {\n    dispatch(disconnectUser());\n  }, [dispatch]);\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={isOnline && secretin.api.db}>\n          {isOnline ? 'Secret-In.me' : 'Offline'}\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            All\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            My secrets\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            Shared secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            Settings\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              Export secrets\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            Import secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={handleLogout}>\n              <Icon id=\"logout\" size=\"base\" />\n              Log out\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import uuid from 'uuid';\n\nclass SecretFieldRecord {\n  constructor(raw = {}) {\n    this.id = raw.id || uuid.v4();\n    this.date = raw.date || null;\n    this.type = raw.type || 'text';\n    this.label = raw.label || '';\n    this.content = raw.content || '';\n  }\n\n  getRaw() {\n    const { id, date, type, label, content } = this;\n    return {\n      id,\n      date,\n      type,\n      label,\n      content,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = {\n      ...rawData,\n      content: rawData.content,\n    };\n    if (raw.value) delete raw.value;\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import SecretFieldRecord from 'models/SecretFieldRecord';\n\nclass SecretDataRecord {\n  constructor(raw = {}) {\n    this.type = raw.type || 'default';\n    this.fields = raw.fields || [];\n  }\n\n  addNewField(params = {}) {\n    this.fields.push(new SecretFieldRecord(params).getRaw());\n    return this;\n  }\n\n  getRaw() {\n    const { type, fields } = this;\n    return {\n      type,\n      fields,\n    };\n  }\n\n  static createWithDefaultFields(defaultFields) {\n    return defaultFields.reduce(\n      (record, field) => record.addNewField(field),\n      new SecretDataRecord()\n    );\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      switch (key) {\n        case 'fields':\n          return {\n            ...output,\n            fields: value.map(field =>\n              SecretFieldRecord.createFromRaw(field).getRaw()\n            ),\n          };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = [\n  { label: 'login', type: 'text' },\n  { label: 'password', type: 'password' },\n  { label: 'url', type: 'url' },\n];\n\nexport default SecretDataRecord;\n","import uuid from 'uuid';\n\nexport const UserRights = [\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n];\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User {\n  constructor(raw = {}) {\n    this.id = raw.username || uuid.v4();\n    this.username = raw.username || '';\n    this.rights = raw.rights || 0;\n    this.folders = raw.folders || {};\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const { id, username, rights, folders } = this;\n    return {\n      id,\n      username,\n      rights,\n      folders,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    return new User(rawData);\n  }\n}\n\nexport default User;\n","import moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret {\n  constructor(raw = {}) {\n    this.id = raw.id || null;\n    this.type = raw.type || null;\n    this.title = raw.title || null;\n    this.lastModifiedBy = raw.lastModifiedBy || null;\n    this.lastModifiedAt = raw.lastModifiedAt || null;\n    this.users = raw.users || {};\n    this.data = raw.data || null;\n  }\n\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (Object.keys(this.users) > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.find(_user => _user.id === user.username)?.rights || 0;\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data,\n      users,\n    } = this;\n    return {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data: data?.getRaw(),\n      users: users.map(user => user.getRaw()),\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      if (!value) return output;\n      switch (key) {\n        case 'users':\n          return {\n            ...output,\n            users: Object.values(value).map(user => User.createFromRaw(user)),\n          };\n        case 'data':\n          return {\n            ...output,\n            data: SecretDataRecord.createFromRaw(value).getRaw(),\n          };\n        case 'lastModifiedAt':\n          return { ...output, lastModifiedAt: moment(value) };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import secretin, { Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Secret from 'models/Secret';\n\nimport {\n  createSecretSuccess,\n  createSecretFailure,\n  loginUserSuccess,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} from 'slices/AppUISlice';\nimport {\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} from 'slices/ShowSecretUISlice';\n\nconst { FriendNotFoundError } = Errors;\n\nconst buildSecrets = metadata => {\n  return metadata.map(secret => Secret.createFromRaw(secret));\n};\n\nconst getIndex = (state, secretId) =>\n  state.metadata.findIndex(secret => secret.id === secretId);\n\nconst getById = (state, secretId) =>\n  state.metadata.find(secret => secret.id === secretId);\n\n// Helper function reused in many actions\nconst _rebuildMetadata = (state, action) => {\n  const { metadata } = action.payload;\n  state.metadata = buildSecrets(Object.values(metadata));\n};\n\nexport const MetadataSlice = createSlice({\n  name: 'Metadata',\n  initialState: {\n    metadata: [],\n  },\n  reducers: {\n    loadMetadataSuccess: _rebuildMetadata,\n    deleteSecretSuccess: _rebuildMetadata,\n    deleteSecretFailure: _rebuildMetadata,\n    addSecretToFolderSuccess: _rebuildMetadata,\n    removeSecretFromCurrentFolderSuccess: _rebuildMetadata,\n    createSecretUserRightsSuccess: _rebuildMetadata,\n    updateSecretSuccess: _rebuildMetadata,\n    renameSecretSuccess: _rebuildMetadata,\n\n    updateSecretUserRightsSuccess: (state, action) => {\n      const { secret, user, rights } = action.payload;\n      const secretMetadataIndex = getIndex(state, secret.id);\n      state.metadata[secretMetadataIndex].users = state.metadata[\n        secretMetadataIndex\n      ].users.map(userToUpdate => {\n        if (userToUpdate.id === user.id) {\n          return userToUpdate.merge({ rights });\n        }\n        return userToUpdate;\n      });\n    },\n\n    deleteSecretUserRightsSuccess: (state, action) => {\n      const { secret, user } = action.payload;\n      const secretMetadata = getById(state, secret.id);\n      secretMetadata.users = secretMetadata.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: _rebuildMetadata,\n    [loginUserSuccess]: _rebuildMetadata,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loadMetadataSuccess,\n  deleteSecretSuccess,\n  deleteSecretFailure,\n  addSecretToFolderSuccess,\n  removeSecretFromCurrentFolderSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretSuccess,\n  renameSecretSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} = MetadataSlice.actions;\n\nexport const loadMetadata = () => dispatch => {\n  secretin.refreshUser().then(() => {\n    dispatch(\n      loadMetadataSuccess({\n        metadata: secretin.currentUser.metadatas,\n      })\n    );\n  });\n};\n\nexport const createSecret = (\n  { title, data, folder, isFolder } = { isFolder: false }\n) => dispatch => {\n  let promise;\n  if (isFolder) {\n    if (folder) {\n      promise = secretin.addFolder(title, folder);\n    } else {\n      promise = secretin.addFolder(title);\n    }\n  } else if (folder) {\n    promise = secretin.addSecret(title, data, folder);\n  } else {\n    promise = secretin.addSecret(title, data);\n  }\n\n  return promise\n    .then(() =>\n      dispatch(\n        createSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(createSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const updateSecret = ({ secret, data }) => dispatch => {\n  dispatch(updateSecretStart());\n  return secretin\n    .editSecret(secret.id, data)\n    .then(() => {\n      dispatch(\n        updateSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n          data,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const renameSecret = ({ secret, newTitle }) => dispatch => {\n  return secretin\n    .renameSecret(secret.id, newTitle)\n    .then(() => {\n      dispatch(\n        renameSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const deleteSecret = ({ secret }) => dispatch => {\n  return secretin\n    .deleteSecret(secret.id)\n    .catch(error => {\n      dispatch(\n        deleteSecretFailure({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n      throw error;\n    })\n    .then(() =>\n      dispatch(\n        deleteSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    );\n};\n\nexport const createSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() => secretin.refreshUser())\n    .then(() => {\n      dispatch(\n        createSecretUserRightsSuccess({\n          metadata: secretin.currentUser.metadatas,\n          user,\n          rights,\n        })\n      );\n    })\n    .catch(error => {\n      if (error instanceof FriendNotFoundError) {\n        return dispatch(\n          createSecretUserRightsFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      }\n      dispatch(\n        createSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const updateSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() =>\n      dispatch(updateSecretUserRightsSuccess({ secret, user, rights }))\n    )\n    .catch(error => {\n      dispatch(\n        updateSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const deleteSecretUserRights = ({ secret, user }) => dispatch => {\n  return secretin\n    .unshareSecret(secret.id, user.username)\n    .then(() => dispatch(deleteSecretUserRightsSuccess({ secret, user })))\n    .catch(error => {\n      dispatch(\n        deleteSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const addSecretToFolder = ({ secret, folder }) => dispatch => {\n  return secretin\n    .addSecretToFolder(secret.id, folder.id)\n    .then(() =>\n      dispatch(\n        addSecretToFolderSuccess({\n          secret,\n          folder,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        addSecretToFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const removeSecretFromCurrentFolder = ({\n  secret,\n  currentFolderId,\n}) => dispatch => {\n  return secretin\n    .removeSecretFromFolder(secret.id, currentFolderId)\n    .then(() =>\n      dispatch(\n        removeSecretFromCurrentFolderSuccess({\n          secret,\n          currentFolderId,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        removeSecretFromCurrentFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport default MetadataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport Secret from 'models/Secret';\nimport User from 'models/User';\nimport {\n  updateSecretSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} from 'slices/MetadataSlice';\n\nconst getInitialState = () => ({\n  secret: null,\n  errors: {},\n  tab: 'details',\n  isUpdating: false,\n});\n\nconst _handleError = (state, action) => {\n  const { error } = action.payload;\n  state.errors = error;\n  state.isUpdating = false;\n};\n\nexport const ShowSecretUISlice = createSlice({\n  name: 'ShowSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      state.secret = secret;\n      state.tab = tab || 'details';\n      state.errors = {};\n    },\n    showSecretSuccess: (state, action) => {\n      const { secret } = action.payload;\n      state.secret = secret;\n      state.errors = {};\n    },\n    hideModal: (state, action) => {\n      state.secret = null;\n      state.errors = {};\n    },\n    changeTab: (state, action) => {\n      const { tab } = action.payload;\n      state.tab = tab;\n    },\n    updateSecretStart: (state, action) => {\n      state.isUpdating = true;\n      state.errors = {};\n    },\n    updateSecretFailure: _handleError,\n    createSecretUserRightsFailure: _handleError,\n    updateSecretUserRightsFailure: _handleError,\n    deleteSecretUserRightsFailure: _handleError,\n  },\n  extraReducers: {\n    [updateSecretSuccess]: (state, action) => {\n      const { metadata } = action.payload;\n      const secretMetadata = metadata[state.secret.id];\n      // The metadata coming back from Secretin has flat user objects indexed by id\n      // Recreate the array of User instances\n      secretMetadata.users = Object.values(secretMetadata.users).map(rawUser =>\n        User.createFromRaw(rawUser)\n      );\n      state.secret = state.secret.merge(metadata[state.secret.id]);\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [createSecretUserRightsSuccess]: (state, action) => {\n      const { user, rights } = action.payload;\n      state.secret.users.push(user.merge({ rights }));\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [updateSecretUserRightsSuccess]: (state, action) => {\n      const { rights, user } = action.payload;\n      state.secret.users = state.secret.users.map(_user => {\n        if (_user.id === user.id) return _user.merge({ rights });\n        return _user;\n      });\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [deleteSecretUserRightsSuccess]: (state, action) => {\n      const { user } = action.payload;\n      state.secret.users = state.secret.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n      state.isUpdating = false;\n      state.errors = {};\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  showSecretSuccess,\n  hideModal,\n  changeTab,\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} = ShowSecretUISlice.actions;\n\nexport const showSecret = ({ secret, tab }) => dispatch => {\n  dispatch(showModal({ secret, tab }));\n  if (secret.type === 'folder') {\n    dispatch(showSecretSuccess({ secret }));\n  } else {\n    secretin.getSecret(secret.id).then(data => {\n      const raw = !data.fields ? { fields: data } : data;\n      const secretWithData = Secret.createFromRaw(secret.getRaw());\n      secretWithData.data = SecretDataRecord.createFromRaw(raw).getRaw();\n      dispatch(\n        showSecretSuccess({\n          secret: secretWithData,\n        })\n      );\n    });\n  }\n};\n\nexport default ShowSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { showSecretSuccess } from 'slices/ShowSecretUISlice';\nimport { hideModal } from 'slices/ShowSecretUISlice';\nimport { updateSecretSuccess } from 'slices/MetadataSlice';\n\nexport const EditSecretUISlice = createSlice({\n  name: 'EditSecretUI',\n  initialState: {\n    isEditing: false,\n    data: null,\n  },\n  reducers: {\n    updateData: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.data;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      state.isEditing = true;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [showSecretSuccess]: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.secret.data;\n    },\n    [hideModal]: state => {\n      state.isEditing = false;\n      state.data = null;\n    },\n    [updateSecretSuccess]: state => {\n      state.isEditing = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateData, changeField } = EditSecretUISlice.actions;\n\nexport default EditSecretUISlice.reducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\n\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({ value: '' });\n    setTimeout(() => {\n      this.handleChange({\n        value: Utils.PasswordGenerator.generatePassword(),\n      });\n    }, 100);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            Open\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        Copy\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.field.label}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={actions}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Button\n              title=\"Generate password\"\n              buttonStyle=\"icon\"\n              onClick={this.onGenerate}\n              tabIndex=\"-1\"\n            >\n              <Icon id=\"generate\" size=\"small\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecretField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.array,\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as EditSecretUIActions from 'slices/EditSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.fields}\n          onChange={\n            this.props.canUpdate ? this.props.actions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(EditSecretUIActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.length > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      // TODO : figure out sorting\n      // .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ]);\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps)(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'green-sea',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'orange',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: new User(),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.merge({ [name]: value }),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      'read access',\n      'read and write access',\n      'read, write and share access',\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: 'Are you sure?',\n      text: (\n        <span>\n          You are about to give <b>{rights}</b> to <b>{to}</b> on <b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: 'Share the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(\n          MetadataActions.createSecretUserRights({\n            secret: this.props.secret,\n            user: this.state.user,\n            rights: this.state.user.rights,\n          })\n        );\n        this.setState({\n          user: new User(),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder=\"User name...\"\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          error={this.props.errors.username}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default connect()(SecretUserListNew);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Secret from 'models/Secret';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser) {\n  if (cantShare) {\n    return \"You don't have the permission to share this secret\";\n  } else if (isCurrentUser) {\n    return \"You can't modify or remove yourself\";\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    isUpdating: PropTypes.bool,\n    isOnline: PropTypes.bool,\n    currentUser: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    this.props.dispatch(\n      MetadataActions.updateSecretUserRights({\n        secret: this.props.secret,\n        user,\n        rights,\n      })\n    );\n  }\n\n  onRemoveUserRights(user) {\n    this.props.dispatch(\n      MetadataActions.deleteSecretUserRights({\n        secret: this.props.secret,\n        user,\n      })\n    );\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && this.props.isOnline;\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users.map(user => (\n            <SecretUserListItem\n              key={user.id}\n              user={user}\n              disabled={\n                !canShare ||\n                currentUser.username === user.id ||\n                this.props.isUpdating\n              }\n              disabledReason={getDisabledReason(\n                !canShare,\n                currentUser.username === user.id\n              )}\n              onChangeUserRights={this.onChangeUserRights}\n              onRemoveUserRights={this.onRemoveUserRights}\n            />\n          ))}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser, online } = state.AppUI;\n  return {\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    data: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    showSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    this.props.showSecretActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    this.props.metadataActions.updateSecret({\n      secret: this.props.secret,\n      data: this.props.data,\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = this.props.currentUser;\n    const users = this.props.secret.users.filter(\n      user => user.id !== currentUserId\n    );\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(this.props.currentUser) &&\n      (this.props.isOnline || users.length === 0);\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.showSecretActions.hideModal}\n      >\n        <Modal.Header>\n          <Icon id={this.props.secret.getIcon()} size=\"small\" />\n          <SecretEditableTitle\n            title={this.props.secret.title}\n            canUpdate={canUpdate}\n            isUpdating={this.props.isUpdating}\n            onSubmit={newTitle => {\n              if (newTitle !== this.props.secret.title) {\n                setTimeout(() => {\n                  this.props.metadataActions.renameSecret({\n                    secret: this.props.secret,\n                    newTitle,\n                  });\n                });\n              }\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {this.props.secret.type === 'windows' && (\n            <Flash type=\"info\">\n              This secret is used for your Windows domain authentication. It\n              cannot be deleted.\n            </Flash>\n          )}\n          <Tabs\n            id=\"secret-tabs\"\n            activeKey={this.props.tab}\n            onSelect={this.handleChangeTab}\n          >\n            {this.props.secret.type !== 'folder' && (\n              <Tab eventKey=\"details\" title=\"Details\">\n                {this.props.secret.type === 'windows' ? (\n                  <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                ) : (\n                  <SecretEdit\n                    isUpdating={this.props.isUpdating}\n                    canUpdate={canUpdate}\n                  />\n                )}\n              </Tab>\n            )}\n\n            {this.props.secret.type !== 'windows' && (\n              <Tab eventKey=\"access\" title=\"Who has access\">\n                <SecretUserList\n                  isUpdating={this.props.isUpdating}\n                  errors={this.props.errors}\n                  secret={this.props.secret}\n                />\n              </Tab>\n            )}\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.showSecretActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            Close\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              Save\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSecretActions: bindActionCreators(ShowSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { secret, errors, tab, isUpdating } = state.ShowSecretUI;\n  const { isEditing, data } = state.EditSecretUI;\n  const { currentUser, online } = state.AppUI;\n  return {\n    secret,\n    shown: !!secret,\n    errors,\n    tab,\n    isUpdating,\n    isEditing,\n    data,\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretShow);\n","import { createSlice } from '@reduxjs/toolkit';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nimport { createSecretSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ).getRaw(),\n});\n\nexport const NewSecretUISlice = createSlice({\n  name: 'NewSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { folder, isFolder } = action.payload;\n      state.shown = true;\n      state.title = `Untitled ${isFolder ? 'folder' : 'secret'}`;\n      state.folder = folder;\n      state.isFolder = isFolder;\n    },\n    hideModal: () => getInitialState(),\n    changeTitle: (state, action) => {\n      const { value } = action.payload;\n      state.title = value;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: () => getInitialState(),\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  hideModal,\n  changeTitle,\n  changeField,\n} = NewSecretUISlice.actions;\n\nexport default NewSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nimport { loginUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  options: {},\n  errors: {},\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: {\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  },\n  rescueCodes: [],\n  loading: false,\n});\n\nexport const OptionsSlice = createSlice({\n  name: 'Options',\n  initialState: getInitialState(),\n  reducers: {\n    _activateTotp: (state, action) => {\n      state.loading = true;\n    },\n\n    _activateShortLogin: (state, action) => {\n      state.loading = true;\n    },\n\n    _toggleTotp: (state, action) => {\n      const { checked } = action.payload;\n      state.showQRCode = checked;\n    },\n\n    _toggleShortLogin: (state, action) => {\n      const { checked } = action.payload;\n      state.showShortLogin = checked;\n    },\n\n    activateTotpFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors.totp = error;\n      state.loading = false;\n    },\n\n    hideQRCode: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    hideShortLogin: (state, action) => {\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    activateTotpSuccess: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.totp = true;\n    },\n\n    deactivateTotpSuccess: (state, action) => {\n      state.options.totp = false;\n    },\n\n    deactivateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.options.shortLogin = shortLogin;\n    },\n\n    activateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.shortLogin = shortLogin;\n    },\n\n    changeDelaySuccess: (state, action) => {\n      const { timeToClose } = action.payload;\n      state.options.timeToClose = timeToClose;\n    },\n\n    changeNewPass1: (state, action) => {\n      const newPass1 = action.payload;\n      state.newPass.newPass1 = newPass1.value;\n    },\n\n    changeNewPass2: (state, action) => {\n      const newPass2 = action.payload;\n      state.newPass.newPass2 = newPass2.value;\n    },\n\n    showChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = true;\n    },\n\n    hideChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = false;\n    },\n\n    _changePassword: (state, action) => {\n      state.newPass.loading = true;\n      state.newPass.error = '';\n    },\n\n    changePasswordSuccess: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.status = 'success';\n    },\n\n    changePasswordFailure: (state, action) => {\n      state.newPass.error = 'Password change failed';\n      state.newPass.loading = false;\n      state.newPass.status = 'failure';\n    },\n\n    showRescueCodesSuccess: (state, action) => {\n      const { rescueCodes } = action.payload;\n      state.rescueCodes = rescueCodes;\n      state.showRescueCodes = true;\n    },\n\n    hideRescueCodes: (state, action) => {\n      state.rescueCodes = [];\n      state.showRescueCodes = false;\n    },\n  },\n  extraReducers: {\n    [loginUserSuccess]: (state, action) => {\n      const { options } = action.payload;\n      state.options = options;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  _activateTotp,\n  _activateShortLogin,\n  _toggleTotp,\n  _toggleShortLogin,\n  activateTotpFailure,\n  activateTotpSuccess,\n  hideQRCode,\n  hideShortLogin,\n  deactivateTotpSuccess,\n  deactivateShortLoginSuccess,\n  activateShortLoginSuccess,\n  changeDelaySuccess,\n  changeNewPass1,\n  changeNewPass2,\n  showChangePassword,\n  hideChangePassword,\n  _changePassword,\n  changePasswordSuccess,\n  changePasswordFailure,\n  showRescueCodesSuccess,\n  hideRescueCodes,\n} = OptionsSlice.actions;\n\nexport const deactivateTotp = () => (dispatch, getState) =>\n  secretin\n    .deactivateTotp()\n    .then(() => dispatch(deactivateTotpSuccess()))\n    .catch(() => {\n      // dispatch(deactivateTotpFailure());\n    });\n\nexport const activateTotp = ({ seed, token }) => (dispatch, getState) => {\n  dispatch(_activateTotp());\n  return secretin.api\n    .testTotp(seed.b32, token)\n    .then(() => secretin.activateTotp(seed))\n    .then(() => dispatch(activateTotpSuccess()))\n    .catch(err => {\n      if (err === 'Invalid couple') {\n        dispatch(activateTotpFailure({ error: 'Synchronisation error' }));\n      } else {\n        dispatch(activateTotpFailure({ error: 'An error occured' }));\n      }\n    });\n};\n\nexport const activateShortLogin = ({ shortpass }) => (dispatch, getState) => {\n  dispatch(_activateShortLogin());\n  return secretin\n    .activateShortLogin(shortpass, uuid.v4())\n    .then(() =>\n      dispatch(\n        activateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(activateShortLoginFailure());\n    });\n};\n\nexport const deactivateShortLogin = () => (dispatch, getState) => {\n  secretin\n    .deactivateShortLogin()\n    .then(() =>\n      dispatch(\n        deactivateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(deactivateShortLoginFailure());\n    });\n};\n\nexport const changePassword = ({ newPass }) => (dispatch, getState) => {\n  dispatch(_changePassword());\n  secretin\n    .changePassword(newPass)\n    .then(() => {\n      dispatch(changePasswordSuccess());\n    })\n    .catch(() => {\n      dispatch(changePasswordFailure());\n    });\n};\n\nexport const toggleTotp = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleTotp({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateTotp());\n};\n\nexport const showRescueCodes = () => (dispatch, getState) => {\n  if (\n    !window.confirm(\n      'Be careful, this will replace your previously generated codes. Continue?'\n    )\n  ) {\n    return;\n  }\n  secretin.getRescueCodes().then(rescueCodes => {\n    dispatch(showRescueCodesSuccess({ rescueCodes }));\n  });\n};\n\nexport const toggleShortLogin = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleShortLogin({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateShortLogin());\n};\n\nexport const toggleAutoLogout = ({ checked }) => (dispatch, getState) => {\n  const delay = checked ? 30 : 0;\n  return dispatch(changeTimeToClose({ timeToClose: delay }));\n};\n\nexport const changeTimeToClose = ({ timeToClose }) => (dispatch, getState) => {\n  secretin\n    .editOption('timeToClose', timeToClose)\n    .then(() => {\n      dispatch(changeDelaySuccess({ timeToClose }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport default OptionsSlice.reducer;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport importers from 'utils/importers';\nimport { findKey } from 'lodash';\n\nconst getInitialState = () => ({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: {},\n});\n\nexport const ImportSlice = createSlice({\n  name: 'Import',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      this.state.secret = secret;\n      this.state.tab = tab || 'details';\n      this.state.errors = {};\n    },\n    _importSecrets: (state, action) => {\n      state.importing = true;\n      state.success = false;\n      state.error = '';\n    },\n\n    detectTypeFailure: (state, action) => {\n      const { error } = action.payload;\n      state.error = error;\n      state.importType = '';\n      state.mandatoryFields = {};\n    },\n\n    detectTypeSuccess: (state, action) => {\n      const { file, importType, mandatoryFields } = action.payload;\n      state.importType = importType;\n      state.error = '';\n      state.file = file;\n      state.mandatoryFields = mandatoryFields;\n    },\n\n    importSecretsProgress: (state, action) => {\n      const { importStatus, importTotal } = action.payload;\n      state.error = '';\n      state.importStatus = importStatus;\n      state.importTotal = importTotal;\n    },\n\n    importSecretsSuccess: (state, action) => {\n      state.importing = false;\n      state.success = true;\n      state.importType = '';\n      state.error = '';\n      state.importStatus = 0;\n      state.importTotal = 0;\n      state.mandatoryFields = {};\n    },\n\n    importSecretsFailure: (state, action) => {\n      const { error } = action.payload;\n\n      state.importing = false;\n      state.success = false;\n      state.importType = '';\n      state.error = error;\n      state.mandatoryFields = {};\n    },\n\n    defaultStore: (state, action) => {\n      state = getInitialState();\n    },\n\n    changeMandatoryField: (state, action) => {\n      const { field, value } = action.payload;\n      state.mandatoryFields[field.name].value = value;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  _importSecrets,\n  detectTypeFailure,\n  detectTypeSuccess,\n  importSecretsProgress,\n  importSecretsSuccess,\n  importSecretsFailure,\n  defaultStore,\n  changeMandatoryField,\n} = ImportSlice.actions;\n\nexport const detectType = ({ file }) => (dispatch, getState) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = ({ target }) => {\n    const file = target.result;\n    const importType = findKey(importers, importer => importer.detect(file));\n\n    if (typeof importType !== 'undefined') {\n      const mandatoryFields = importers[importType].mandatoryFields;\n      dispatch(detectTypeSuccess({ file, importType, mandatoryFields }));\n    } else {\n      dispatch(detectTypeFailure({ error: 'Invalid type' }));\n    }\n  };\n  return reader;\n};\n\nexport const importSecrets = ({ file, type, mandatoryFields }) => (\n  dispatch,\n  getState\n) => {\n  dispatch(_importSecrets());\n  importers[type]\n    .parse(\n      file,\n      mandatoryFields,\n      ({ state: importStatus, total: importTotal }) =>\n        dispatch(\n          importSecretsProgress({\n            importStatus,\n            importTotal,\n          })\n        )\n    )\n    .then(() => {\n      dispatch(importSecretsSuccess());\n    })\n    .catch(error => {\n      dispatch(importSecretsFailure({ error }));\n    });\n};\n\nexport default ImportSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport AppUIReducer from '../slices/AppUISlice';\nimport EditSecretUIReducer from '../slices/EditSecretUISlice';\nimport MetadataReducer from '../slices/MetadataSlice';\nimport NewSecretUIReducer from '../slices/NewSecretUISlice';\nimport ShowSecretUIReducer from '../slices/ShowSecretUISlice';\nimport OptionsReducer from '../slices/OptionsSlice';\nimport ImportReducer from '../slices/ImportSlice';\n\nexport default configureStore({\n  reducer: {\n    AppUI: AppUIReducer,\n    EditSecretUI: EditSecretUIReducer,\n    Metadata: MetadataReducer,\n    NewSecretUI: NewSecretUIReducer,\n    ShowSecretUI: ShowSecretUIReducer,\n    Options: OptionsReducer,\n    Import: ImportReducer,\n  },\n});\n","import urljoin from 'url-join';\n\nexport function buildSecretURL(folders = [], basePath = '/secrets') {\n  return urljoin(basePath, folders.join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.array,\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users.map(user => (\n        <UserAvatar key={user.id} user={user} size={size} />\n      ))}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n    folder: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({\n        secret,\n        tab: secret.type === 'folder' ? 'access' : 'details',\n      })\n    );\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({ secret, tab: 'access' })\n    );\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    this.props.dispatch(\n      MetadataActions.removeSecretFromCurrentFolder({\n        secret,\n        currentFolderId,\n      })\n    );\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () =>\n        this.props.dispatch(MetadataActions.deleteSecret({ secret })),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret, currentUser, folder } = this.props;\n\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!this.props.isOnline}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!this.props.isOnline}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { online, currentUser } = state.AppUI;\n  const { metadata } = state.Metadata;\n  return {\n    isOnline: online,\n    currentUser,\n    folder: metadata.find(m => m.id === ownProps.parentFolderId),\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListItemOptions);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport store from 'stores/store';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n\n  const secretRights = secret.users.find(\n    user => user.id === currentUser.username\n  ).rights;\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL([...folders, secret.id])}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <tr className={className}>\n      <td className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders[folders.length - 1]}\n          secret={secret}\n        />\n      </td>\n    </tr>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    store.dispatch(MetadataActions.addSecretToFolder({ secret, folder }));\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = store.getState().AppUI.currentUser;\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.users.find(user => user.id === currentUserId).rights !==\n        0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.users.find(user => user.id === currentUserId).rights !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  const dispatch = useDispatch();\n\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const secretRights =\n    secret.users.find(user => user.id === currentUser.username)?.rights || 0;\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => dispatch(ShowSecretUIActions.showSecret({ secret }))}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <tr className={className}>\n      <td className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </td>\n      <td className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </td>\n    </tr>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders[folders.length - 1]}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.array,\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: [],\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const metadata = useSelector(state => state.Metadata.metadata);\n\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) => [\n      ...memo,\n      {\n        folderId,\n        link: buildSecretURL(\n          [folderId],\n          memo[memo.length - 1] ? memo[memo.length - 1].link : undefined\n        ),\n      },\n    ],\n    []\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = metadata?.find(m => m.id === folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return [\n      ...links,\n      <div key={key} className=\"breadcrumb-item\">\n        <NavLink\n          to={link}\n          className=\"breadcrumb-link\"\n          activeClassName=\"breadcrumb-link--active\"\n          exact\n        >\n          {folder.title}\n        </NavLink>\n      </div>,\n      <Icon\n        key={`${key}-sep`}\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />,\n    ];\n  }, []);\n\n  if (withTitle) {\n    breadcrumb.unshift(\n      <Icon\n        key=\"home-sep\"\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />\n    );\n\n    breadcrumb.unshift(\n      <Title\n        key=\"home\"\n        title={currentUser.username}\n        icon=\"home\"\n        link=\"/secrets/\"\n      />\n    );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  const secrets = Object.values(folder.secrets);\n  secrets.sort((a, b) => {\n    if (a.title === null) return 1;\n    if (b.title === null) return -1;\n    return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n  });\n  return (\n    <tbody className=\"secret-list-content-table-body\">\n      {!folder.root === true && (\n        <tr className=\"secret-list-folder\">\n          <td colSpan=\"4\" className=\"secret-list-folder-info\">\n            <SecretListBreadcrumb\n              folders={folder.breadcrumb}\n              withTitle={false}\n            />\n          </td>\n        </tr>\n      )}\n      {secrets.map(secret => (\n        <SecretListItemFolderSecret key={secret.id} secret={secret} />\n      ))}\n    </tbody>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { escapeRegExp, set } from 'lodash';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.array,\n    isDragging: PropTypes.bool,\n    folders: PropTypes.array,\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n    currentUser: PropTypes.object,\n    allFolders: PropTypes.array,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.endDecrypt ||\n      nextProps.searchQuery !== this.props.searchQuery ||\n      nextProps.filtered !== this.props.filtered ||\n      nextProps.folders.length !== this.props.folders.length\n    );\n  }\n\n  render() {\n    const { allFolders, currentUser } = this.props;\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = {};\n    let sortedFolders = [];\n\n    const getUser = (users, username) =>\n      users.find(user => user.id === username);\n\n    if (this.props.filtered) {\n      filteredSecrets.forEach(secret => {\n        let folder = 'ROOT';\n        const user = getUser(secret.users, currentUser.username);\n        if (user) folder = Object.keys(user.folders)[0];\n        if (typeof folder === 'undefined') {\n          folder = 'ROOT';\n        }\n        set(filteredFolders, `${folder}.secrets.${secret.id}`, secret);\n        if (folder === 'ROOT') {\n          filteredFolders[folder].name = '';\n          filteredFolders[folder].root = true;\n        } else {\n          let root = false;\n          let breadcrumb = [];\n          let fullName = [];\n          let currentFolder = folder;\n          while (!root) {\n            const currentFolderDetails = allFolders.find(\n              fold => fold.id === currentFolder\n            );\n            fullName.unshift(currentFolderDetails.title);\n            root = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            ).includes('ROOT');\n\n            breadcrumb.unshift(currentFolder);\n            currentFolder = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            )[0];\n          }\n          filteredFolders[folder].name = fullName.join('/');\n          filteredFolders[folder].breadcrumb = breadcrumb;\n        }\n      });\n      sortedFolders = Object.entries(filteredFolders).map(([id, folder]) => ({\n        ...folder,\n        id,\n      }));\n      sortedFolders.sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      );\n      sortedFolders.sort((a, b) => a.root);\n    } else {\n      filteredSecrets.sort((a, b) =>\n        a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n      );\n    }\n\n    return (\n      <table className={className}>\n        <thead className=\"secret-list-content-table-header\">\n          <tr>\n            <th className=\"secret-list-item-column--title\">Title</th>\n            <th className=\"secret-list-item-column--last-modified\">\n              Last modified\n            </th>\n            <th className=\"secret-list-item-column--shared-with\">\n              Shared with\n            </th>\n            <th className=\"secret-list-item-column--actions\" />\n          </tr>\n        </thead>\n        {this.props.filtered ? (\n          sortedFolders.map(folder => (\n            <SecretListFolderInfo key={folder.id} folder={folder} />\n          ))\n        ) : (\n          <tbody className=\"secret-list-content-table-body\">\n            {filteredSecrets.map(secret => (\n              <SecretListItem\n                key={secret.id}\n                secret={secret}\n                folders={this.props.folders}\n              />\n            ))}\n          </tbody>\n        )}\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.AppUI;\n  const allFolders =\n    Object.values(state.Metadata.metadata).filter(\n      secret => secret.type === 'folder'\n    ) || [];\n\n  return {\n    currentUser,\n    allFolders,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={() => dispatch(MetadataActions.loadMetadata())}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.object,\n    newSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    isLoading: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    this.props.metadataActions.createSecret({\n      folder: folder?.id,\n      isFolder,\n      title,\n      data,\n    });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.newSecretActions.hideModal}\n      >\n        <Modal.Header title={isFolder ? 'Add new folder' : 'Add new secret'} />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={isFolder ? 'Folder title' : 'Secret title'}\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={this.props.newSecretActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={this.props.newSecretActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.newSecretActions.hideModal}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={this.props.isLoading}\n          >\n            {isFolder ? 'Add folder' : 'Add secret'}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newSecretActions: bindActionCreators(NewSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.NewSecretUI,\n    isLoading: state.AppUI.loading,\n    folder: ownProps.folder,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretNew);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Secret from 'models/Secret';\n\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n};\n\nfunction SecretListNew({ folder }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const dispatch = useDispatch();\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew folder={folder} />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n          )\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        Add secret\n      </Button>\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n          )\n        }\n      >\n        <Icon id=\"add-folder\" size=\"small\" />\n        Create folder\n      </Button>\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SecretListSearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\nimport { connect } from 'react-redux';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    message: PropTypes.string,\n    state: PropTypes.number,\n    total: PropTypes.number,\n  };\n\n  static getDerivedStateFromProps({ message }) {\n    const nextMessage =\n      message instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    const { state, total } = this.props;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = _state => {\n  const { message, state, total } = _state.AppUI.status;\n  return {\n    message,\n    state,\n    total,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectProgress);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\n\nimport Secret from 'models/Secret';\n\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.array,\n    secrets: PropTypes.array,\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n    status: PropTypes.string,\n  };\n\n  static defaultProps = {\n    folders: [],\n    secrets: {},\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = 'All';\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = 'My secrets';\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = 'Shared secrets';\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        {this.props.status !== null && <UserConnectProgress />}\n        <div className=\"page-content\">\n          {!this.props.showAll &&\n            !this.props.showMine &&\n            !this.props.showShared && (\n              <div className=\"page-content-actions\">\n                <SecretListNew folder={this.props.folder} />\n              </div>\n            )}\n          <SecretListContent\n            filtered={filtered}\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={this.props.status === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nconst mapStateToProps = state => {\n  const { status } = state.AppUI;\n  return {\n    status,\n  };\n};\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(connect(mapStateToProps)(SecretList))\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport SecretList from 'components/secrets/SecretList';\n\nimport {\n  getAllSecrets,\n  getMySecrets,\n  getSecretsInFolder,\n  getSharedSecrets,\n} from 'selectors/MetadataSelectors';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  const metadata = useSelector(state => state.Metadata.metadata);\n  const allSecrets = useSelector(getAllSecrets);\n  const mySecrets = useSelector(getMySecrets);\n  const sharedSecrets = useSelector(getSharedSecrets);\n  const folders = params.path ? params.path.split('/') : [];\n  const folderId = folders[folders.length - 1];\n  const folderSecrets = useSelector(state =>\n    getSecretsInFolder(state, folderId)\n  );\n  if (showAll) {\n    return <SecretList secrets={allSecrets} showAll />;\n  } else if (showMine) {\n    return <SecretList secrets={mySecrets} showMine />;\n  } else if (showShared) {\n    return <SecretList secrets={sharedSecrets} showShared />;\n  }\n  const folder = metadata.find(f => f.id === folderId);\n  return (\n    <SecretList folder={folder} folders={folders} secrets={folderSecrets} />\n  );\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ShortLoginShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideShortLogin}\n      >\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showShortLogin, loading } = state.Options;\n  return {\n    errors,\n    shown: showShortLogin,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortLoginShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.object,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={this.props.actions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.totp}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showQRCode, loading } = state.Options;\n  return {\n    errors,\n    shown: showQRCode,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`);\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass RescueCodesShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.array,\n    currentUser: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = props.currentUser;\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideRescueCodes}\n      >\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { rescueCodes, showRescueCodes } = state.Options;\n  const { currentUser } = state.AppUI;\n  return {\n    rescueCodes,\n    shown: showRescueCodes,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RescueCodesShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n    dispatch: PropTypes.func,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    this.props.dispatch(\n      OptionsActions.changePassword({\n        newPass: this.props.newPass1,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={() => this.props.dispatch(OptionsActions.hideChangePassword())}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={(...args) =>\n                this.props.dispatch(OptionsActions.changeNewPass1(...args))\n              }\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={(...args) =>\n                    this.props.dispatch(OptionsActions.changeNewPass2(...args))\n                  }\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={() =>\n              this.props.dispatch(OptionsActions.hideChangePassword())\n            }\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  } = state.Options.newPass;\n  return {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  };\n};\n\nexport default connect(mapStateToProps)(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.object,\n    newPass: PropTypes.object,\n    isOnline: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChangeTimeToClose = this.onChangeTimeToClose.bind(this);\n  }\n\n  onChangeTimeToClose({ value }) {\n    this.props.actions.changeTimeToClose({\n      timeToClose: parseInt(value, 10) || 0,\n    });\n  }\n\n  render() {\n    const { options, isOnline } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.totp}\n                onChange={this.props.actions.toggleTotp}\n                disabled={!isOnline}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.totp && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={this.props.actions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.shortLogin}\n                onChange={this.props.actions.toggleShortLogin}\n                disabled={!isOnline}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.timeToClose > 0}\n                onChange={this.props.actions.toggleAutoLogout}\n                disabled={!isOnline}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {options.timeToClose > 0 && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={options.timeToClose}\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    debounce={800}\n                    disabled={!isOnline}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={this.props.actions.showChangePassword}\n                disabled={!isOnline}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { options } = state.Options;\n  const { online } = state.AppUI;\n  return {\n    options,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.name}\n        name={this.props.field.name}\n        value={this.props.field.value}\n        onChange={this.handleChange}\n        type={this.props.field.type}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport * as ImportActions from 'slices/ImportSlice';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields);\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields[key]}\n          onChange={this.props.actions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ImportActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { mandatoryFields } = state.Import;\n  return {\n    mandatoryFields,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport * as ImportActions from 'slices/ImportSlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.object,\n    importActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    this.props.importActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    this.props.importActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      this.props.metadataActions.loadMetadata();\n      setTimeout(() => {\n        this.props.importActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error.message}</span>}\n          {Object.keys(this.props.mandatoryFields).length > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  importActions: bindActionCreators(ImportActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  } = state.Import;\n  return {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport secretin from 'utils/secretin';\nimport Secretin from 'secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport { getSecretsInFolder } from 'selectors/MetadataSelectors';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.object,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      statue: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n    this.handleConnectionChange = this.handleConnectionChange.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener('connectionChange', this.handleConnectionChange);\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      this.handleConnectionChange\n    );\n  }\n\n  handleConnectionChange({ connection }) {\n    this.props.dispatch(AppUIActions.connectionChange(connection));\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      if (options.timeToClose > 0) {\n        const delay = options.timeToClose * 60 * 1000;\n        this.disconnectingEvent = setTimeout(\n          () => this.props.dispatch(AppUIActions.disconnectUser()),\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          {this.props.connected ? (\n            <Layout />\n          ) : (\n            <UserConnect\n              savedUsername={this.props.savedUsername}\n              loading={this.props.loading}\n              errors={this.props.errors}\n              status={this.props.status}\n            />\n          )}\n          <span className=\"secretin-version\">\n            secretin-lib v{Secretin.version}\n          </span>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { savedUsername, loading, errors, connected, status } = state.AppUI;\n  const secrets = getSecretsInFolder(state);\n  const { options } = state.Options;\n  return {\n    savedUsername,\n    loading,\n    errors,\n    connected,\n    status,\n    secrets,\n    options,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport registerServiceWorker from 'utils/registerServiceWorker';\n\nimport store from 'stores/store';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootEl\n);\nif (typeof window.process === 'undefined') {\n  registerServiceWorker();\n}\n\n// if (module.hot) {\n//   module.hot.accept('components/App', () => {\n//     // eslint-disable-next-line global-require\n//     const NextApp = require('components/App').default;\n\n//     ReactDOM.render(<NextApp />, rootEl);\n//   });\n// }\n"],"sourceRoot":""}