{"version":3,"sources":["utils/secretin.js","slices/AppUISlice.js","selectors/MetadataSelectors.js","components/utilities/Icon.js","components/utilities/Modal.js","components/utilities/Button.js","components/FooterModal/Welcome.js","components/FooterModal/index.js","components/Footer.js","components/utilities/Form.js","components/utilities/Dropdown.js","components/utilities/Input.js","components/users/UserConnectForm.js","components/utilities/Confirm.js","components/users/UserConnectShortPass.js","components/users/UserConnect.js","components/Sidebar.js","models/SecretFieldRecord.js","models/SecretDataRecord.js","models/User.js","models/Secret.js","slices/MetadataSlice.js","slices/ShowSecretUISlice.js","slices/EditSecretUISlice.js","components/secrets/SecretField.js","components/secrets/SecretFields.js","components/secrets/SecretEdit.js","components/secrets/SecretEditableTitle.js","components/secrets/SecretShowHeader.js","components/secrets/SecretHistoryButton.js","components/secrets/SecretHistory.js","components/utilities/Select.js","components/secrets/WindowsSecretEdit.js","components/users/UserAvatar.js","components/secrets/SecretUserListItem.js","components/secrets/SecretUserListNew.js","components/secrets/SecretUserList.js","components/utilities/Flash.js","components/utilities/Tabs.js","components/secrets/SecretShow.js","slices/NewSecretUISlice.js","slices/OptionsSlice.js","utils/importers/keepass.js","utils/importers/secretin.js","utils/importers/index.js","slices/ImportSlice.js","stores/store.js","utils/URLHelper.js","components/users/UserAvatars.js","components/secrets/SecretListItem/Options.js","components/secrets/SecretListItem/Folder.js","components/secrets/SecretListItem/Secret.js","components/secrets/SecretListItem/index.js","components/utilities/Title.js","components/secrets/SecretListBreadcrumb.js","components/secrets/SecretListFolderInfo.js","components/secrets/SecretListContent.js","components/secrets/SecretListRefresh.js","components/secrets/SecretNew.js","components/secrets/SecretListNew.js","components/secrets/SecretListSearch.js","components/users/UserConnectProgress.js","components/secrets/SecretList.js","components/secrets/SecretListContainer.js","components/options/ShortLoginShow.js","components/options/QRCodeShow.js","components/options/RescueCodesShow.js","components/options/ChangePasswordShow.js","components/utilities/Checkbox.js","components/options/OptionsContainer.js","components/utilities/Spinner.js","components/import/ImportFileChooser.js","components/import/ImportMandatoryField.js","components/import/ImportMandatoryFields.js","components/import/ImportContainer.js","components/Layout.js","components/App.js","utils/registerServiceWorker.js","index.js"],"names":["api","process","window","URLSearchParams","location","search","get","secretin","Secretin","SecretinBrowserAdapter","API","Server","Statuses","Errors","DecryptMetadataStatus","EndDecryptMetadataStatus","DecryptUserOptionsStatus","DecryptMetadataCacheStatus","UsernameAlreadyExistsError","UserNotFoundError","InvalidPasswordError","NeedTOTPTokenError","_loading","state","loading","_endLoading","AppUISlice","createSlice","name","initialState","savedUsername","getSavedUsername","connected","online","errors","currentUser","status","showShortpass","canITryShortLogin","reducers","endLoading","createSecret","createSecretSuccess","createSecretFailure","connectionChange","action","payload","connection","disconnectUserSuccess","createUserSuccess","createUserFailure","error","disableShortLoginSuccess","onLoginUserProgress","loginUserSuccess","loginUserFailure","addSecretToFolderFailure","removeSecretFromCurrentFolderFailure","hideShortpass","actions","createUser","username","password","confirmPassword","dispatch","setTimeout","newUser","then","catch","loginUser","token","console","time","loginUserProgress","options","totp","shortLogin","metadata","metadatas","getState","constructor","prevStatus","AppUI","total","Math","round","timeEnd","getAllSecrets","createSelector","Metadata","Object","values","filter","secret","type","getMySecrets","allSecrets","user","users","find","rights","getSecretsInFolder","folderId","userId","secretUser","id","folders","ROOT","keys","includes","getSharedSecrets","length","SIZES","small","base","Icon","this","props","size","className","classNames","width","height","xlinkHref","Component","defaultProps","Modal","centered","backdropClassName","show","onHide","closeOnBackdropClick","onClose","undefined","onClick","children","Body","Header","title","Footer","Button","handleClick","bind","disabled","buttonStyle","to","form","tabIndex","Welcome","href","target","rel","role","aria-label","FooterModal","showModal","acknowledgedVersion","hideNews","news","map","change","description","version","acknowledgeVersion","LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY","showNews","setState","localStorage","setItem","commit","SECRETIN_APP_COMMIT","getItem","fetch","response","json","data","foundAcknowledgedVersion","changelog","push","shortCommit","substr","Form","uniqueId","onSubmit","e","preventDefault","autoComplete","style","display","Dropdown","MenuItem","Input","handleChange","onTogglePasswordShow","autoCompleteSelected","showPassword","autoSelect","input","select","autoFocus","focus","event","onChange","value","label","placeholder","readOnly","inputProps","autoCompleteFromList","filteredAutoCompleteList","elem","toLowerCase","htmlFor","ref","open","Boolean","Menu","slice","onSelect","handleAutoCompleteSelect","debounce","UserConnectForm","toggleSignup","signup","AppUIActions","checked","isOnline","db","src","alt","shortLoginExpired","message","info","isEmpty","connect","Confirm","handleAccept","handleCancel","promise","Promise","resolve","reject","accept","cancel","used","text","cancelLabel","acceptLabel","confirm","confirmProps","comfirmElement","document","body","appendChild","createElement","component","ReactDOM","render","React","onAccept","onCancel","unmountComponentAtNode","remove","UserConnectShortPass","handleSubmit","handleDisable","shortpass","shortlogin","deactivateShortLogin","shortLoginActivationDate","getShortLoginActivationDate","moment","add","fromNow","UserConnect","isBefore","SidebarMenuLink","activeClassName","exportDb","filename","element","setAttribute","encodeURIComponent","click","removeChild","download","format","Sidebar","useSelector","exact","reload","SecretFieldRecord","raw","uuid","v4","date","content","rawData","SecretDataRecord","fields","params","getRaw","defaultFields","reduce","record","field","addNewField","entries","output","key","createFromRaw","DEFAULT_FIELDS","UserRights","userRightLabel","accessRights","Error","User","forEach","Secret","lastModifiedBy","lastModifiedAt","_user","accessRightForUser","FriendNotFoundError","_rebuildMetadata","buildSecrets","friendList","Set","metadatum","knownFriendList","Array","from","sort","getInitialState","MetadataSlice","loadMetadataSuccess","deleteSecretSuccess","deleteSecretFailure","addSecretToFolderSuccess","removeSecretFromCurrentFolderSuccess","createSecretUserRightsSuccess","updateSecretSuccess","renameSecretSuccess","updateSecretUserRightsSuccess","secretMetadataIndex","secretId","findIndex","getIndex","userToUpdate","merge","deleteSecretUserRightsSuccess","secretMetadata","getById","userToFilter","extraReducers","loadMetadata","refreshUser","isFolder","folder","addFolder","addSecret","updateSecret","a","updateSecretStart","editSecret","getHistory","history","log","updateSecretFailure","renameSecret","newTitle","deleteSecret","createSecretUserRights","shareSecret","createSecretUserRightsFailure","unknown","updateSecretUserRights","updateSecretUserRightsFailure","deleteSecretUserRights","unshareSecret","deleteSecretUserRightsFailure","addSecretToFolder","removeSecretFromCurrentFolder","currentFolderId","removeSecretFromFolder","tab","isUpdating","historyDepth","_handleError","ShowSecretUISlice","showSecretSuccess","hideModal","changeTab","historyShowOlder","historyShowNewer","rawUser","showSecret","getSecret","secretWithData","isEditing","EditSecretUISlice","updateData","changeField","fieldIndex","fieldToUpdate","SecretField","onCopy","onGenerate","copyToClipboard","debug","Utils","PasswordGenerator","generatePassword","isNew","canUpdate","SecretFields","SecretEdit","ownProps","EditSecretUI","bindActionCreators","EditSecretUIActions","SecretEditableTitle","handleKeyDown","blur","onBlur","onKeyDown","SecretShowHeader","icon","canEditTitle","onEditTitle","SecretHistoryButton","side","SecretHistory","historyCount","modifiedAt","isLatest","isOldest","color","backgroundColor","borderColor","fontWeight","ShowSecretUI","ShowSecretUIActions","Select","getValue","option","noop","WindowsSecretEdit","reverse","COLORS","getInitials","fullName","names","split","toUpperCase","substring","UserAvatar","colorIndex","sum","letter","charCodeAt","getAvatarColor","SecretUserListItem","disabledReason","onChangeUserRights","onRemoveUserRights","iconOnly","SecretUserListNew","on","MetadataActions","isValid","SecretUserList","canShare","canBeSharedBy","cantShare","isCurrentUser","Flash","Tabs","animation","Tab","BootstrapTab","SecretShow","handleChangeTab","showSecretActions","metadataActions","currentUserId","canBeUpdatedBy","shown","getIcon","activeKey","eventKey","createWithDefaultFields","NewSecretUISlice","loginIndex","passwordIndex","defaultUsername","changeTitle","showQRCode","showShortLogin","showRescueCodes","newPass","newPass1","newPass2","rescueCodes","OptionsSlice","_activateTotp","_activateShortLogin","_toggleTotp","_toggleShortLogin","activateTotpFailure","hideQRCode","hideShortLogin","activateTotpSuccess","deactivateTotpSuccess","deactivateShortLoginSuccess","activateShortLoginSuccess","changeDelaySuccess","timeToClose","changeDefaultUsernameSuccess","changeNewPass1","changeNewPass2","showChangePassword","hideChangePassword","_changePassword","changePasswordSuccess","changePasswordFailure","showRescueCodesSuccess","hideRescueCodes","deactivateTotp","activateTotp","seed","testTotp","b32","err","activateShortLogin","changePassword","toggleTotp","getRescueCodes","toggleShortLogin","toggleAutoLogout","changeTimeToClose","changeDefaultUsername","editOption","InternalProgressBar","progressFunction","func","child","hashedParent","strings","querySelectorAll","j","textContent","hashedTitle","rHashedTitle","defaultProgress","parseGroup","group","progress","entryPromises","call","childEntry","update","childGroup","getElementsByTagName","addAndParseGroup","count","nb","groups","i","importers","keepass","parse","xml","mandatoryField","parser","DOMParser","xmlDoc","parseFromString","root","currentProgress","detect","file","isKeepass","mandatoryFields","importDb","isSecretin","JSON","importType","importing","importStatus","importTotal","success","ImportSlice","_importSecrets","detectTypeFailure","detectTypeSuccess","importSecretsProgress","importSecretsSuccess","importSecretsFailure","defaultStore","changeMandatoryField","detectType","reader","FileReader","readAsText","onload","result","findKey","importer","importSecrets","configureStore","reducer","AppUIReducer","EditSecretUIReducer","MetadataReducer","NewSecretUI","NewSecretUIReducer","ShowSecretUIReducer","Options","OptionsReducer","Import","ImportReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","buildSecretURL","basePath","urljoin","join","UserAvatars","SecretListItemOptions","handleShow","handleShare","handleMoveToParent","parentFolderId","handleDelete","pullRight","Toggle","canBeDeleted","divider","m","itemTarget","drop","monitor","store","canDrop","targetSecret","draggedSecret","SecretListItemFolderSource","DragSource","beginDrag","connectDragSource","dragSource","isDragging","isOver","connectDropTarget","secretRights","link","SecretListItemFolderTarget","DropTarget","dropTarget","useDispatch","SecretListItem","Title","SecretListBreadcrumb","withTitle","breadcrumb","memo","links","unshift","SecretListFolderInfo","colSpan","SecretListContent","allFolders","fuzzyRegexp","RegExp","searchQuery","c","escapeRegExp","filteredSecrets","secrets","test","filteredFolders","sortedFolderRows","getUser","filtered","set","currentFolder","currentFolderDetails","fold","sortedFolders","b","localeCompare","rowType","rowData","flat","renderFilteredRow","index","renderStandardRow","getRowHeight","rowHeight","rowRenderer","rowCount","SecretListRefresh","SecretNew","newSecretActions","required","isLoading","NewSecretUIActions","SecretListNew","showAddFolder","canWrite","SecretListSearch","Mousetrap","unbind","searchInput","activeElement","UserConnectProgress","_state","SecretList","onSearch","showAll","showMine","showShared","endDecrypt","DragDropContext","HTML5Backend","DragLayer","getFolders","defaultMemoize","path","previousVal","currentVal","equal","SecretListContainer","match","mySecrets","sharedSecrets","folderSecrets","f","ShortLoginShow","nextProps","OptionsActions","QRCodeShow","generateSeed","replace","maxLength","getFile","codes","code","Blob","RescueCodesShow","URL","createObjectURL","ChangePasswordShow","handleChangePassword","Checkbox","checboxClassName","OptionsContainer","onChangeTimeToClose","onChangeDefaultUsername","onSaveDefaultUsername","parseInt","toString","min","max","step","Spinner","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","ImportFileChooser","handleFileInputChange","onFileChoosen","files","ImportFileChooserTarget","NativeTypes","FILE","ImportMandatoryField","ImportersMandatoryFields","inputs","ImportActions","ImportContainer","handleFileChoosen","handleStartParsing","importActions","nextState","ImportMandatoryFields","Layout","App","disconnectingEvent","onAppFocus","onAppBlur","handleConnectionChange","addEventListener","removeEventListener","clearTimeout","delay","basename","hostname","rootEl","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5516c654.chunk.js","sourcesContent":["import Secretin from 'secretin';\nimport SecretinBrowserAdapter from 'secretin/dist/adapters/browser.umd';\n\nconst serverURI = process.env.REACT_APP_API_SECRETIN\n  ? process.env.REACT_APP_API_SECRETIN\n  : 'http://devapi.secret-in.me:3000';\n\nlet api = serverURI;\n\nif (typeof window.process !== 'undefined') {\n  // Electron\n  const params = new URLSearchParams(window.location.search);\n  api = params.get('api');\n}\n\nconst secretin = new Secretin(SecretinBrowserAdapter, Secretin.API.Server, api);\n\nexport const Statuses = {\n  ...Secretin.Statuses,\n};\n\nexport const Errors = {\n  ...Secretin.Errors,\n};\n\nexport default secretin;\n","import secretin, { Statuses, Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst {\n  DecryptMetadataStatus,\n  EndDecryptMetadataStatus,\n  DecryptUserOptionsStatus,\n  DecryptMetadataCacheStatus,\n} = Statuses;\n\nconst {\n  UsernameAlreadyExistsError,\n  UserNotFoundError,\n  InvalidPasswordError,\n  NeedTOTPTokenError,\n} = Errors;\n\n// Helpers because we're often doing these small state updates\n\nconst _loading = state => {\n  state.loading = true;\n};\nconst _endLoading = state => {\n  state.loading = false;\n};\n\nexport const AppUISlice = createSlice({\n  name: 'AppUI',\n  initialState: {\n    savedUsername: secretin.getSavedUsername(),\n    loading: false,\n    connected: false,\n    online: true,\n    errors: {},\n    currentUser: null,\n    status: null,\n    showShortpass: secretin.canITryShortLogin(),\n  },\n  reducers: {\n    loading: _loading,\n    endLoading: _endLoading,\n    createSecret: _loading,\n    createSecretSuccess: _endLoading,\n    createSecretFailure: _endLoading,\n    connectionChange: (state, action) => {\n      state.online = action.payload.connection === 'online';\n    },\n    disconnectUserSuccess: state => {\n      state.savedUsername = secretin.getSavedUsername();\n      state.showShortpass = secretin.canITryShortLogin();\n      state.loading = false;\n      state.connected = false;\n      state.errors = {};\n      state.currentUser = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.currentUser = action.payload.currentUser;\n    },\n    createUserFailure: (state, action) => {\n      state.loading = false;\n      state.connected = false;\n      state.errors = action.payload.error;\n      state.status = null;\n    },\n    disableShortLoginSuccess: _endLoading,\n    onLoginUserProgress: (state, action) => {\n      const { status } = action.payload;\n      if (status) state.status = { ...status };\n    },\n    loginUserSuccess: (state, action) => {\n      const { currentUser } = action.payload;\n      state.loading = false;\n      state.connected = true;\n      state.errors = {};\n      state.status = null;\n      state.currentUser = currentUser;\n    },\n    loginUserFailure: (state, action) => {\n      const { error } = action.payload;\n      state.loading = false;\n      state.connected = false;\n      state.errors = error;\n      state.status = null;\n    },\n    addSecretToFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    removeSecretFromCurrentFolderFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors = error;\n    },\n    hideShortpass: state => {\n      state.showShortpass = false;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loading,\n  endLoading,\n  createSecret,\n  createSecretSuccess,\n  createSecretFailure,\n  disconnectUserSuccess,\n  connectionChange,\n  createUserSuccess,\n  createUserFailure,\n  disableShortLoginSuccess,\n  onLoginUserProgress,\n  loginUserSuccess,\n  loginUserFailure,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n  hideShortpass,\n} = AppUISlice.actions;\n\nexport const disconnectUser = () => dispatch => {\n  window.location.reload();\n};\n\nexport const createUser = ({\n  username,\n  password,\n  confirmPassword,\n}) => dispatch => {\n  dispatch(loading());\n  if (password !== confirmPassword) {\n    setTimeout(\n      () =>\n        dispatch(\n          createUserFailure({\n            error: { confirmPassword: 'Passwords mismatch' },\n          })\n        ),\n      100\n    );\n  } else {\n    secretin\n      .newUser(username, password)\n      .then(currentUser => dispatch(createUserSuccess({ currentUser })))\n      .catch(error => {\n        if (error instanceof UsernameAlreadyExistsError) {\n          return dispatch(\n            createUserFailure({\n              error: { username: 'User already exists' },\n            })\n          );\n        }\n        throw error;\n      });\n  }\n};\n\nexport const loginUser = ({ username, password, token }) => dispatch => {\n  console.time('decrypt');\n  dispatch(loading());\n  secretin\n    .loginUser(\n      username,\n      password,\n      token,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser =>\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      if (error instanceof UserNotFoundError) {\n        return dispatch(\n          loginUserFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      } else if (error instanceof InvalidPasswordError) {\n        if (token) {\n          return dispatch(\n            loginUserFailure({\n              error: {\n                totp: 'Token',\n                password: 'Invalid password',\n                token: 'or invalid token',\n              },\n            })\n          );\n        }\n        return dispatch(\n          loginUserFailure({\n            error: { password: 'Invalid password' },\n          })\n        );\n      } else if (error instanceof NeedTOTPTokenError) {\n        return dispatch(\n          loginUserFailure({\n            error: { totp: 'Token' },\n          })\n        );\n      }\n      throw error;\n    });\n};\n\nexport const loginUserProgress = status => (dispatch, getState) => {\n  const currentUser = secretin.currentUser;\n  switch (status.constructor) {\n    case DecryptMetadataCacheStatus:\n    case DecryptMetadataStatus:\n    case DecryptUserOptionsStatus: {\n      const prevStatus = getState().AppUI.status;\n      if (prevStatus) {\n        const { state, total } = prevStatus;\n        if (\n          state &&\n          total &&\n          Math.round((status.state / status.total) * 100) ===\n            Math.round((state / total) * 100)\n        ) {\n          return; // Progress % did not change, prevent dispatch\n        }\n      }\n      return dispatch(onLoginUserProgress({ status }));\n    }\n    case EndDecryptMetadataStatus:\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n      console.timeEnd('decrypt');\n      return dispatch(onLoginUserProgress({ status: null }));\n    default:\n      return;\n  }\n};\n\nexport const shortLogin = ({ shortpass }) => dispatch => {\n  dispatch(loading());\n  secretin\n    .shortLogin(\n      shortpass,\n      (...args) => dispatch(loginUserProgress(...args)),\n      false\n    )\n    .then(currentUser => {\n      dispatch(\n        loginUserSuccess({\n          currentUser,\n          options: {\n            ...currentUser.options,\n            totp: currentUser.totp,\n            shortLogin: secretin.canITryShortLogin(),\n          },\n          metadata: currentUser.metadatas,\n        })\n      );\n    })\n    .catch(() => {\n      dispatch(\n        loginUserFailure({\n          error: { shortlogin: 'Expired shortpass' },\n        })\n      );\n      setTimeout(() => {\n        dispatch(hideShortpass());\n      }, 1000);\n    });\n};\n\nexport const disableShortLogin = () => dispatch => {\n  dispatch(loading());\n  secretin.deactivateShortLogin();\n  dispatch(disableShortLoginSuccess());\n  dispatch(hideShortpass());\n};\n\nexport default AppUISlice.reducer;\n","import { createSelector } from 'reselect';\n\nexport const getAllSecrets = createSelector(\n  state => state.Metadata.metadata,\n  metadata => {\n    return Object.values(metadata).filter(secret => secret.type !== 'folder');\n  }\n);\n\nexport const getMySecrets = createSelector(\n  getAllSecrets,\n  state => state.AppUI.currentUser,\n  (allSecrets, currentUser) => {\n    if (!allSecrets) return [];\n    return allSecrets.filter(secret => {\n      const user = secret.users.find(\n        user => user.username === currentUser.username\n      );\n      return user?.rights === 2;\n    });\n  }\n);\n\nexport const getSecretsInFolder = createSelector(\n  state => state.Metadata.metadata,\n  state => state.AppUI.currentUser,\n  (state, folderId) => folderId,\n  (metadata, currentUser, folderId) => {\n    if (!currentUser || !metadata) {\n      return {};\n    }\n    const userId = currentUser.username;\n    return Object.values(metadata).filter(secret => {\n      const secretUser = secret.users.find(user => user.id === userId);\n      const folders = secretUser?.folders || {};\n      return (\n        (!folderId && folders.ROOT) ||\n        (folderId && Object.keys(folders).includes(folderId))\n      );\n    });\n  }\n);\n\nexport const getSharedSecrets = createSelector(getAllSecrets, allSecrets => {\n  if (!allSecrets) return [];\n  return allSecrets.filter(secret => secret.users.length > 1);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SIZES = {\n  small: 18,\n  base: 24,\n};\n\nclass Icon extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf(['small', 'base']),\n    ]),\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    size: 'base',\n    className: '',\n  };\n\n  render() {\n    const { id, size } = this.props;\n    const className = classNames(\n      'icon',\n      `icon--id-${id}`,\n      this.props.className,\n      {\n        [`icon--size-${size}`]: typeof size === 'string',\n      }\n    );\n\n    return (\n      <svg\n        className={className}\n        width={typeof size === 'string' ? SIZES[size] : size}\n        height={typeof size === 'string' ? SIZES[size] : size}\n      >\n        <use xlinkHref={`#${id}`} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactOverlaysModal from 'react-overlays/lib/Modal';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nfunction Modal(props) {\n  const className = classNames('modal', props.className, {\n    'modal--centered': props.centered,\n  });\n\n  return (\n    <ReactOverlaysModal\n      className={className}\n      backdropClassName=\"modal-backdrop\"\n      show={props.show}\n      onHide={props.closeOnBackdropClick ? props.onClose : undefined}\n    >\n      <div className=\"modal-dialog\">\n        {props.onClose && (\n          <button className=\"modal-dialog-close\" onClick={props.onClose}>\n            <Icon id=\"close\" size=\"small\" />\n          </button>\n        )}\n\n        {props.children}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\nModal.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  centered: PropTypes.bool,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onClose: PropTypes.func,\n  closeOnBackdropClick: PropTypes.bool,\n};\nModal.defaultProps = {\n  centered: false,\n};\n\nfunction ModalBody(props) {\n  return <div className=\"modal-body\">{props.children}</div>;\n}\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalHeader(props) {\n  return (\n    <div className=\"modal-header\">\n      <h2 className=\"modal-header-title\">{props.title || props.children}</h2>\n    </div>\n  );\n}\nModalHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction ModalFooter(props) {\n  return <div className=\"modal-footer\">{props.children}</div>;\n}\nModalFooter.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nModal.Body = ModalBody;\nModal.Header = ModalHeader;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nclass Button extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    form: PropTypes.string,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    buttonStyle: PropTypes.oneOf([\n      'default',\n      'primary',\n      'icon',\n      'success',\n      'warning',\n    ]),\n    to: PropTypes.string,\n    onClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    tabIndex: PropTypes.string,\n  };\n\n  static defaultProps = {\n    type: 'button',\n    size: 'base',\n    form: null,\n    buttonStyle: 'primary',\n    onClick: () => ({}),\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'button',\n      `button--style-${this.props.buttonStyle}`,\n      `button--size-${this.props.size}`\n    );\n\n    if (this.props.to) {\n      return (\n        <Link\n          className={className}\n          title={this.props.title}\n          onClick={this.handleClick}\n          to={this.props.to}\n          disabled={this.props.disabled}\n        >\n          {this.props.children}\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={className}\n        name={this.props.name}\n        title={this.props.title}\n        type={this.props.type}\n        form={this.props.form}\n        onClick={this.handleClick}\n        disabled={this.props.disabled}\n        tabIndex={this.props.tabIndex}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport Modal from 'components/utilities/Modal';\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <>\n        <Modal.Header title=\"Welcome to Secret-in.me\" />\n        <Modal.Body>\n          <div>\n            <p>\n              <a\n                href=\"https://my.secret-in.me\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Secret-in.me\n              </a>{' '}\n              is a team-oriented{' '}\n              <a\n                href=\"https://github.com/secretin\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                open source\n              </a>{' '}\n              password manager with a focus on transparency, usability and\n              security.\n            </p>\n            <p>\n              If it&apos;s your first time here, you can create a user and start\n              saving your secrets.\n            </p>\n            <p>\n              Be careful, all your secrets will be protected by the password you\n              pick. There is <b>no way</b> to retrieve your secrets if you\n              forget your password !\n            </p>\n            <p>\n              This secret manager is freely provided with{' '}\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n              by{' '}\n              <a\n                href=\"https://bug.builders\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Bug Builders.\n              </a>\n            </p>\n            <p>\n              If you enjoy it, please consider{' '}\n              <a\n                href=\"https://donorbox.org/secret-in-me/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <b>donating !</b>\n              </a>{' '}\n            </p>\n            <p>It&apos;ll help us support hosting costs (~50$ per month).</p>\n          </div>\n        </Modal.Body>\n      </>\n    );\n  }\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Welcome from 'components/FooterModal/Welcome';\n\nconst propTypes = {\n  hideNews: PropTypes.func,\n  acknowledgeVersion: PropTypes.func,\n  acknowledgedVersion: PropTypes.string,\n  news: PropTypes.array,\n  showModal: PropTypes.bool,\n};\n\nclass FooterModal extends Component {\n  render() {\n    return (\n      <Modal\n        show={this.props.showModal}\n        onClose={\n          this.props.acknowledgedVersion === null ? false : this.props.hideNews\n        }\n      >\n        {this.props.acknowledgedVersion === null ? (\n          <Welcome />\n        ) : (\n          <>\n            <Modal.Header title=\"What's new ?\" />\n            <Modal.Body>\n              {this.props.news.map(change => (\n                <div key={change.version}>\n                  <h2>{change.title}</h2>\n                  <p>{change.description}</p>\n                </div>\n              ))}\n            </Modal.Body>\n          </>\n        )}\n\n        <Modal.Footer>\n          {this.props.acknowledgedVersion !== null && (\n            <Button\n              type=\"reset\"\n              buttonStyle=\"default\"\n              onClick={this.props.hideNews}\n            >\n              Close\n            </Button>\n          )}\n          <Button type=\"submit\" onClick={this.props.acknowledgeVersion}>\n            Ok\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nFooterModal.propTypes = propTypes;\n\nexport default FooterModal;\n","import React, { Component } from 'react';\nimport Secretin from 'secretin';\nimport FooterModal from 'components/FooterModal/index';\n\nconst LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY = 'Secret-in:acknowledgedVersion';\nconst DEFAULT_DEVELOP_COMMITISH = 'develop';\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    // eslint-disable-next-line no-undef\n    const commit = SECRETIN_APP_COMMIT;\n\n    const acknowledgedVersion = window.localStorage.getItem(\n      LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY\n    );\n\n    this.state = {\n      commit,\n      acknowledgedVersion,\n      news: [],\n      showModal: acknowledgedVersion ? false : true,\n    };\n  }\n\n  showNews = () => this.setState({ showModal: true });\n\n  hideNews = () => this.setState({ showModal: false });\n\n  acknowledgeVersion = () => {\n    window.localStorage.setItem(\n      LOCAL_STORAGE_ACKNOWLEDGE_VERSION_KEY,\n      this.state.commit\n    );\n    this.setState({\n      news: [],\n      acknowledgeVersion: this.state.commit,\n      showModal: false,\n    });\n  };\n\n  componentDidMount() {\n    if (this.state.acknowledgedVersion === null) {\n      return;\n    }\n\n    const somethingNew =\n      this.state.commit !== DEFAULT_DEVELOP_COMMITISH &&\n      this.state.acknowledgedVersion !== this.state.commit;\n    if (somethingNew) {\n      fetch(\n        'https://raw.githubusercontent.com/secretin/secretin-website/develop/changelog.json'\n      )\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          const news = [];\n          let foundAcknowledgedVersion = false;\n          for (const change of data.changelog) {\n            if (change.version === this.state.acknowledgedVersion) {\n              foundAcknowledgedVersion = true;\n              break;\n            }\n            news.push(change);\n          }\n\n          if (foundAcknowledgedVersion) {\n            this.setState({ news });\n          } else {\n            // If we didn't find the acknowledged version, then we didn't updated changelog properly\n            // we will just show the last change then\n            this.setState({ news: [data.changelog[0]] });\n          }\n        })\n        .catch(() => {\n          // Ignore error\n        });\n    }\n  }\n\n  render() {\n    const shortCommit = this.state.commit ? this.state.commit.substr(0, 7) : '';\n    return (\n      <div className=\"footer\">\n        <FooterModal\n          news={this.state.news}\n          acknowledgeVersion={this.acknowledgeVersion}\n          acknowledgedVersion={this.state.acknowledgedVersion}\n          hideNews={this.hideNews}\n          showModal={this.state.showModal}\n        />\n        <span className=\"secretin-version\">\n          {this.state.news.length > 0 && (\n            <span className=\"new-in-secretin-version\" onClick={this.showNews}>\n              •\n            </span>\n          )}\n          <span className=\"secretin-version-text\">\n            secretin-app{' '}\n            <a\n              href={`https://github.com/secretin/secretin-app/commit/${this.state.commit}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {shortCommit}\n            </a>\n          </span>\n        </span>\n        <span className=\"secretin-version\">\n          <span className=\"secretin-version-text\">\n            secretin-lib v{Secretin.version}\n          </span>\n        </span>\n        <span className=\"secretin-version\">\n          <span className=\"secretin-version-text\">\n            <a\n              href=\"https://donorbox.org/secret-in-me/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n              <b>Donate</b>\n              <span role=\"img\" aria-label=\"red-heart-emoji\">\n                ❤️\n              </span>{' '}\n            </a>\n          </span>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Form extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    disabled: false,\n    autoComplete: false,\n    onSubmit: () => ({}),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = props.id || uniqueId('form_');\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.disabled) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    const className = classNames('form', this.props.className);\n\n    return (\n      <form\n        id={this.id}\n        className={className}\n        onSubmit={this.onSubmit}\n        autoComplete={this.props.autoComplete ? null : 'new-password'}\n      >\n        {!this.props.autoComplete && [\n          <input\n            key=\"autofill_trap_email\"\n            name=\"autofill_trap_email\"\n            type=\"text\"\n            style={{ display: 'none' }}\n          />,\n          <input\n            key=\"autofill_trap_password\"\n            name=\"autofill_trap_password\"\n            type=\"password\"\n            style={{ display: 'none' }}\n          />,\n        ]}\n        <input type=\"submit\" style={{ display: 'none' }} />\n        {this.props.children}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/lib/Dropdown';\nimport MenuItem from 'react-bootstrap/lib/MenuItem';\n\nDropdown.MenuItem = function DropdownMenuItem(props) {\n  return <MenuItem className=\"dropdown-menu-item\" {...props} />;\n};\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\nimport Dropdown from 'components/utilities/Dropdown';\n\nclass Input extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.any,\n    title: PropTypes.string,\n    type: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    error: PropTypes.string,\n\n    autoFocus: PropTypes.bool,\n    autoSelect: PropTypes.bool,\n    autoComplete: PropTypes.bool,\n    autoCompleteFromList: PropTypes.array,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    actions: PropTypes.array,\n    size: PropTypes.string,\n    inputProps: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number,\n      step: PropTypes.number,\n    }),\n    debounce: PropTypes.number,\n  };\n\n  static defaultProps = {\n    type: 'text',\n    value: '',\n    autoFocus: false,\n    autoSelect: false,\n    autoComplete: false,\n    autoCompleteFromList: [],\n    disabled: false,\n    readOnly: false,\n    actions: [],\n    size: 'base',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onTogglePasswordShow = this.onTogglePasswordShow.bind(this);\n    this.id = uniqueId(`${this.props.name}_input_`);\n    this.state = {\n      autoCompleteSelected: false,\n      showPassword: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.autoSelect) {\n      setTimeout(() => this.input.select(), 0);\n    }\n    if (this.props.autoFocus) {\n      setTimeout(() => this.input.focus(), 0);\n    }\n  }\n\n  onTogglePasswordShow() {\n    this.setState({\n      showPassword: !this.state.showPassword,\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ autoCompleteSelected: false });\n    this.props.onChange({\n      name: this.props.name,\n      value: event.target.value,\n    });\n  }\n\n  handleAutoCompleteSelect(value) {\n    this.setState({ autoCompleteSelected: true });\n    this.props.onChange({ name: this.props.name, value });\n  }\n\n  select() {\n    this.input.select();\n  }\n\n  render() {\n    const className = classNames(\n      'input',\n      `input--type-${this.props.type}`,\n      `input--size-${this.props.size}`,\n      {\n        'input--error': this.props.error,\n      }\n    );\n\n    const {\n      type,\n      title,\n      autoComplete,\n      autoFocus,\n      disabled,\n      error,\n      label,\n      placeholder,\n      readOnly,\n      actions,\n      inputProps,\n      autoCompleteFromList,\n    } = this.props;\n\n    const filteredAutoCompleteList =\n      this.props.value.length > 0\n        ? autoCompleteFromList.filter(elem =>\n            elem.toLowerCase().includes(this.props.value.toLowerCase())\n          )\n        : [];\n\n    return (\n      <div className={className}>\n        {label && (\n          <label htmlFor={this.id}>\n            {label}\n            {actions.length > 0 && (\n              <span className=\"input-label-actions\">{actions}</span>\n            )}\n          </label>\n        )}\n\n        <div className=\"input--wrapper\">\n          <input\n            id={this.id}\n            ref={input => {\n              this.input = input;\n            }}\n            name={this.id}\n            title={title}\n            type={\n              type === 'password' && this.state.showPassword ? 'text' : type\n            }\n            value={this.props.value}\n            onChange={this.handleChange}\n            placeholder={placeholder}\n            autoComplete={autoComplete ? 'on' : 'off'}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            readOnly={readOnly}\n            {...inputProps}\n          />\n          {!this.state.autoCompleteSelected &&\n            filteredAutoCompleteList.length > 0 && (\n              <Dropdown\n                id=\"input--auto-complete-list\"\n                open={Boolean(this.props.value.length > 0)}\n              >\n                <Dropdown.Menu>\n                  {filteredAutoCompleteList.slice(0, 5).map(elem => (\n                    <Dropdown.MenuItem\n                      key={elem}\n                      onSelect={() => this.handleAutoCompleteSelect(elem)}\n                    >\n                      {elem}\n                    </Dropdown.MenuItem>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            )}\n          {type === 'password' && (\n            <div className=\"input--password-show\">\n              <Button\n                title=\"Show\"\n                buttonStyle=\"icon\"\n                onClick={this.onTogglePasswordShow}\n                tabIndex=\"-1\"\n              >\n                <Icon\n                  id={this.state.showPassword ? 'show' : 'hide'}\n                  size=\"small\"\n                />\n              </Button>\n            </div>\n          )}\n        </div>\n        {error && <span className=\"input-error\">{error}</span>}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass UserConnectForm extends Component {\n  static propTypes = {\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n    savedUsername: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: props.savedUsername,\n      password: '',\n      confirmPassword: '',\n      showShortpass: secretin.canITryShortLogin(),\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup(checked) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const status = this.state.signup ? 'Sign up' : 'Sign in';\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.onSubmit}\n      >\n        <h2\n          className=\"user-connect-title\"\n          title={this.props.isOnline && secretin.api.db}\n        >\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '70%' }}\n            alt=\"logo\"\n            title={this.props.isOnline ? 'Secret-In.me' : 'Offline'}\n          />\n        </h2>\n        <Input\n          name=\"username\"\n          label=\"Username\"\n          type=\"text\"\n          value={this.state.username}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.username}\n          autoFocus={this.props.savedUsername === ''}\n          autoComplete\n        />\n        <Input\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n          disabled={this.props.loading}\n          error={this.props.errors.password}\n          autoFocus={this.props.savedUsername !== ''}\n        />\n        {this.props.errors.totp && (\n          <Input\n            name=\"token\"\n            label=\"Token\"\n            type=\"text\"\n            value={this.state.token}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.token}\n            autoFocus\n          />\n        )}\n        {this.state.signup && (\n          <Input\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={this.state.confirmPassword}\n            onChange={this.handleChange}\n            disabled={this.props.loading}\n            error={this.props.errors.confirmPassword}\n          />\n        )}\n\n        {this.props.errors.shortLoginExpired && (\n          <h3 className=\"tooltip\">\n            {this.props.errors.shortLoginExpired.message}\n            <Icon id=\"info\" size={13} />\n            <span className=\"tooltiptext\">\n              {this.props.errors.shortLoginExpired.info}\n            </span>\n          </h3>\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={\n            this.props.loading ||\n            isEmpty(this.state.username) ||\n            isEmpty(this.state.password)\n          }\n        >\n          {status}\n        </Button>\n        <div className=\"user-connect-create\">\n          <span>\n            {this.state.signup ? (\n              <span>\n                I already have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  sign in\n                </a>\n              </span>\n            ) : (\n              <span>\n                I don&apos;t have an account,&nbsp;\n                <a\n                  onClick={() => {\n                    this.toggleSignup(!this.state.signup);\n                  }}\n                  tabIndex=\"-1\"\n                >\n                  create one\n                </a>\n              </span>\n            )}\n          </span>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { online } = state.AppUI;\n  return {\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectForm);\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nclass Confirm extends Component {\n  static propTypes = {\n    title: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    text: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    acceptLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAccept = this.handleAccept.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.promise = new Promise((resolve, reject) => {\n      this.accept = resolve;\n      this.cancel = reject;\n    });\n\n    this.state = {\n      used: false,\n    };\n  }\n\n  handleAccept() {\n    this.setState({\n      used: true,\n    });\n    this.accept();\n  }\n\n  handleCancel() {\n    this.setState({\n      used: true,\n    });\n    this.cancel();\n  }\n\n  render() {\n    return (\n      <Modal show centered onClose={this.promise.reject}>\n        {this.props.title && <Modal.Header>{this.props.title}</Modal.Header>}\n\n        <Modal.Body>{this.props.text}</Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.handleCancel}\n            disabled={this.state.used}\n          >\n            {this.props.cancelLabel}\n          </Button>\n          <Button\n            buttonStyle=\"primary\"\n            onClick={this.handleAccept}\n            disabled={this.state.used}\n          >\n            {this.props.acceptLabel}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport function confirm(confirmProps = {}) {\n  const comfirmElement = document.body.appendChild(\n    document.createElement('div')\n  );\n\n  // eslint-disable-next-line react/no-render-return-value\n  const component = ReactDOM.render(\n    React.createElement(Confirm, confirmProps),\n    comfirmElement\n  );\n\n  return component.promise\n    .then(confirmProps.onAccept)\n    .catch(confirmProps.onCancel)\n    .then(() => {\n      ReactDOM.unmountComponentAtNode(comfirmElement);\n      setTimeout(() => comfirmElement.remove());\n    });\n}\n\nexport default Confirm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Form from 'components/utilities/Form';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\nimport { confirm } from 'components/utilities/Confirm';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport moment from 'moment';\n\nclass UserConnectShortPass extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onCancel: PropTypes.func,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      shortpass: e.value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.dispatch(\n      AppUIActions.shortLogin({ shortpass: this.state.shortpass })\n    );\n  }\n\n  handleDisable() {\n    confirm({\n      title: 'Are you sure?',\n      text: <span>This will disable your short pass login access.</span>,\n      acceptLabel: 'Disable short pass',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(AppUIActions.disableShortLogin());\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    return (\n      <Form\n        className=\"user-connect-form\"\n        disabled={this.props.loading}\n        onSubmit={this.handleSubmit}\n      >\n        <h2 className=\"user-connect-title\">\n          Hello again {this.props.savedUsername}!\n        </h2>\n        <Input\n          label={`Shortpass${shortLoginActivationDate &&\n            ' (expires ' +\n              moment(shortLoginActivationDate)\n                .add(7, 'days')\n                .fromNow()})`}\n          name=\"shortpass\"\n          value={this.state.shortpass}\n          type=\"password\"\n          onChange={this.handleChange}\n          error={this.props.error}\n          autoFocus\n        />\n\n        <Button\n          type=\"button\"\n          buttonStyle=\"primary\"\n          disabled={this.props.loading || isEmpty(this.state.shortpass)}\n          onClick={this.handleSubmit}\n        >\n          Connect\n        </Button>\n\n        <a\n          className=\"user-connect-more\"\n          tabIndex={-1}\n          onClick={this.handleDisable}\n        >\n          Use another account\n        </a>\n      </Form>\n    );\n  }\n}\n\nexport default connect()(UserConnectShortPass);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\n\nimport UserConnectForm from './UserConnectForm';\nimport UserConnectShortPass from './UserConnectShortPass';\nimport moment from 'moment';\n\nclass UserConnect extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    errors: PropTypes.object,\n    status: PropTypes.shape({\n      message: PropTypes.string,\n      state: PropTypes.number,\n      total: PropTypes.number,\n    }),\n    dispatch: PropTypes.func,\n    showShortpass: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleSignup = this.toggleSignup.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      signup: false,\n      username: '',\n      password: '',\n    };\n  }\n\n  onSubmit(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.state.signup) {\n      this.props.dispatch(\n        AppUIActions.createUser({\n          username: this.state.username,\n          password: this.state.password,\n        })\n      );\n    } else {\n      this.props.dispatch(\n        AppUIActions.loginUser({\n          username: this.state.username,\n          password: this.state.password,\n          token: this.state.token,\n        })\n      );\n    }\n  }\n\n  toggleSignup({ checked }) {\n    this.setState({\n      signup: checked,\n    });\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { savedUsername, loading, errors, showShortpass } = this.props;\n    const shortLoginActivationDate = secretin.getShortLoginActivationDate();\n    const shortLoginExpired = shortLoginActivationDate\n      ? moment(shortLoginActivationDate)\n          .add(7, 'days')\n          .isBefore(moment())\n      : false;\n\n    return (\n      <div className=\"user-connect\">\n        {showShortpass && !shortLoginExpired ? (\n          <UserConnectShortPass\n            savedUsername={savedUsername}\n            loading={loading}\n            error={errors.shortlogin}\n          />\n        ) : (\n          <UserConnectForm\n            loading={loading}\n            savedUsername={savedUsername ? savedUsername : ''}\n            errors={{\n              ...errors,\n              ...(shortLoginActivationDate && shortLoginExpired\n                ? {\n                    shortLoginExpired: {\n                      message: `Your shortpass has expired `,\n                      info: `Previous shortpass will automatically reactivate for your account ${savedUsername} if you sign-in.`,\n                    },\n                  }\n                : {}),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { showShortpass, status } = state.AppUI;\n  return {\n    showShortpass,\n    status,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnect);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\n\nimport secretin from 'utils/secretin';\nimport Icon from 'components/utilities/Icon';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    `data:application/json;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nfunction SidebarMenuLink({ children, ...props }) {\n  return (\n    <li className=\"sidebar-menu-item\">\n      <NavLink\n        className=\"sidebar-menu-link\"\n        activeClassName=\"sidebar-menu-link--active\"\n        {...props}\n      >\n        {children}\n      </NavLink>\n    </li>\n  );\n}\nSidebarMenuLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n};\n\nfunction exportDb() {\n  secretin.exportDb().then(db => {\n    download(\n      `Secret-in_${secretin.currentUser.username}_${moment().format()}.json`,\n      db\n    );\n  });\n}\n\nfunction Sidebar() {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <Link to=\"/\" title={isOnline && secretin.api.db}>\n          <img\n            src=\"/logo.svg\"\n            style={{ width: '100%' }}\n            alt=\"logo\"\n            title={isOnline ? 'Secret-In.me' : 'Offline'}\n          ></img>\n        </Link>\n      </div>\n      <div className=\"sidebar-content\">\n        <ul className=\"sidebar-menu\">\n          <SidebarMenuLink to=\"/secrets/\" exact>\n            <Icon id=\"home\" size=\"base\" />\n            {currentUser.username}\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n\n          <SidebarMenuLink to=\"/secrets/all/\">\n            <Icon id=\"apps\" size=\"base\" />\n            All\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/mine\" exact>\n            <Icon id=\"user\" size=\"base\" />\n            My secrets\n          </SidebarMenuLink>\n          <SidebarMenuLink to=\"/secrets/shared\" exact>\n            <Icon id=\"people\" size=\"base\" />\n            Shared secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <SidebarMenuLink to=\"/settings/\">\n            <Icon id=\"gear\" size=\"base\" />\n            Settings\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a className=\"sidebar-menu-link\" onClick={exportDb}>\n              <Icon id=\"export\" size=\"base\" />\n              Export secrets\n            </a>\n          </li>\n          <SidebarMenuLink to=\"/import/\">\n            <Icon id=\"import\" size=\"base\" />\n            Import secrets\n          </SidebarMenuLink>\n          <div className=\"sidebar-separator\" />\n          <li className=\"sidebar-menu-item\">\n            <a\n              className=\"sidebar-menu-link\"\n              onClick={() => window.location.reload()}\n            >\n              <Icon id=\"logout\" size=\"base\" />\n              Log out\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import uuid from 'uuid';\n\nclass SecretFieldRecord {\n  constructor(raw = {}) {\n    this.id = raw.id || uuid.v4();\n    this.date = raw.date || null;\n    this.type = raw.type || 'text';\n    this.label = raw.label || '';\n    this.content = raw.content || '';\n  }\n\n  getRaw() {\n    const { id, date, type, label, content } = this;\n    return {\n      id,\n      date,\n      type,\n      label,\n      content,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = {\n      ...rawData,\n      content: rawData.content,\n    };\n    if (raw.value) delete raw.value;\n    return new SecretFieldRecord(raw);\n  }\n}\n\nexport default SecretFieldRecord;\n","import SecretFieldRecord from 'models/SecretFieldRecord';\n\nclass SecretDataRecord {\n  constructor(raw = {}) {\n    this.type = raw.type || 'default';\n    this.fields = raw.fields || [];\n  }\n\n  addNewField(params = {}) {\n    this.fields.push(new SecretFieldRecord(params).getRaw());\n    return this;\n  }\n\n  getRaw() {\n    const { type, fields } = this;\n    return {\n      type,\n      fields,\n    };\n  }\n\n  static createWithDefaultFields(defaultFields) {\n    return defaultFields.reduce((record, field) => {\n      return record.addNewField(field);\n    }, new SecretDataRecord());\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      switch (key) {\n        case 'fields':\n          return {\n            ...output,\n            fields: value.map(field =>\n              SecretFieldRecord.createFromRaw(field).getRaw()\n            ),\n          };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new SecretDataRecord(raw);\n  }\n}\n\nSecretDataRecord.DEFAULT_FIELDS = [\n  { label: 'login', type: 'text' },\n  { label: 'password', type: 'password' },\n  { label: 'url', type: 'url' },\n];\n\nexport default SecretDataRecord;\n","import uuid from 'uuid';\n\nexport const UserRights = [\n  0, // Read\n  1, // Read && Write\n  2, // Read, Write && Share\n];\n\nexport function userRightLabel(accessRights) {\n  switch (accessRights) {\n    case 0:\n      return 'Read only';\n    case 1:\n      return 'Read and write';\n    case 2:\n      return 'Read, write and share';\n    default:\n      throw new Error(`Unknown access rights \"${accessRights}\"`);\n  }\n}\n\nclass User {\n  constructor(raw = {}) {\n    this.id = raw.username || uuid.v4();\n    this.username = raw.username || '';\n    this.rights = raw.rights || 0;\n    this.folders = raw.folders || {};\n  }\n\n  isValid() {\n    return this.username.length > 0;\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const { id, username, rights, folders } = this;\n    return {\n      id,\n      username,\n      rights,\n      folders,\n    };\n  }\n\n  static createFromRaw(rawData) {\n    return new User(rawData);\n  }\n}\n\nexport default User;\n","import moment from 'moment';\n\nimport User from 'models/User';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nconst CAN_SHARE = 2;\nconst CAN_WRITE = 1;\nconst CAN_READ = 0;\n\nclass Secret {\n  constructor(raw = {}) {\n    this.id = raw.id || null;\n    this.type = raw.type || null;\n    this.title = raw.title || null;\n    this.lastModifiedBy = raw.lastModifiedBy || null;\n    this.lastModifiedAt = raw.lastModifiedAt || null;\n    this.users = raw.users || {};\n    this.data = raw.data || null;\n  }\n\n  getIcon() {\n    switch (this.type) {\n      case 'folder':\n        if (Object.keys(this.users) > 1) {\n          return 'folder-shared';\n        }\n        return 'folder';\n      case 'secret':\n        return 'description';\n      case 'windows':\n        return 'windows';\n      default:\n        return 'description';\n    }\n  }\n\n  accessRightForUser(user) {\n    return this.users.find(_user => _user.id === user.username)?.rights || 0;\n  }\n\n  canBeReadBy(user) {\n    return this.accessRightForUser(user) >= CAN_READ;\n  }\n\n  canBeUpdatedBy(user) {\n    return this.accessRightForUser(user) >= CAN_WRITE;\n  }\n\n  canBeSharedBy(user) {\n    return this.accessRightForUser(user) >= CAN_SHARE;\n  }\n\n  canBeDeleted() {\n    return this.type !== 'windows';\n  }\n\n  merge(fields) {\n    Object.entries(fields).forEach(([key, value]) => {\n      this[key] = value;\n    });\n    return this;\n  }\n\n  getRaw() {\n    const {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data,\n      users,\n    } = this;\n    return {\n      id,\n      type,\n      title,\n      lastModifiedBy,\n      lastModifiedAt,\n      data: data?.getRaw(),\n      users: users.map(user => user.getRaw()),\n    };\n  }\n\n  static createFromRaw(rawData) {\n    const raw = Object.entries(rawData).reduce((output, [key, value]) => {\n      if (!value) return output;\n      switch (key) {\n        case 'users':\n          return {\n            ...output,\n            users: Object.values(value).map(user => User.createFromRaw(user)),\n          };\n        case 'data':\n          return {\n            ...output,\n            data: SecretDataRecord.createFromRaw(value).getRaw(),\n          };\n        case 'lastModifiedAt':\n          return { ...output, lastModifiedAt: moment(value) };\n        default:\n          return output;\n      }\n    }, rawData);\n    return new Secret(raw);\n  }\n}\n\nexport default Secret;\n","import secretin, { Errors } from 'utils/secretin';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Secret from 'models/Secret';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nimport {\n  createSecretSuccess,\n  createSecretFailure,\n  loginUserProgress,\n  loginUserSuccess,\n  addSecretToFolderFailure,\n  removeSecretFromCurrentFolderFailure,\n} from 'slices/AppUISlice';\nimport {\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n} from 'slices/ShowSecretUISlice';\n\nconst { FriendNotFoundError } = Errors;\n\nconst buildSecrets = metadata => {\n  return metadata.map(secret => Secret.createFromRaw(secret));\n};\n\nconst getIndex = (state, secretId) =>\n  state.metadata.findIndex(secret => secret.id === secretId);\n\nconst getById = (state, secretId) =>\n  state.metadata.find(secret => secret.id === secretId);\n\n// Helper function reused in many actions\nconst _rebuildMetadata = (state, action) => {\n  const { metadata } = action.payload;\n  state.metadata = buildSecrets(Object.values(metadata));\n  const friendList = new Set();\n  Object.values(metadata).forEach(metadatum => {\n    Object.values(metadatum.users).forEach(user => {\n      friendList.add(user.username);\n    });\n  });\n  state.knownFriendList = Array.from(friendList).sort();\n};\n\nfunction getInitialState() {\n  return {\n    metadata: [],\n  };\n}\n\nexport const MetadataSlice = createSlice({\n  name: 'Metadata',\n  initialState: getInitialState(),\n  reducers: {\n    loadMetadataSuccess: _rebuildMetadata,\n    deleteSecretSuccess: _rebuildMetadata,\n    deleteSecretFailure: _rebuildMetadata,\n    addSecretToFolderSuccess: _rebuildMetadata,\n    removeSecretFromCurrentFolderSuccess: _rebuildMetadata,\n    createSecretUserRightsSuccess: _rebuildMetadata,\n    updateSecretSuccess: _rebuildMetadata,\n    renameSecretSuccess: _rebuildMetadata,\n\n    updateSecretUserRightsSuccess: (state, action) => {\n      const { secret, user, rights } = action.payload;\n      const secretMetadataIndex = getIndex(state, secret.id);\n      state.metadata[secretMetadataIndex].users = state.metadata[\n        secretMetadataIndex\n      ].users.map(userToUpdate => {\n        if (userToUpdate.id === user.id) {\n          return userToUpdate.merge({ rights });\n        }\n        return userToUpdate;\n      });\n    },\n\n    deleteSecretUserRightsSuccess: (state, action) => {\n      const { secret, user } = action.payload;\n      const secretMetadata = getById(state, secret.id);\n      secretMetadata.users = secretMetadata.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: _rebuildMetadata,\n    [loginUserSuccess]: _rebuildMetadata,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loadMetadataSuccess,\n  deleteSecretSuccess,\n  deleteSecretFailure,\n  addSecretToFolderSuccess,\n  removeSecretFromCurrentFolderSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretSuccess,\n  renameSecretSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} = MetadataSlice.actions;\n\nexport const loadMetadata = () => dispatch => {\n  console.time('refresh');\n  secretin\n    .refreshUser(true, (...args) => dispatch(loginUserProgress(...args)))\n    .then(() => {\n      console.timeEnd('refresh');\n      dispatch(\n        loadMetadataSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    });\n};\n\nexport const createSecret = (\n  { title, data, folder, isFolder } = { isFolder: false }\n) => dispatch => {\n  let promise;\n  if (isFolder) {\n    if (folder) {\n      promise = secretin.addFolder(title, folder);\n    } else {\n      promise = secretin.addFolder(title);\n    }\n  } else if (folder) {\n    promise = secretin.addSecret(title, data, folder);\n  } else {\n    promise = secretin.addSecret(title, data);\n  }\n\n  return promise\n    .then(() =>\n      dispatch(\n        createSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(createSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const updateSecret = ({ secret, data }) => async dispatch => {\n  dispatch(updateSecretStart());\n  try {\n    const payload = { data };\n    await secretin.editSecret(secret.id, data);\n    try {\n      payload.history = await secretin.getHistory(secret.id);\n    } catch (err) {\n      payload.history = [];\n      console.log(err);\n    }\n    dispatch(\n      updateSecretSuccess({\n        ...payload,\n        metadata: secretin.currentUser.metadatas,\n      })\n    );\n  } catch (error) {\n    dispatch(updateSecretFailure({ error }));\n    throw error;\n  }\n};\n\nexport const renameSecret = ({ secret, newTitle }) => dispatch => {\n  return secretin\n    .renameSecret(secret.id, newTitle)\n    .then(() => {\n      dispatch(\n        renameSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n    })\n    .catch(error => {\n      dispatch(updateSecretFailure({ error }));\n      throw error;\n    });\n};\n\nexport const deleteSecret = ({ secret }) => dispatch => {\n  return secretin\n    .deleteSecret(secret.id)\n    .catch(error => {\n      dispatch(\n        deleteSecretFailure({\n          metadata: secretin.currentUser.metadatas,\n        })\n      );\n      throw error;\n    })\n    .then(() =>\n      dispatch(\n        deleteSecretSuccess({\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    );\n};\n\nexport const createSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() => {\n      dispatch(\n        createSecretUserRightsSuccess({\n          metadata: secretin.currentUser.metadatas,\n          user,\n          rights,\n        })\n      );\n    })\n    .catch(error => {\n      if (error instanceof FriendNotFoundError) {\n        return dispatch(\n          createSecretUserRightsFailure({\n            error: { username: 'User not found' },\n          })\n        );\n      }\n      dispatch(\n        createSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const updateSecretUserRights = ({\n  secret,\n  user,\n  rights,\n}) => dispatch => {\n  return secretin\n    .shareSecret(secret.id, user.username, rights)\n    .then(() =>\n      dispatch(updateSecretUserRightsSuccess({ secret, user, rights }))\n    )\n    .catch(error => {\n      dispatch(\n        updateSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const deleteSecretUserRights = ({ secret, user }) => dispatch => {\n  return secretin\n    .unshareSecret(secret.id, user.username)\n    .then(() => dispatch(deleteSecretUserRightsSuccess({ secret, user })))\n    .catch(error => {\n      dispatch(\n        deleteSecretUserRightsFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const addSecretToFolder = ({ secret, folder }) => dispatch => {\n  return secretin\n    .addSecretToFolder(secret.id, folder.id)\n    .then(() =>\n      dispatch(\n        addSecretToFolderSuccess({\n          secret,\n          folder,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        addSecretToFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport const removeSecretFromCurrentFolder = ({\n  secret,\n  currentFolderId,\n}) => dispatch => {\n  return secretin\n    .removeSecretFromFolder(secret.id, currentFolderId)\n    .then(() =>\n      dispatch(\n        removeSecretFromCurrentFolderSuccess({\n          secret,\n          currentFolderId,\n          metadata: secretin.currentUser.metadatas,\n        })\n      )\n    )\n    .catch(error => {\n      dispatch(\n        removeSecretFromCurrentFolderFailure({\n          error: { unknown: 'Unknown error' },\n        })\n      );\n      throw error;\n    });\n};\n\nexport default MetadataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport SecretDataRecord from 'models/SecretDataRecord';\nimport Secret from 'models/Secret';\nimport User from 'models/User';\nimport {\n  updateSecretSuccess,\n  createSecretUserRightsSuccess,\n  updateSecretUserRightsSuccess,\n  deleteSecretUserRightsSuccess,\n} from 'slices/MetadataSlice';\n\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  secret: null,\n  errors: {},\n  tab: 'details',\n  isUpdating: false,\n  historyDepth: 0,\n});\n\nconst _handleError = (state, action) => {\n  const { error } = action.payload;\n  state.errors = error;\n  state.isUpdating = false;\n};\n\nexport const ShowSecretUISlice = createSlice({\n  name: 'ShowSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      state.secret = secret;\n      state.tab = tab || 'details';\n      state.errors = {};\n    },\n    showSecretSuccess: (state, action) => {\n      const { secret } = action.payload;\n      state.secret = secret;\n      state.errors = {};\n    },\n    hideModal: (state, action) => {\n      state.secret = null;\n      state.errors = {};\n      state.historyDepth = 0;\n    },\n    changeTab: (state, action) => {\n      const { tab } = action.payload;\n      state.tab = tab;\n    },\n    updateSecretStart: (state, action) => {\n      state.isUpdating = true;\n      state.errors = {};\n    },\n    historyShowOlder: state => {\n      if (state.historyDepth + 1 < state.secret.history.length)\n        state.historyDepth += 1;\n    },\n    historyShowNewer: state => {\n      if (state.historyDepth - 1 >= 0) state.historyDepth -= 1;\n    },\n    updateSecretFailure: _handleError,\n    createSecretUserRightsFailure: _handleError,\n    updateSecretUserRightsFailure: _handleError,\n    deleteSecretUserRightsFailure: _handleError,\n  },\n  extraReducers: {\n    [updateSecretSuccess]: (state, action) => {\n      const { metadata, history } = action.payload;\n      const secretMetadata = metadata[state.secret.id];\n      // The metadata coming back from Secretin has flat user objects indexed by id\n      // Recreate the array of User instances\n      secretMetadata.users = Object.values(secretMetadata.users).map(rawUser =>\n        User.createFromRaw(rawUser)\n      );\n      state.secret = state.secret.merge(metadata[state.secret.id]);\n      state.secret.history = history;\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [createSecretUserRightsSuccess]: (state, action) => {\n      const { user, rights } = action.payload;\n      state.secret.users.push(user.merge({ rights }));\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [updateSecretUserRightsSuccess]: (state, action) => {\n      const { rights, user } = action.payload;\n      state.secret.users = state.secret.users.map(_user => {\n        if (_user.id === user.id) return _user.merge({ rights });\n        return _user;\n      });\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [deleteSecretUserRightsSuccess]: (state, action) => {\n      const { user } = action.payload;\n      state.secret.users = state.secret.users.filter(\n        userToFilter => userToFilter.id !== user.id\n      );\n      state.isUpdating = false;\n      state.errors = {};\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  showSecretSuccess,\n  hideModal,\n  changeTab,\n  updateSecretStart,\n  updateSecretFailure,\n  createSecretUserRightsFailure,\n  updateSecretUserRightsFailure,\n  deleteSecretUserRightsFailure,\n  historyShowOlder,\n  historyShowNewer,\n} = ShowSecretUISlice.actions;\n\nexport const showSecret = ({ secret, tab }) => async dispatch => {\n  dispatch(showModal({ secret, tab }));\n  if (secret.type === 'folder') {\n    dispatch(showSecretSuccess({ secret }));\n  } else {\n    const data = await secretin.getSecret(secret.id);\n    const raw = !data.fields ? { fields: data } : data;\n    const secretWithData = Secret.createFromRaw(secret.getRaw());\n    secretWithData.data = SecretDataRecord.createFromRaw(raw).getRaw();\n    try {\n      secretWithData.history = await secretin.getHistory(secret.id);\n    } catch (error) {\n      console.log(error);\n      secretWithData.history = [];\n    }\n    dispatch(\n      showSecretSuccess({\n        secret: secretWithData,\n      })\n    );\n  }\n};\n\nexport default ShowSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { showSecretSuccess } from 'slices/ShowSecretUISlice';\nimport { hideModal } from 'slices/ShowSecretUISlice';\nimport { updateSecretSuccess } from 'slices/MetadataSlice';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nfunction getInitialState() {\n  return {\n    isEditing: false,\n    data: null,\n  };\n}\n\nexport const EditSecretUISlice = createSlice({\n  name: 'EditSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    updateData: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.data;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      state.isEditing = true;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [showSecretSuccess]: (state, action) => {\n      state.isEditing = false;\n      state.data = action.payload.secret.data;\n    },\n    [hideModal]: state => {\n      state.isEditing = false;\n      state.data = null;\n    },\n    [updateSecretSuccess]: state => {\n      state.isEditing = false;\n    },\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateData, changeField } = EditSecretUISlice.actions;\n\nexport default EditSecretUISlice.reducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\nimport { Utils } from 'secretin';\n\nimport Input from 'components/utilities/Input';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nclass SecretField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n    isNew: PropTypes.bool,\n    canUpdate: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onCopy = this.onCopy.bind(this);\n    this.onGenerate = this.onGenerate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onCopy() {\n    copyToClipboard(this.props.field.content, { debug: true });\n  }\n\n  onGenerate() {\n    this.handleChange({ value: '' });\n    setTimeout(() => {\n      this.handleChange({\n        value: Utils.PasswordGenerator.generatePassword(),\n      });\n    }, 100);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    const actions = [];\n    if (!this.props.isNew) {\n      if (this.props.field.type === 'url') {\n        actions.push(\n          <a\n            key=\"open\"\n            href={this.props.field.content}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            tabIndex=\"-1\"\n          >\n            Open\n          </a>\n        );\n      }\n    }\n\n    actions.push(\n      <a key=\"copy\" onClick={this.onCopy} tabIndex=\"-1\">\n        Copy\n      </a>\n    );\n\n    return (\n      <div className=\"secret-field\">\n        <Input\n          ref={ref => {\n            this.input = ref;\n          }}\n          label={this.props.field.label}\n          name={this.props.field.label}\n          value={this.props.field.content}\n          onChange={this.handleChange}\n          type={this.props.field.type}\n          readOnly={!this.props.canUpdate}\n          actions={actions}\n        />\n        <div className=\"secret-field-action\">\n          {this.props.field.type === 'password' && this.props.canUpdate && (\n            <Button\n              title=\"Generate password\"\n              buttonStyle=\"icon\"\n              onClick={this.onGenerate}\n              tabIndex=\"-1\"\n            >\n              <Icon id=\"generate\" size=\"small\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecretField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretField from 'components/secrets/SecretField';\n\nclass SecretFields extends Component {\n  static propTypes = {\n    fields: PropTypes.array,\n    isNew: PropTypes.bool,\n    onChange: PropTypes.func,\n    canUpdate: PropTypes.bool,\n  };\n\n  render() {\n    if (!this.props.fields) {\n      return false;\n    }\n\n    return (\n      <div className=\"secret-fields\">\n        {this.props.fields.map(field => (\n          <SecretField\n            key={field.id}\n            field={field}\n            onChange={this.props.onChange}\n            isNew={this.props.isNew}\n            canUpdate={this.props.canUpdate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SecretFields;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as EditSecretUIActions from 'slices/EditSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\n\nclass SecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    return (\n      <div className=\"secret-edit\">\n        <SecretFields\n          fields={this.props.data.fields}\n          onChange={\n            this.props.canUpdate ? this.props.actions.changeField : () => {}\n          }\n          canUpdate={this.props.canUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(EditSecretUIActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  const data = ownProps.data || state.EditSecretUI.data;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretEdit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SecretEditableTitle extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    canUpdate: PropTypes.bool,\n    isUpdating: PropTypes.bool,\n    onSubmit: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.title,\n    };\n  }\n\n  handleSubmit = () => this.props.onSubmit(this.state.title);\n\n  handleKeyDown = ({ key, target }) => {\n    if (key === 'Enter') {\n      target.blur();\n    }\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { canUpdate, isUpdating } = this.props;\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"secret-editable-title\"\n        type=\"text\"\n        value={title}\n        onBlur={this.handleSubmit}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        readOnly={!canUpdate || isUpdating}\n        size={title.length + 1}\n      />\n    );\n  }\n}\n\nexport default SecretEditableTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretEditableTitle from 'components/secrets/SecretEditableTitle';\nimport Icon from 'components/utilities/Icon';\n\nexport const SecretShowHeader = ({\n  icon,\n  title,\n  canEditTitle,\n  isUpdating,\n  onEditTitle,\n}) => {\n  return (\n    <div>\n      <Icon id={icon} size=\"small\" />\n      <SecretEditableTitle\n        title={title}\n        canUpdate={canEditTitle}\n        isUpdating={isUpdating}\n        onSubmit={newTitle => {\n          if (newTitle !== title) {\n            onEditTitle(newTitle);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nSecretShowHeader.propTypes = {\n  canEditTitle: PropTypes.bool,\n  title: PropTypes.string,\n  icon: PropTypes.string,\n  isUpdating: PropTypes.bool,\n  onEditTitle: PropTypes.func,\n};\n\nexport default SecretShowHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst SecretHistoryButton = ({ side, disabled, onClick }) => {\n  return (\n    <div className=\"secret-history-button\">\n      <Button\n        title={side}\n        buttonStyle=\"icon\"\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <Icon id={side} />\n      </Button>\n    </div>\n  );\n};\n\nSecretHistoryButton.propTypes = {\n  disabled: PropTypes.bool,\n  side: PropTypes.oneOf('previous', 'next'),\n  onClick: PropTypes.func,\n};\n\nexport default SecretHistoryButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport SecretHistoryButton from 'components/secrets/SecretHistoryButton';\nimport SecretEdit from 'components/secrets/SecretEdit';\n\nclass SecretHistory extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    historyDepth: PropTypes.number,\n    historyCount: PropTypes.number,\n    modifiedAt: PropTypes.string,\n    isLatest: PropTypes.bool,\n    isOldest: PropTypes.bool,\n    dispatch: PropTypes.func,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const {\n      historyDepth,\n      historyCount,\n      modifiedAt,\n      isLatest,\n      isOldest,\n      data,\n    } = this.props;\n    const { historyShowOlder, historyShowNewer } = this.props.actions;\n    const color = isLatest ? '#1abc9c' : '#afafaf';\n    return (\n      <div className=\"secret-history\">\n        <div\n          className=\"secret-history-header\"\n          style={{\n            backgroundColor: color,\n            borderColor: color,\n          }}\n        >\n          <div className=\"secret-history-navigation\">\n            <SecretHistoryButton\n              disabled={historyDepth >= historyCount - 1}\n              side=\"previous\"\n              onClick={historyShowOlder}\n            />\n            <SecretHistoryButton\n              disabled={historyDepth <= 0}\n              side=\"next\"\n              onClick={historyShowNewer}\n            />\n          </div>\n          <span\n            style={{ color: 'white', fontWeight: '600' }}\n            title={moment(modifiedAt).format('MMM Do, YYYY HH:mm')}\n          >\n            {isLatest && '(latest)'}\n            {isOldest && '(oldest)'} {moment(modifiedAt).fromNow()}\n          </span>\n        </div>\n        <div className=\"secret-history-fields\">\n          <SecretEdit isUpdating={false} canUpdate={false} data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { secret, historyDepth } = state.ShowSecretUI;\n  return {\n    data: secret?.history[historyDepth]?.secret,\n    modifiedAt: secret?.history[historyDepth]?.lastModifiedAt,\n    historyCount: secret?.history.length,\n    historyDepth,\n    isLatest: historyDepth === 0,\n    isOldest: historyDepth + 1 >= secret?.history.length,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ShowSecretUIActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretHistory);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId, noop } from 'lodash';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nclass Select extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.string,\n    actions: PropTypes.array,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    size: 'base',\n    onChange: noop,\n    actions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.id = uniqueId('input_');\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange({\n      name: this.props.name,\n      value: target.value,\n    });\n  };\n\n  getValue = () => this.select.value;\n\n  render() {\n    const className = classNames(\n      'input',\n      'input--type-select',\n      `input--size-${this.props.size}`\n    );\n\n    return (\n      <div className={className}>\n        {this.props.label && (\n          <label htmlFor={this.id}>\n            {this.props.label}\n            {this.props.actions.length > 0 && (\n              <span className=\"input-label-actions\">{this.props.actions}</span>\n            )}\n          </label>\n        )}\n        <div className=\"input--type-select--input\">\n          <select\n            ref={ref => {\n              this.select = ref;\n            }}\n            value={this.props.value}\n            disabled={this.props.disabled}\n            title={this.props.title}\n            onChange={this.onChange}\n          >\n            {this.props.options.map(option => (\n              <option key={option[0]} value={option[0]}>\n                {option[1]}\n              </option>\n            ))}\n          </select>\n          <Icon id=\"arrow-down\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport copyToClipboard from 'copy-to-clipboard';\n\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\n\nclass WindowsSecretEdit extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    canUpdate: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    copyToClipboard(this.select.getValue(), { debug: true });\n  };\n\n  render() {\n    if (!this.props.data) {\n      return <pre>Loading...</pre>;\n    }\n\n    const options = this.props.data.fields\n      // TODO : figure out sorting\n      // .sortBy(password => password.date)\n      .reverse()\n      .map(password => [\n        password.content,\n        moment(password.date).format('dddd DD MMMM YYYY'),\n      ]);\n\n    return (\n      <div className=\"secret-edit\">\n        <div className=\"secret-field\">\n          <Select\n            label=\"Passwords\"\n            ref={ref => {\n              this.select = ref;\n            }}\n            options={options}\n          />\n          <Button onClick={this.handleClick}>Copy</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { data } = state.EditSecretUI;\n  return {\n    data,\n  };\n};\n\nexport default connect(mapStateToProps)(WindowsSecretEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport User from 'models/User';\n\nconst COLORS = [\n  'emerland',\n  'nephritis',\n  'belize-hole',\n  'wisteria',\n  'midnight-blue',\n  'sun-flower',\n  'pumpkin',\n  'pomegranate',\n  'silver',\n  'asbestos',\n];\n\nfunction getInitials(fullName) {\n  const names = fullName.split(' ');\n\n  if (names.length > 1) {\n    return `${names[0][0]}${names[1][0]}`.toUpperCase();\n  }\n\n  return fullName.substring(0, 2).toUpperCase();\n}\n\nfunction getAvatarColor(fullName) {\n  const colorIndex = fullName\n    .split('')\n    .reduce((sum, letter) => sum + letter.charCodeAt(), 0);\n  return COLORS[colorIndex % COLORS.length];\n}\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  size: PropTypes.oneOf(['base', 'large']),\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatar({ user, size }) {\n  const color = getAvatarColor(user.username);\n  const className = classNames(\n    'user-avatar',\n    `user-avatar--color-${color}`,\n    `user-avatar--size-${size}`\n  );\n\n  return (\n    <div className={className} title={user.username}>\n      {getInitials(user.username)}\n    </div>\n  );\n}\nUserAvatar.propTypes = propTypes;\nUserAvatar.defaultProps = defaultProps;\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User, { UserRights, userRightLabel } from 'models/User';\nimport UserAvatar from 'components/users/UserAvatar';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  user: PropTypes.instanceOf(User),\n  disabled: PropTypes.bool,\n  disabledReason: PropTypes.string,\n  onChangeUserRights: PropTypes.func.isRequired,\n  onRemoveUserRights: PropTypes.func.isRequired,\n};\n\nfunction SecretUserListItem(props) {\n  const {\n    user,\n    disabled,\n    disabledReason,\n    onChangeUserRights,\n    onRemoveUserRights,\n  } = props;\n\n  return (\n    <div className=\"secret-users-list-item\">\n      <div className=\"secret-users-list-item-infos\">\n        <UserAvatar user={user} size=\"large\" />\n        {user.username}\n      </div>\n\n      <div className=\"secret-users-list-item-actions\">\n        <Select\n          value={user.rights}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n          size=\"small\"\n          disabled={disabled}\n          title={disabledReason}\n          onChange={({ value }) => onChangeUserRights(user, value)}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={() => onRemoveUserRights(user)}\n          disabled={disabled}\n          title={disabledReason}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"close\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nSecretUserListItem.propTypes = propTypes;\n\nexport default SecretUserListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\nimport User, { UserRights, userRightLabel } from 'models/User';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Input from 'components/utilities/Input';\nimport Select from 'components/utilities/Select';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretUserListNew extends Component {\n  static propTypes = {\n    knownFriendList: PropTypes.array,\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      user: new User(),\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      user: this.state.user.merge({ [name]: value }),\n    });\n  }\n\n  handleSubmit() {\n    const { secret } = this.props;\n    const { user } = this.state;\n    const accessRights = [\n      'read access',\n      'read and write access',\n      'read, write and share access',\n    ];\n\n    const rights = accessRights[user.rights];\n    const to = user.username;\n    const on = secret.title;\n\n    confirm({\n      title: 'Are you sure?',\n      text: (\n        <span>\n          You are about to give <b>{rights}</b> to <b>{to}</b> on <b>{on}</b>.\n        </span>\n      ),\n      acceptLabel: 'Share the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () => {\n        this.props.dispatch(\n          MetadataActions.createSecretUserRights({\n            secret: this.props.secret,\n            user: this.state.user,\n            rights: this.state.user.rights,\n          })\n        );\n        this.setState({\n          user: new User(),\n        });\n      },\n      onCancel: () => ({}),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"secret-users-list-new\">\n        <Input\n          name=\"username\"\n          placeholder=\"User name...\"\n          value={this.state.user.username}\n          size=\"small\"\n          onChange={this.handleChange}\n          autoCompleteFromList={this.props.knownFriendList}\n          error={this.props.errors.username}\n        />\n        <Select\n          name=\"rights\"\n          value={this.state.user.rights}\n          size=\"small\"\n          onChange={this.handleChange}\n          options={UserRights.map(rights => [rights, userRightLabel(rights)])}\n        />\n        <Button\n          buttonStyle=\"icon\"\n          onClick={this.handleSubmit}\n          disabled={!this.state.user.isValid()}\n          size=\"small\"\n          iconOnly\n        >\n          <Icon id=\"add\" />\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { knownFriendList } = state.Metadata;\n  return {\n    knownFriendList,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserListNew);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Secret from 'models/Secret';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport SecretUserListItem from './SecretUserListItem';\nimport SecretUserListNew from './SecretUserListNew';\n\nfunction getDisabledReason(cantShare, isCurrentUser) {\n  if (cantShare) {\n    return \"You don't have the permission to share this secret\";\n  } else if (isCurrentUser) {\n    return \"You can't modify or remove yourself\";\n  }\n  return null;\n}\n\nclass SecretUserList extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    isUpdating: PropTypes.bool,\n    isOnline: PropTypes.bool,\n    currentUser: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUserRights = this.onChangeUserRights.bind(this);\n    this.onRemoveUserRights = this.onRemoveUserRights.bind(this);\n  }\n\n  onChangeUserRights(user, rights) {\n    this.props.dispatch(\n      MetadataActions.updateSecretUserRights({\n        secret: this.props.secret,\n        user,\n        rights,\n      })\n    );\n  }\n\n  onRemoveUserRights(user) {\n    this.props.dispatch(\n      MetadataActions.deleteSecretUserRights({\n        secret: this.props.secret,\n        user,\n      })\n    );\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    const canShare =\n      this.props.secret.canBeSharedBy(currentUser) && this.props.isOnline;\n    return (\n      <div className=\"secret-users\">\n        <div className=\"secret-users-list\">\n          {this.props.secret.users.map(user => (\n            <SecretUserListItem\n              key={user.id}\n              user={user}\n              disabled={\n                !canShare ||\n                currentUser.username === user.id ||\n                this.props.isUpdating\n              }\n              disabledReason={getDisabledReason(\n                !canShare,\n                currentUser.username === user.id\n              )}\n              onChangeUserRights={this.onChangeUserRights}\n              onRemoveUserRights={this.onRemoveUserRights}\n            />\n          ))}\n        </div>\n        {canShare && (\n          <SecretUserListNew\n            secret={this.props.secret}\n            errors={this.props.errors}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser, online } = state.AppUI;\n  return {\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretUserList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['info']),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nfunction Flash({ type, children }) {\n  const className = classNames('flash', `flash--type-${type}`);\n\n  return (\n    <div className={className}>\n      <div className=\"flash-icon\">\n        <Icon id={type} size=\"small\" />\n      </div>\n      <div className=\"flash-content\">{children}</div>\n    </div>\n  );\n}\nFlash.propTypes = propTypes;\nFlash.defaultProps = defaultProps;\n\nexport default Flash;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BootstrapTabs from 'react-bootstrap/lib/Tabs';\nimport BootstrapTab from 'react-bootstrap/lib/Tab';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nconst Tabs = props => (\n  <BootstrapTabs className=\"tabs\" animation={false} {...props}>\n    {props.children}\n  </BootstrapTabs>\n);\nTabs.propTypes = propTypes;\n\nconst Tab = BootstrapTab;\n\nexport { Tabs, Tab };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Secret from 'models/Secret';\n\nimport SecretEdit from 'components/secrets/SecretEdit';\nimport SecretShowHeader from 'components/secrets/SecretShowHeader';\nimport SecretHistory from 'components/secrets/SecretHistory';\nimport WindowsSecretEdit from 'components/secrets/WindowsSecretEdit';\nimport SecretUserList from 'components/secrets/SecretUserList';\nimport Modal from 'components/utilities/Modal';\nimport Flash from 'components/utilities/Flash';\nimport Button from 'components/utilities/Button';\nimport { Tabs, Tab } from 'components/utilities/Tabs';\n\nclass SecretShow extends Component {\n  static propTypes = {\n    secret: PropTypes.instanceOf(Secret),\n    errors: PropTypes.object,\n    shown: PropTypes.bool,\n    tab: PropTypes.string,\n    isUpdating: PropTypes.bool,\n    isMetadataUpdating: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    data: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    showSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChangeTab(tab) {\n    this.props.showSecretActions.changeTab({ tab });\n  }\n\n  handleClick() {\n    this.props.metadataActions.updateSecret({\n      secret: this.props.secret,\n      data: this.props.data,\n    });\n  }\n\n  render() {\n    if (!this.props.secret) {\n      return false;\n    }\n\n    const { username: currentUserId } = this.props.currentUser;\n    const users = this.props.secret.users.filter(\n      user => user.id !== currentUserId\n    );\n\n    const canUpdate =\n      this.props.secret.canBeUpdatedBy(this.props.currentUser) &&\n      (this.props.isOnline || users.length === 0);\n\n    return (\n      <Modal\n        show={this.props.shown}\n        closeOnBackdropClick={!this.props.isEditing}\n        onClose={this.props.showSecretActions.hideModal}\n      >\n        <Modal.Header>\n          <SecretShowHeader\n            icon={this.props.secret.getIcon()}\n            title={this.props.secret.title}\n            canEditTitle={canUpdate}\n            isUpdating={this.props.isUpdating}\n            onEditTitle={newTitle => {\n              setTimeout(() => {\n                this.props.metadataActions.renameSecret({\n                  secret: this.props.secret,\n                  newTitle,\n                });\n              });\n            }}\n          />\n        </Modal.Header>\n\n        <Modal.Body>\n          {this.props.secret.type === 'windows' && (\n            <Flash type=\"info\">\n              This secret is used for your Windows domain authentication. It\n              cannot be deleted.\n            </Flash>\n          )}\n          <Tabs\n            id=\"secret-tabs\"\n            activeKey={this.props.tab}\n            onSelect={this.handleChangeTab}\n          >\n            {this.props.secret.type !== 'folder' && (\n              <Tab eventKey=\"details\" title=\"Details\">\n                {this.props.secret.type === 'windows' ? (\n                  <WindowsSecretEdit isUpdating={this.props.isUpdating} />\n                ) : (\n                  <SecretEdit\n                    isUpdating={this.props.isUpdating}\n                    canUpdate={canUpdate}\n                    data={this.props.secret.fields}\n                  />\n                )}\n              </Tab>\n            )}\n\n            {this.props.secret.type !== 'windows' && (\n              <Tab eventKey=\"access\" title=\"Who has access\">\n                <SecretUserList\n                  isUpdating={this.props.isUpdating}\n                  errors={this.props.errors}\n                  secret={this.props.secret}\n                />\n              </Tab>\n            )}\n\n            {this.props.secret?.history?.length > 1 && (\n              <Tab eventKey=\"history\" title=\"History\">\n                <SecretHistory />\n              </Tab>\n            )}\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.showSecretActions.hideModal}\n            disabled={this.props.isUpdating}\n          >\n            {this.props.isEditing ? 'Cancel' : 'Close'}\n          </Button>\n          {this.props.isEditing && (\n            <Button\n              type=\"submit\"\n              buttonStyle=\"primary\"\n              onClick={this.handleClick}\n              disabled={this.props.isUpdating}\n            >\n              Save\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSecretActions: bindActionCreators(ShowSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { secret, errors, tab, isUpdating } = state.ShowSecretUI;\n  const { isEditing, data } = state.EditSecretUI;\n  const { currentUser, online } = state.AppUI;\n  return {\n    secret,\n    shown: !!secret,\n    errors,\n    tab,\n    isUpdating,\n    isEditing,\n    data,\n    currentUser,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretShow);\n","import { createSlice } from '@reduxjs/toolkit';\nimport SecretDataRecord from 'models/SecretDataRecord';\n\nimport { createSecretSuccess, disconnectUserSuccess } from 'slices/AppUISlice';\nimport secretin from 'utils/secretin';\nimport { Utils } from 'secretin';\n\nconst getInitialState = () => ({\n  shown: false,\n  folder: null,\n  isFolder: false,\n  title: '',\n  data: SecretDataRecord.createWithDefaultFields(\n    SecretDataRecord.DEFAULT_FIELDS\n  ).getRaw(),\n});\n\nexport const NewSecretUISlice = createSlice({\n  name: 'NewSecretUI',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { folder, isFolder } = action.payload;\n      state.shown = true;\n      state.title = `Untitled ${isFolder ? 'folder' : 'secret'}`;\n      state.folder = folder;\n      state.isFolder = isFolder;\n      const loginIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'login'\n      );\n      const passwordIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.label === 'password'\n      );\n      state.data.fields[loginIndex].content =\n        secretin.currentUser.options?.defaultUsername ?? '';\n      state.data.fields[\n        passwordIndex\n      ].content = Utils.PasswordGenerator.generatePassword();\n    },\n    hideModal: () => getInitialState(),\n    changeTitle: (state, action) => {\n      const { value } = action.payload;\n      state.title = value;\n    },\n    changeField: (state, action) => {\n      const { field, value } = action.payload;\n      const fieldIndex = state.data.fields.findIndex(\n        fieldToUpdate => fieldToUpdate.id === field.id\n      );\n      state.data.fields[fieldIndex].content = value;\n    },\n  },\n  extraReducers: {\n    [createSecretSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  hideModal,\n  changeTitle,\n  changeField,\n} = NewSecretUISlice.actions;\n\nexport default NewSecretUISlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport secretin from 'utils/secretin';\nimport uuid from 'uuid';\n\nimport {\n  loginUserSuccess,\n  createUserSuccess,\n  disconnectUserSuccess,\n} from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  options: {},\n  errors: {},\n  showQRCode: false,\n  showShortLogin: false,\n  showRescueCodes: false,\n  newPass: {\n    shown: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n    loading: false,\n    status: 'initial', // 3 possible states : initial, success, failure\n  },\n  rescueCodes: [],\n  loading: false,\n});\n\nexport const OptionsSlice = createSlice({\n  name: 'Options',\n  initialState: getInitialState(),\n  reducers: {\n    _activateTotp: (state, action) => {\n      state.loading = true;\n    },\n\n    _activateShortLogin: (state, action) => {\n      state.loading = true;\n    },\n\n    _toggleTotp: (state, action) => {\n      const { checked } = action.payload;\n      state.showQRCode = checked;\n    },\n\n    _toggleShortLogin: (state, action) => {\n      const { checked } = action.payload;\n      state.showShortLogin = checked;\n    },\n\n    activateTotpFailure: (state, action) => {\n      const { error } = action.payload;\n      state.errors.totp = error;\n      state.loading = false;\n    },\n\n    hideQRCode: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    hideShortLogin: (state, action) => {\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n    },\n\n    activateTotpSuccess: (state, action) => {\n      state.showQRCode = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.totp = true;\n    },\n\n    deactivateTotpSuccess: (state, action) => {\n      state.options.totp = false;\n    },\n\n    deactivateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.options.shortLogin = shortLogin;\n    },\n\n    activateShortLoginSuccess: (state, action) => {\n      const { shortLogin } = action.payload;\n      state.showShortLogin = false;\n      state.loading = false;\n      state.errors = {};\n      state.options.shortLogin = shortLogin;\n    },\n\n    changeDelaySuccess: (state, action) => {\n      const { timeToClose } = action.payload;\n      state.options.timeToClose = timeToClose;\n    },\n\n    changeDefaultUsernameSuccess: (state, action) => {\n      const { defaultUsername } = action.payload;\n      state.options.defaultUsername = defaultUsername;\n    },\n\n    changeNewPass1: (state, action) => {\n      const newPass1 = action.payload;\n      state.newPass.newPass1 = newPass1.value;\n    },\n\n    changeNewPass2: (state, action) => {\n      const newPass2 = action.payload;\n      state.newPass.newPass2 = newPass2.value;\n    },\n\n    showChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = true;\n    },\n\n    hideChangePassword: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.shown = false;\n    },\n\n    _changePassword: (state, action) => {\n      state.newPass.loading = true;\n      state.newPass.error = '';\n    },\n\n    changePasswordSuccess: (state, action) => {\n      state.newPass.newPass1 = '';\n      state.newPass.newPass2 = '';\n      state.newPass.error = '';\n      state.newPass.loading = false;\n      state.newPass.status = 'success';\n    },\n\n    changePasswordFailure: (state, action) => {\n      state.newPass.error = 'Password change failed';\n      state.newPass.loading = false;\n      state.newPass.status = 'failure';\n    },\n\n    showRescueCodesSuccess: (state, action) => {\n      const { rescueCodes } = action.payload;\n      state.rescueCodes = rescueCodes;\n      state.showRescueCodes = true;\n    },\n\n    hideRescueCodes: (state, action) => {\n      state.rescueCodes = [];\n      state.showRescueCodes = false;\n    },\n  },\n  extraReducers: {\n    [loginUserSuccess]: (state, action) => {\n      const { options } = action.payload;\n      state.options = options;\n    },\n    [createUserSuccess]: getInitialState,\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  _activateTotp,\n  _activateShortLogin,\n  _toggleTotp,\n  _toggleShortLogin,\n  activateTotpFailure,\n  activateTotpSuccess,\n  hideQRCode,\n  hideShortLogin,\n  deactivateTotpSuccess,\n  deactivateShortLoginSuccess,\n  activateShortLoginSuccess,\n  changeDelaySuccess,\n  changeDefaultUsernameSuccess,\n  changeNewPass1,\n  changeNewPass2,\n  showChangePassword,\n  hideChangePassword,\n  _changePassword,\n  changePasswordSuccess,\n  changePasswordFailure,\n  showRescueCodesSuccess,\n  hideRescueCodes,\n} = OptionsSlice.actions;\n\nexport const deactivateTotp = () => (dispatch, getState) =>\n  secretin\n    .deactivateTotp()\n    .then(() => dispatch(deactivateTotpSuccess()))\n    .catch(() => {\n      // dispatch(deactivateTotpFailure());\n    });\n\nexport const activateTotp = ({ seed, token }) => (dispatch, getState) => {\n  dispatch(_activateTotp());\n  return secretin.api\n    .testTotp(seed.b32, token)\n    .then(() => secretin.activateTotp(seed))\n    .then(() => dispatch(activateTotpSuccess()))\n    .catch(err => {\n      if (err === 'Invalid couple') {\n        dispatch(activateTotpFailure({ error: 'Synchronisation error' }));\n      } else {\n        dispatch(activateTotpFailure({ error: 'An error occured' }));\n      }\n    });\n};\n\nexport const activateShortLogin = ({ shortpass }) => (dispatch, getState) => {\n  dispatch(_activateShortLogin());\n  return secretin\n    .activateShortLogin(shortpass, uuid.v4())\n    .then(() =>\n      dispatch(\n        activateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(activateShortLoginFailure());\n    });\n};\n\nexport const deactivateShortLogin = () => (dispatch, getState) => {\n  secretin\n    .deactivateShortLogin()\n    .then(() =>\n      dispatch(\n        deactivateShortLoginSuccess({\n          shortLogin: secretin.canITryShortLogin(),\n        })\n      )\n    )\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(deactivateShortLoginFailure());\n    });\n};\n\nexport const changePassword = ({ newPass }) => (dispatch, getState) => {\n  dispatch(_changePassword());\n  secretin\n    .changePassword(newPass)\n    .then(() => {\n      dispatch(changePasswordSuccess());\n    })\n    .catch(() => {\n      dispatch(changePasswordFailure());\n    });\n};\n\nexport const toggleTotp = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleTotp({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateTotp());\n};\n\nexport const showRescueCodes = () => (dispatch, getState) => {\n  if (\n    !window.confirm(\n      'Be careful, this will replace your previously generated codes. Continue?'\n    )\n  ) {\n    return;\n  }\n  secretin.getRescueCodes().then(rescueCodes => {\n    dispatch(showRescueCodesSuccess({ rescueCodes }));\n  });\n};\n\nexport const toggleShortLogin = ({ checked }) => (dispatch, getState) => {\n  dispatch(_toggleShortLogin({ checked }));\n  if (checked) {\n    return true;\n  }\n  return dispatch(deactivateShortLogin());\n};\n\nexport const toggleAutoLogout = ({ checked }) => (dispatch, getState) => {\n  const delay = checked ? 30 : 0;\n  return dispatch(changeTimeToClose({ timeToClose: delay }));\n};\n\nexport const changeDefaultUsername = ({ defaultUsername }) => (\n  dispatch,\n  getState\n) => {\n  secretin\n    .editOption('defaultUsername', defaultUsername)\n    .then(() => {\n      dispatch(changeDefaultUsernameSuccess({ defaultUsername }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport const changeTimeToClose = ({ timeToClose }) => (dispatch, getState) => {\n  secretin\n    .editOption('timeToClose', timeToClose)\n    .then(() => {\n      dispatch(changeDelaySuccess({ timeToClose }));\n    })\n    .catch(() => {\n      // Currently the UI can't display this error anyway\n      // dispatch(changeDelayFailure());\n    });\n  return true;\n};\n\nexport default OptionsSlice.reducer;\n","import secretin from 'utils/secretin';\nimport uuid from 'uuid';\nimport { isEmpty } from 'lodash';\n\nclass InternalProgressBar {\n  constructor(progressFunction, total) {\n    this.func = progressFunction;\n    this.total = total;\n    this.status = 0;\n  }\n\n  update() {\n    this.status += 1;\n    this.func({ state: this.status, total: this.total });\n  }\n}\n\nfunction addSecret(child, hashedParent) {\n  let title = '';\n  const secret = {\n    type: 'default',\n    fields: [\n      {\n        id: uuid.v4(),\n        type: 'text',\n        label: 'login',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'password',\n        label: 'password',\n        content: '',\n      },\n      {\n        id: uuid.v4(),\n        type: 'url',\n        label: 'url',\n        content: '',\n      },\n    ],\n  };\n  const strings = child.querySelectorAll(':scope > String');\n\n  for (let j = 0; j < strings.length; j += 1) {\n    const key = strings[j].children[0].textContent;\n    const value = strings[j].children[1].textContent;\n    if (key.toLowerCase() === 'title') {\n      title = value;\n    } else if (key.toLowerCase() === 'password') {\n      secret.fields[1].content = value;\n    } else if (key.toLowerCase() === 'url') {\n      secret.fields[2].content = value;\n    } else if (key.toLowerCase() === 'username') {\n      secret.fields[0].content = value;\n    } else if (!isEmpty(value)) {\n      secret.fields.push({\n        id: uuid.v4(),\n        type: 'text',\n        label: key,\n        content: value,\n      });\n    }\n  }\n\n  let hashedTitle = '';\n  return secretin.addSecret(title, secret).then(rHashedTitle => {\n    hashedTitle = rHashedTitle;\n    if (typeof hashedParent !== 'undefined') {\n      return secretin.addSecretToFolder(hashedTitle, hashedParent);\n    }\n    return Promise.resolve();\n  });\n}\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nfunction addAndParseGroup(group, progress, hashedParent) {\n  let hashedTitle = '';\n  const title = group.getElementsByTagName('Name')[0].textContent;\n  return (\n    secretin\n      .addFolder(title)\n      .then(rHashedTitle => {\n        hashedTitle = rHashedTitle;\n        const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n        const entryPromises = entries.reduce(\n          (promise, childEntry) =>\n            promise.then(() =>\n              addSecret(childEntry, hashedTitle).then(() => {\n                progress.update();\n              })\n            ),\n          Promise.resolve()\n        );\n        return entryPromises;\n      })\n      .then(() => {\n        if (typeof hashedParent !== 'undefined') {\n          return secretin.addSecretToFolder(hashedTitle, hashedParent);\n        }\n        return Promise.resolve();\n      })\n      // eslint-disable-next-line\n      .then(() => parseGroup(group, progress, hashedTitle))\n  );\n}\n\nfunction parseGroup(group, progress, hashedParent) {\n  let entryPromises;\n  if (typeof hashedParent === 'undefined') {\n    const entries = [].slice.call(group.querySelectorAll(':scope > Entry'));\n    entryPromises = entries.reduce(\n      (promise, childEntry) =>\n        promise.then(() =>\n          addSecret(childEntry, hashedParent).then(() => {\n            progress.update();\n          })\n        ),\n      Promise.resolve()\n    );\n  } else {\n    entryPromises = Promise.resolve();\n  }\n\n  return entryPromises.then(() => {\n    const groups = [].slice.call(group.querySelectorAll(':scope > Group'));\n    return groups.reduce(\n      (promise, childGroup) =>\n        promise.then(() =>\n          addAndParseGroup(childGroup, progress, hashedParent)\n        ),\n      Promise.resolve()\n    );\n  });\n}\n\nfunction count(group) {\n  let nb = group.querySelectorAll(':scope > Entry').length;\n  const groups = group.querySelectorAll(':scope > Group');\n  for (let i = 0; i < groups.length; i += 1) {\n    nb += count(groups[i]);\n  }\n  return nb;\n}\n\nexport function detect(file) {\n  const parser = new DOMParser();\n  let isKeepass = false;\n  try {\n    const xmlDoc = parser.parseFromString(file, 'application/xml');\n    isKeepass = xmlDoc.getElementsByTagName('KeePassFile').length === 1;\n  } catch (e) {\n    isKeepass = false;\n  }\n  return isKeepass;\n}\n\nexport function parse(xml, mandatoryField, progress = defaultProgress) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'application/xml');\n  const root = xmlDoc.getElementsByTagName('Root')[0].children[0];\n  const currentProgress = new InternalProgressBar(progress, count(root));\n  return parseGroup(root, currentProgress);\n}\n\nexport const mandatoryFields = {};\n\nconst keepass = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default keepass;\n","import secretin from 'utils/secretin';\n\nfunction defaultProgress(status, total) {\n  // eslint-disable-next-line no-console\n  console.log(`${status}/${total}`);\n}\n\nexport function detect(file) {\n  let isSecretin = false;\n  try {\n    const db = JSON.parse(file);\n    isSecretin = 'users' in db && 'secrets' in db;\n  } catch (e) {\n    isSecretin = false;\n  }\n  return isSecretin;\n}\n\nexport function parse(db, { username, password }, progress = defaultProgress) {\n  return secretin.importDb(password.value, db, progress);\n}\n\nexport const mandatoryFields = {\n  password: { type: 'password', name: 'password', value: '' },\n};\n\nconst secretinDB = {\n  parse,\n  detect,\n  mandatoryFields,\n};\n\nexport default secretinDB;\n","import keepass from 'utils/importers/keepass';\nimport secretinDB from 'utils/importers/secretin';\n\nconst importers = {\n  keepass,\n  secretin: secretinDB,\n};\n\nexport default importers;\n","import { createSlice } from '@reduxjs/toolkit';\nimport importers from 'utils/importers';\nimport { findKey } from 'lodash';\nimport { disconnectUserSuccess } from 'slices/AppUISlice';\n\nconst getInitialState = () => ({\n  importType: '',\n  importing: false,\n  importStatus: 0,\n  importTotal: 0,\n  success: false,\n  file: '',\n  error: '',\n  mandatoryFields: {},\n});\n\nexport const ImportSlice = createSlice({\n  name: 'Import',\n  initialState: getInitialState(),\n  reducers: {\n    showModal: (state, action) => {\n      const { secret, tab } = action.payload;\n      this.state.secret = secret;\n      this.state.tab = tab || 'details';\n      this.state.errors = {};\n    },\n    _importSecrets: (state, action) => {\n      state.importing = true;\n      state.success = false;\n      state.error = '';\n    },\n\n    detectTypeFailure: (state, action) => {\n      const { error } = action.payload;\n      state.error = error;\n      state.importType = '';\n      state.mandatoryFields = {};\n    },\n\n    detectTypeSuccess: (state, action) => {\n      const { file, importType, mandatoryFields } = action.payload;\n      state.importType = importType;\n      state.error = '';\n      state.file = file;\n      state.mandatoryFields = mandatoryFields;\n    },\n\n    importSecretsProgress: (state, action) => {\n      const { importStatus, importTotal } = action.payload;\n      state.error = '';\n      state.importStatus = importStatus;\n      state.importTotal = importTotal;\n    },\n\n    importSecretsSuccess: (state, action) => {\n      state.importing = false;\n      state.success = true;\n      state.importType = '';\n      state.error = '';\n      state.importStatus = 0;\n      state.importTotal = 0;\n      state.mandatoryFields = {};\n    },\n\n    importSecretsFailure: (state, action) => {\n      const { error } = action.payload;\n\n      state.importing = false;\n      state.success = false;\n      state.importType = '';\n      state.error = error;\n      state.mandatoryFields = {};\n    },\n\n    defaultStore: (state, action) => {\n      state = getInitialState();\n    },\n\n    changeMandatoryField: (state, action) => {\n      const { field, value } = action.payload;\n      state.mandatoryFields[field.name].value = value;\n    },\n  },\n  extraReducers: {\n    [disconnectUserSuccess]: getInitialState,\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  showModal,\n  _importSecrets,\n  detectTypeFailure,\n  detectTypeSuccess,\n  importSecretsProgress,\n  importSecretsSuccess,\n  importSecretsFailure,\n  defaultStore,\n  changeMandatoryField,\n} = ImportSlice.actions;\n\nexport const detectType = ({ file }) => (dispatch, getState) => {\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = ({ target }) => {\n    const file = target.result;\n    const importType = findKey(importers, importer => importer.detect(file));\n\n    if (typeof importType !== 'undefined') {\n      const mandatoryFields = importers[importType].mandatoryFields;\n      dispatch(detectTypeSuccess({ file, importType, mandatoryFields }));\n    } else {\n      dispatch(detectTypeFailure({ error: 'Invalid type' }));\n    }\n  };\n  return reader;\n};\n\nexport const importSecrets = ({ file, type, mandatoryFields }) => (\n  dispatch,\n  getState\n) => {\n  dispatch(_importSecrets());\n  importers[type]\n    .parse(\n      file,\n      mandatoryFields,\n      ({ state: importStatus, total: importTotal }) =>\n        dispatch(\n          importSecretsProgress({\n            importStatus,\n            importTotal,\n          })\n        )\n    )\n    .then(() => {\n      dispatch(importSecretsSuccess());\n    })\n    .catch(error => {\n      dispatch(importSecretsFailure({ error }));\n    });\n};\n\nexport default ImportSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport AppUIReducer from '../slices/AppUISlice';\nimport EditSecretUIReducer from '../slices/EditSecretUISlice';\nimport MetadataReducer from '../slices/MetadataSlice';\nimport NewSecretUIReducer from '../slices/NewSecretUISlice';\nimport ShowSecretUIReducer from '../slices/ShowSecretUISlice';\nimport OptionsReducer from '../slices/OptionsSlice';\nimport ImportReducer from '../slices/ImportSlice';\n\nexport default configureStore({\n  reducer: {\n    AppUI: AppUIReducer,\n    EditSecretUI: EditSecretUIReducer,\n    Metadata: MetadataReducer,\n    NewSecretUI: NewSecretUIReducer,\n    ShowSecretUI: ShowSecretUIReducer,\n    Options: OptionsReducer,\n    Import: ImportReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: [\n          'AppUI/onLoginUserProgress',\n          'AppUI/loginUserSuccess',\n          'Metadata/addSecretToFolderSuccess',\n        ],\n        // Ignore these paths in the state\n        ignoredPaths: ['AppUI.currentUser', 'Metadata.metadata'],\n      },\n    }),\n});\n","import urljoin from 'url-join';\n\nexport function buildSecretURL(folders = [], basePath = '/secrets') {\n  return urljoin(basePath, folders.join('/'), '/');\n}\n\nconst URLHelper = {\n  buildSecretURL,\n};\n\nexport default URLHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport UserAvatar from 'components/users/UserAvatar';\n\nconst propTypes = {\n  users: PropTypes.array,\n  size: PropTypes.string,\n};\n\nconst defaultProps = {\n  size: 'base',\n};\n\nfunction UserAvatars({ users, size }) {\n  const className = classNames('user-avatars', `user-avatars--size-${size}`);\n\n  return (\n    <div className={className}>\n      {users.map(user => (\n        <UserAvatar key={user.id} user={user} size={size} />\n      ))}\n    </div>\n  );\n}\nUserAvatars.propTypes = propTypes;\nUserAvatars.defaultProps = defaultProps;\n\nexport default UserAvatars;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport { confirm } from 'components/utilities/Confirm';\nimport Dropdown from 'components/utilities/Dropdown';\nimport Icon from 'components/utilities/Icon';\n\nclass SecretListItemOptions extends Component {\n  static propTypes = {\n    secret: PropTypes.any,\n    parentFolderId: PropTypes.string,\n    folder: PropTypes.object,\n    currentUser: PropTypes.object,\n    isOnline: PropTypes.bool,\n    dispatch: PropTypes.func,\n  };\n\n  handleShow = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({\n        secret,\n        tab: secret.type === 'folder' ? 'access' : 'details',\n      })\n    );\n  };\n\n  handleShare = () => {\n    const { secret } = this.props;\n    this.props.dispatch(\n      ShowSecretUIActions.showSecret({ secret, tab: 'access' })\n    );\n  };\n\n  handleMoveToParent = () => {\n    const { parentFolderId: currentFolderId, secret } = this.props;\n    this.props.dispatch(\n      MetadataActions.removeSecretFromCurrentFolder({\n        secret,\n        currentFolderId,\n      })\n    );\n  };\n\n  handleDelete = () => {\n    const { secret } = this.props;\n    confirm({\n      title: (\n        <span>\n          Delete <b>{secret.title}</b>?\n        </span>\n      ),\n      text: (\n        <span>\n          You are about to <b>delete</b> the secret <b>{secret.title}</b>. This\n          action is definitive and can&apos;t be recovered.\n        </span>\n      ),\n      acceptLabel: 'Delete the secret',\n      cancelLabel: 'Cancel',\n      onAccept: () =>\n        this.props.dispatch(MetadataActions.deleteSecret({ secret })),\n      onCancel: () => ({}),\n    });\n    return true;\n  };\n\n  render() {\n    const { parentFolderId, secret, currentUser, folder } = this.props;\n\n    const canShare = secret.canBeSharedBy(currentUser);\n    if (!canShare && secret.type === 'folder') {\n      return null;\n    }\n    return (\n      <Dropdown id=\"secret-action\" pullRight>\n        <Dropdown.Toggle>\n          <Icon id=\"more-vert\" size=\"small\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {secret.type !== 'folder' && (\n            <Dropdown.MenuItem onSelect={this.handleShow}>\n              Show\n            </Dropdown.MenuItem>\n          )}\n          {canShare && (\n            <Dropdown.MenuItem\n              onSelect={this.handleShare}\n              disabled={!this.props.isOnline}\n            >\n              Share\n            </Dropdown.MenuItem>\n          )}\n\n          {(parentFolderId || secret.canBeDeleted()) && (\n            <div>\n              <Dropdown.MenuItem divider />\n\n              {parentFolderId && (\n                <Dropdown.MenuItem onSelect={this.handleMoveToParent}>\n                  Remove from&nbsp;\n                  <b>{folder.title}</b>\n                </Dropdown.MenuItem>\n              )}\n\n              {secret.canBeDeleted() && (\n                <Dropdown.MenuItem\n                  onSelect={this.handleDelete}\n                  disabled={!this.props.isOnline}\n                >\n                  Delete\n                </Dropdown.MenuItem>\n              )}\n            </div>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { online, currentUser } = state.AppUI;\n  const { metadata } = state.Metadata;\n  return {\n    isOnline: online,\n    currentUser,\n    folder: metadata.find(m => m.id === ownProps.parentFolderId),\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListItemOptions);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport store from 'stores/store';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport UserAvatars from 'components/users/UserAvatars';\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n  isDragging: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isOver: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemFolder(props) {\n  const { secret, folders, isDragging, canDrop, isOver } = props;\n  const { connectDragSource, connectDropTarget } = props;\n\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n\n  const secretRights = secret.users.find(\n    user => user.id === currentUser.username\n  ).rights;\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n    'secret-list-item--is-over': isOver,\n    'secret-list-item--can-drop': canDrop,\n    'secret-list-item--cant-drop': !canDrop,\n  });\n\n  const link = (\n    <div>\n      <Link to={buildSecretURL([...folders, secret.id])}>\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </Link>\n    </div>\n  );\n\n  return connectDropTarget(\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={folders[folders.length - 1]}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemFolder.propTypes = propTypes;\n\nconst itemSource = {\n  beginDrag({ secret }) {\n    return { secret };\n  },\n};\n\nconst itemTarget = {\n  drop({ secret: folder }, monitor) {\n    const { secret } = monitor.getItem();\n    store.dispatch(MetadataActions.addSecretToFolder({ secret, folder }));\n  },\n\n  canDrop({ secret: targetSecret }, monitor) {\n    const { username: currentUserId } = store.getState().AppUI.currentUser;\n    const { secret: draggedSecret } = monitor.getItem();\n\n    return (\n      draggedSecret.users.find(user => user.id === currentUserId).rights !==\n        0 &&\n      targetSecret.type === 'folder' &&\n      targetSecret.id !== draggedSecret.id &&\n      targetSecret.users.find(user => user.id === currentUserId).rights !== 0\n    );\n  },\n};\n\nfunction itemSourceCollect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    canDrop: monitor.canDrop(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst SecretListItemFolderSource = new DragSource(\n  'SecretListItem',\n  itemSource,\n  itemSourceCollect\n)(SecretListItemFolder);\nconst SecretListItemFolderTarget = new DropTarget(\n  'SecretListItem',\n  itemTarget,\n  itemTargetCollect\n)(SecretListItemFolderSource);\n\nexport default SecretListItemFolderTarget;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport classNames from 'classnames';\n\nimport * as ShowSecretUIActions from 'slices/ShowSecretUISlice';\n\nimport UserAvatars from 'components/users/UserAvatars';\n\nimport Icon from 'components/utilities/Icon';\n\nimport SecretListItemOptions from './Options';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  parentFolderId: PropTypes.string,\n  isDragging: PropTypes.bool,\n  connectDragSource: PropTypes.func.isRequired,\n};\n\nfunction SecretListItemSecret({\n  secret,\n  parentFolderId,\n  isDragging,\n  connectDragSource,\n}) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const isOnline = useSelector(state => state.AppUI.online);\n  const dispatch = useDispatch();\n\n  const users = secret.users.filter(user => user.id !== currentUser.username);\n\n  const secretRights =\n    secret.users.find(user => user.id === currentUser.username)?.rights || 0;\n  const className = classNames('secret-list-item', {\n    'secret-list-item--is-dragging': isDragging,\n  });\n\n  const link = (\n    <div>\n      <a\n        onClick={() => dispatch(ShowSecretUIActions.showSecret({ secret }))}\n        tabIndex=\"-1\"\n      >\n        <Icon id={secret.getIcon()} size=\"base\" />\n        <span className=\"text\" title={secret.title}>\n          {secret.title}\n        </span>\n      </a>\n    </div>\n  );\n\n  return (\n    <div className={className}>\n      <div className=\"secret-list-item-column secret-list-item-column--title\">\n        {secretRights > 0 && (isOnline || users.length === 0)\n          ? connectDragSource(link)\n          : link}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--last-modified\">\n        {secret.lastModifiedAt.fromNow()}\n        {' - '}\n        <span className=\"muted\">{secret.lastModifiedBy}</span>\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--shared-with\">\n        {users.length > 0 ? <UserAvatars users={users} /> : '––'}\n      </div>\n      <div className=\"secret-list-item-column secret-list-item-column--actions\">\n        <SecretListItemOptions\n          parentFolderId={parentFolderId}\n          secret={secret}\n        />\n      </div>\n    </div>\n  );\n}\nSecretListItemSecret.propTypes = propTypes;\n\nconst cardSource = {\n  beginDrag({ secret }) {\n    return {\n      secret,\n    };\n  },\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragSource('SecretListItem', cardSource, collect)(\n  SecretListItemSecret\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListItemFolderFolder from './Folder';\nimport SecretListItemFolderSecret from './Secret';\n\nconst propTypes = {\n  secret: PropTypes.any,\n  folders: PropTypes.array,\n};\n\nfunction SecretListItem({ secret, folders }) {\n  if (secret.type === 'folder') {\n    return <SecretListItemFolderFolder secret={secret} folders={folders} />;\n  }\n  return (\n    <SecretListItemFolderSecret\n      parentFolderId={folders[folders.length - 1]}\n      secret={secret}\n    />\n  );\n}\nSecretListItem.propTypes = propTypes;\n\nexport default SecretListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/utilities/Icon';\n\nconst propTypes = {\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  link: PropTypes.string,\n};\n\nconst defaultProps = {\n  icon: 'home',\n  title: 'Home',\n  link: '/secrets/',\n};\n\nfunction Title({ icon, title, link }) {\n  return (\n    <div className=\"breadcrumb-item\">\n      <NavLink\n        to={link}\n        className=\"breadcrumb-link\"\n        activeClassName=\"breadcrumb-link--active\"\n        exact\n      >\n        <Icon id={icon} size=\"base\" />\n        {title}\n      </NavLink>\n    </div>\n  );\n}\nTitle.propTypes = propTypes;\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { buildSecretURL } from 'utils/URLHelper';\n\nimport Icon from 'components/utilities/Icon';\nimport Title from 'components/utilities/Title';\n\nconst propTypes = {\n  folders: PropTypes.array,\n  withTitle: PropTypes.bool,\n};\n\nconst defaultProps = {\n  folders: [],\n  withTitle: true,\n};\n\nfunction SecretListBreadcrumb({ folders, withTitle }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const metadata = useSelector(state => state.Metadata.metadata);\n\n  const breadcrumbURLs = folders.reduce(\n    (memo, folderId) => [\n      ...memo,\n      {\n        folderId,\n        link: buildSecretURL(\n          [folderId],\n          memo[memo.length - 1] ? memo[memo.length - 1].link : undefined\n        ),\n      },\n    ],\n    []\n  );\n\n  let breadcrumb = breadcrumbURLs.reduce((links, { folderId, link }, key) => {\n    const folder = metadata?.find(m => m.id === folderId);\n    if (!folder) {\n      return links;\n    }\n\n    return [\n      ...links,\n      <div key={key} className=\"breadcrumb-item\">\n        <NavLink\n          to={link}\n          className=\"breadcrumb-link\"\n          activeClassName=\"breadcrumb-link--active\"\n          exact\n        >\n          {folder.title}\n        </NavLink>\n      </div>,\n      <Icon\n        key={`${key}-sep`}\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />,\n    ];\n  }, []);\n\n  if (withTitle) {\n    breadcrumb.unshift(\n      <Icon\n        key=\"home-sep\"\n        id=\"chevron-right\"\n        className=\"breadcrumb-item-separator\"\n      />\n    );\n\n    breadcrumb.unshift(\n      <Title\n        key=\"home\"\n        title={currentUser.username}\n        icon=\"home\"\n        link=\"/secrets/\"\n      />\n    );\n  }\n\n  return <div className=\"breadcrumb\">{breadcrumb}</div>;\n}\nSecretListBreadcrumb.propTypes = propTypes;\nSecretListBreadcrumb.defaultProps = defaultProps;\n\nexport default SecretListBreadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\n\nconst propTypes = {\n  folder: PropTypes.any,\n};\n\nfunction SecretListFolderInfo({ folder }) {\n  if (folder.root) return null;\n  return (\n    <div className=\"secret-list-folder\">\n      <div colSpan=\"4\" className=\"secret-list-folder-info\">\n        <SecretListBreadcrumb folders={folder.breadcrumb} withTitle={false} />\n      </div>\n    </div>\n  );\n}\n\nSecretListFolderInfo.propTypes = propTypes;\n\nexport default SecretListFolderInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { escapeRegExp, set } from 'lodash';\nimport { List, AutoSizer } from 'react-virtualized';\n\nimport SecretListItem from 'components/secrets/SecretListItem';\nimport SecretListFolderInfo from 'components/secrets/SecretListFolderInfo';\nimport SecretListItemFolderSecret from 'components/secrets/SecretListItem/Secret';\n\nclass SecretListContent extends Component {\n  static propTypes = {\n    filtered: PropTypes.bool,\n    secrets: PropTypes.array,\n    isDragging: PropTypes.bool,\n    folders: PropTypes.array,\n    searchQuery: PropTypes.string,\n    endDecrypt: PropTypes.bool,\n    currentUser: PropTypes.object,\n    allFolders: PropTypes.array,\n  };\n\n  render() {\n    const { allFolders, currentUser } = this.props;\n    const className = classNames('secret-list-content-table', {\n      'secret-list-content-table--is-dragging': this.props.isDragging,\n    });\n    const fuzzyRegexp = new RegExp(\n      this.props.searchQuery\n        .split('')\n        .map(c => escapeRegExp(c))\n        .join('.*'),\n      'i'\n    );\n\n    let filteredSecrets = this.props.secrets.filter(secret =>\n      fuzzyRegexp.test(secret.title)\n    );\n\n    let filteredFolders = {};\n    let sortedFolderRows = [];\n\n    const getUser = (users, username) =>\n      users.find(user => user.id === username);\n\n    if (this.props.filtered) {\n      filteredSecrets.forEach(secret => {\n        let folder = 'ROOT';\n        const user = getUser(secret.users, currentUser.username);\n        if (user) folder = Object.keys(user.folders)[0];\n        if (typeof folder === 'undefined') {\n          folder = 'ROOT';\n        }\n        set(filteredFolders, `${folder}.secrets.${secret.id}`, secret);\n        if (folder === 'ROOT') {\n          filteredFolders[folder].name = '';\n          filteredFolders[folder].root = true;\n        } else {\n          let root = false;\n          let breadcrumb = [];\n          let fullName = [];\n          let currentFolder = folder;\n          while (!root) {\n            const currentFolderDetails = allFolders.find(\n              fold => fold.id === currentFolder\n            );\n            fullName.unshift(currentFolderDetails.title);\n            root = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            ).includes('ROOT');\n\n            breadcrumb.unshift(currentFolder);\n            currentFolder = Object.keys(\n              getUser(currentFolderDetails.users, currentUser.username).folders\n            )[0];\n          }\n          filteredFolders[folder].name = fullName.join('/');\n          filteredFolders[folder].breadcrumb = breadcrumb;\n        }\n      });\n      let sortedFolders = Object.entries(filteredFolders).map(\n        ([id, folder]) => ({\n          ...folder,\n          id,\n        })\n      );\n      sortedFolders.sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      );\n      sortedFolders.sort((a, b) => a.root);\n      sortedFolderRows = sortedFolders\n        .map(folder => {\n          const secrets = Object.values(folder.secrets);\n          secrets.sort((a, b) => {\n            if (a.title === null) return 1;\n            if (b.title === null) return -1;\n            return a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n          });\n          return [\n            { rowType: 'header', rowData: folder },\n            ...secrets.map(secret => ({ rowType: 'row', rowData: secret })),\n          ];\n        })\n        .flat();\n    } else {\n      filteredSecrets.sort((a, b) =>\n        a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n      );\n    }\n\n    const renderFilteredRow = ({ index, key, style }) => {\n      const { rowType, rowData } = sortedFolderRows[index];\n      if (rowType === 'header') {\n        return (\n          <div key={key} style={style}>\n            <SecretListFolderInfo key={rowData.id} folder={rowData} />\n          </div>\n        );\n      }\n\n      return (\n        <div key={key} style={style}>\n          <SecretListItemFolderSecret key={rowData.id} secret={rowData} />\n        </div>\n      );\n    };\n\n    const renderStandardRow = ({ index, key, style }) => {\n      const secret = filteredSecrets[index];\n      return (\n        <div key={key} style={style}>\n          <SecretListItem\n            key={secret.id}\n            secret={secret}\n            folders={this.props.folders}\n          />\n        </div>\n      );\n    };\n\n    const getRowHeight = ({ index }) => {\n      if (this.props.filtered && sortedFolderRows[index].rowType === 'header') {\n        const folder = sortedFolderRows[index].rowData;\n        if (folder.root) return 0;\n        return 75;\n      }\n      return 50;\n    };\n\n    return (\n      <div className={className}>\n        <AutoSizer>\n          {({ width, height }) => {\n            return (\n              <List\n                width={width}\n                height={height}\n                rowHeight={getRowHeight}\n                rowRenderer={\n                  this.props.filtered ? renderFilteredRow : renderStandardRow\n                }\n                rowCount={\n                  this.props.filtered\n                    ? sortedFolderRows.length\n                    : filteredSecrets.length\n                }\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.AppUI;\n  const allFolders =\n    Object.values(state.Metadata.metadata).filter(\n      secret => secret.type === 'folder'\n    ) || [];\n\n  return {\n    currentUser,\n    allFolders,\n  };\n};\n\nexport default connect(mapStateToProps)(SecretListContent);\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\n\nfunction SecretListRefresh() {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"secret-list-refresh\">\n      <Button\n        title=\"Refresh secret list\"\n        buttonStyle=\"icon\"\n        onClick={() => dispatch(MetadataActions.loadMetadata())}\n      >\n        <Icon id=\"refresh\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default SecretListRefresh;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport * as MetadataActions from 'slices/MetadataSlice';\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretFields from 'components/secrets/SecretFields';\nimport Modal from 'components/utilities/Modal';\nimport Form from 'components/utilities/Form';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nclass SecretNew extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    folder: PropTypes.string,\n    isFolder: PropTypes.bool,\n    title: PropTypes.string,\n    data: PropTypes.object,\n    newSecretActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n    isLoading: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { folder, isFolder, title, data } = this.props;\n    this.props.metadataActions.createSecret({\n      folder: folder?.id,\n      isFolder,\n      title,\n      data,\n    });\n  }\n\n  render() {\n    const { isFolder } = this.props;\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.newSecretActions.hideModal}\n      >\n        <Modal.Header title={isFolder ? 'Add new folder' : 'Add new secret'} />\n\n        <Modal.Body>\n          <Form id=\"new-secret\" onSubmit={this.onSubmit} disabled={false}>\n            <Input\n              label={isFolder ? 'Folder title' : 'Secret title'}\n              name=\"title\"\n              value={this.props.title}\n              type=\"text\"\n              onChange={this.props.newSecretActions.changeTitle}\n              autoSelect\n              required\n            />\n            {!isFolder && (\n              <SecretFields\n                fields={this.props.data.fields}\n                onChange={this.props.newSecretActions.changeField}\n                isNew\n                canUpdate\n              />\n            )}\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.newSecretActions.hideModal}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            onClick={this.onSubmit}\n            disabled={this.props.isLoading}\n          >\n            {isFolder ? 'Add folder' : 'Add secret'}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  newSecretActions: bindActionCreators(NewSecretUIActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.NewSecretUI,\n    isLoading: state.AppUI.loading,\n    folder: ownProps.folder,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretNew);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Secret from 'models/Secret';\n\nimport * as NewSecretUIActions from 'slices/NewSecretUISlice';\n\nimport SecretNew from 'components/secrets/SecretNew';\nimport Icon from 'components/utilities/Icon';\nimport Button from 'components/utilities/Button';\n\nconst propTypes = {\n  folder: PropTypes.instanceOf(Secret),\n  showAddFolder: PropTypes.bool,\n};\n\nfunction SecretListNew({ folder, showAddFolder }) {\n  const currentUser = useSelector(state => state.AppUI.currentUser);\n  const dispatch = useDispatch();\n  let folderId = null;\n  let canWrite = true;\n  if (folder) {\n    folderId = folder.id;\n    canWrite = folder.canBeUpdatedBy(currentUser);\n  }\n\n  return (\n    <div className=\"secret-list-new\">\n      <SecretNew folder={folder} />\n      <Button\n        title=\"Add secret\"\n        buttonStyle=\"primary\"\n        size=\"small\"\n        disabled={!canWrite}\n        onClick={() =>\n          dispatch(\n            NewSecretUIActions.showModal({ folder: folderId, isFolder: false })\n          )\n        }\n      >\n        <Icon id=\"add-secret\" size=\"small\" />\n        Secret\n      </Button>\n      {showAddFolder && (\n        <Button\n          title=\"Add folder\"\n          buttonStyle=\"primary\"\n          size=\"small\"\n          disabled={!canWrite}\n          onClick={() =>\n            dispatch(\n              NewSecretUIActions.showModal({ folder: folderId, isFolder: true })\n            )\n          }\n        >\n          <Icon id=\"add-folder\" size=\"small\" />\n          Folder\n        </Button>\n      )}\n    </div>\n  );\n}\nSecretListNew.propTypes = propTypes;\n\nexport default SecretListNew;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Mousetrap from 'mousetrap';\n\nclass SecretListSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.focus = this.focus.bind(this);\n    this.blur = this.blur.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind('mod+f', this.focus);\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind('mod+f', this.focus);\n  }\n\n  onChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  focus(e) {\n    if (this.searchInput === document.activeElement) {\n      return;\n    }\n    this.searchInput.focus();\n    e.preventDefault();\n  }\n\n  blur(e) {\n    if (e.key === 'Escape' && e.target.value === '') {\n      this.searchInput.blur();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"input input--type-search input--size-small\">\n        <input\n          ref={ref => {\n            this.searchInput = ref;\n          }}\n          type=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.onChange}\n          onKeyDown={this.blur}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SecretListSearch;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statuses } from 'utils/secretin';\nimport { connect } from 'react-redux';\n\nconst { DecryptMetadataStatus } = Statuses;\n\nclass UserConnectProgress extends Component {\n  static propTypes = {\n    show: PropTypes.bool,\n    message: PropTypes.string,\n    state: PropTypes.number,\n    total: PropTypes.number,\n  };\n\n  static getDerivedStateFromProps({ message }) {\n    const nextMessage =\n      message instanceof DecryptMetadataStatus\n        ? 'Updating your secrets...'\n        : message;\n\n    return {\n      message: nextMessage,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  render() {\n    if (!this.props.show) return null;\n    const { state, total } = this.props;\n    const width = `${Math.round((state / total) * 100)}%`;\n    const style = { width };\n    return (\n      <div className=\"user-connect-progress\">\n        <div className=\"user-connect-progress-bar\" style={style} />\n        <div className=\"user-connect-progress-text\">{this.state.message}</div>\n        <div className=\"user-connect-progress-title\">{width}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = _state => {\n  const status = _state.AppUI.status;\n  if (!status)\n    return {\n      show: false,\n    };\n  const { message, state, total } = _state.AppUI.status;\n  return {\n    show: true,\n    message,\n    state,\n    total,\n  };\n};\n\nexport default connect(mapStateToProps)(UserConnectProgress);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DragLayer } from 'react-dnd';\n\nimport Secret from 'models/Secret';\n\nimport SecretListContent from 'components/secrets/SecretListContent';\nimport SecretListBreadcrumb from 'components/secrets/SecretListBreadcrumb';\nimport SecretListRefresh from 'components/secrets/SecretListRefresh';\nimport SecretListNew from 'components/secrets/SecretListNew';\nimport SecretListSearch from 'components/secrets/SecretListSearch';\nimport UserConnectProgress from 'components/users/UserConnectProgress';\n\nimport Title from 'components/utilities/Title';\n\nclass SecretList extends Component {\n  static propTypes = {\n    folder: PropTypes.instanceOf(Secret),\n    folders: PropTypes.array,\n    secrets: PropTypes.array,\n    searchQuery: PropTypes.string,\n    isDragging: PropTypes.bool,\n    showAll: PropTypes.bool,\n    showMine: PropTypes.bool,\n    showShared: PropTypes.bool,\n    status: PropTypes.string,\n  };\n\n  static defaultProps = {\n    folders: [],\n    secrets: {},\n    searchQuery: '',\n    showAll: false,\n    showMine: false,\n    showShared: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onSearch = this.onSearch.bind(this);\n\n    this.state = {\n      searchQuery: props.searchQuery,\n    };\n  }\n\n  onSearch(searchQuery) {\n    this.setState({ searchQuery });\n  }\n\n  render() {\n    let icon;\n    let title;\n    let link;\n    let filtered = false;\n    if (this.props.showAll) {\n      icon = 'apps';\n      title = 'All';\n      link = '/secrets/all/';\n      filtered = true;\n    } else if (this.props.showMine) {\n      icon = 'user';\n      title = 'My secrets';\n      link = '/secrets/mine/';\n      filtered = true;\n    } else if (this.props.showShared) {\n      icon = 'people';\n      title = 'Shared secrets';\n      link = '/secrets/shared/';\n      filtered = true;\n    }\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          {filtered ? (\n            <div className=\"breadcrumb\">\n              <Title icon={icon} title={title} link={link} />\n            </div>\n          ) : (\n            <SecretListBreadcrumb folders={this.props.folders} />\n          )}\n          <SecretListRefresh />\n          <SecretListSearch onChange={this.onSearch} />\n        </div>\n\n        <UserConnectProgress />\n        <div className=\"page-content\">\n          <div className=\"page-content-actions\">\n            <SecretListNew\n              showAddFolder={\n                !this.props.showAll &&\n                !this.props.showMine &&\n                !this.props.showShared\n              }\n              folder={this.props.folder}\n            />\n          </div>\n          <div className=\"secret-list-content-table-header\">\n            <div>\n              <div className=\"secret-list-item-column--title\">Title</div>\n              <div className=\"secret-list-item-column--last-modified\">\n                Last modified\n              </div>\n              <div className=\"secret-list-item-column--shared-with\">\n                Shared with\n              </div>\n              <div className=\"secret-list-item-column--actions\" />\n            </div>\n          </div>\n          <SecretListContent\n            filtered={filtered}\n            secrets={this.props.secrets}\n            folders={this.props.folders}\n            isDragging={this.props.isDragging}\n            searchQuery={this.state.searchQuery}\n            endDecrypt={this.props.status === null}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction layerCollect(monitor) {\n  return {\n    isDragging: monitor.isDragging(),\n  };\n}\n\nexport default new DragDropContext(HTML5Backend)(\n  DragLayer(layerCollect)(SecretList)\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defaultMemoize } from 'reselect';\nimport equal from 'fast-deep-equal/es6';\n\nimport SecretList from 'components/secrets/SecretList';\n\nimport {\n  getAllSecrets,\n  getMySecrets,\n  getSecretsInFolder,\n  getSharedSecrets,\n} from 'selectors/MetadataSelectors';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      secrets: PropTypes.string,\n      path: PropTypes.string,\n    }),\n  }),\n  showAll: PropTypes.bool,\n  showMine: PropTypes.bool,\n  showShared: PropTypes.bool,\n};\n\nconst defaultProps = {\n  showAll: false,\n  showMine: false,\n  showShared: false,\n};\n\nconst getFolders = defaultMemoize(\n  params => {\n    return params.path ? params.path.split('/') : [];\n  },\n  (previousVal, currentVal) => equal(previousVal, currentVal)\n);\n\nfunction SecretListContainer({\n  match: { params },\n  showAll,\n  showMine,\n  showShared,\n}) {\n  const metadata = useSelector(state => state.Metadata.metadata);\n  const allSecrets = useSelector(getAllSecrets);\n  const mySecrets = useSelector(getMySecrets);\n  const sharedSecrets = useSelector(getSharedSecrets);\n  const folders = getFolders(params);\n  const folderId = folders[folders.length - 1];\n  const folderSecrets = useSelector(state =>\n    getSecretsInFolder(state, folderId)\n  );\n  if (showAll) {\n    return <SecretList secrets={allSecrets} showAll />;\n  } else if (showMine) {\n    return <SecretList secrets={mySecrets} showMine />;\n  } else if (showShared) {\n    return <SecretList secrets={sharedSecrets} showShared />;\n  }\n  const folder = metadata.find(f => f.id === folderId);\n  return (\n    <SecretList folder={folder} folders={folders} secrets={folderSecrets} />\n  );\n}\nSecretListContainer.propTypes = propTypes;\nSecretListContainer.defaultProps = defaultProps;\n\nexport default SecretListContainer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ShortLoginShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        shortpass: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      shortpass: '',\n    };\n  }\n\n  handleChange({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateShortLogin({\n      shortpass: this.state.shortpass,\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideShortLogin}\n      >\n        <Modal.Header>\n          <span className=\"text\">Trust this device</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <Input\n              label=\"Shortpass\"\n              name=\"shortpass\"\n              value={this.state.shortpass}\n              type=\"password\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideShortLogin}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showShortLogin, loading } = state.Options;\n  return {\n    errors,\n    shown: showShortLogin,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShortLoginShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Secretin from 'secretin';\nimport QRCode from 'qrcode.react';\n\nimport Form from 'components/utilities/Form';\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass QRCodeShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    errors: PropTypes.object,\n    loading: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    errors: {},\n    loading: false,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if (!nextProps.shown) {\n      return {\n        seed: Secretin.Utils.generateSeed(),\n        token: '',\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      seed: Secretin.Utils.generateSeed(),\n      token: '',\n    };\n  }\n\n  handleChange(e) {\n    const token = e.value.replace(/\\s+/g, '').slice(0, 6);\n\n    this.setState({\n      token,\n    });\n  }\n\n  handleSubmit() {\n    this.props.actions.activateTotp(this.state);\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.shown} onClose={this.props.actions.hideQRCode}>\n        <Modal.Header>\n          <span className=\"text\">Activate Two-Factor authentication</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form className=\"totp-form\" id=\"totp\" onSubmit={this.handleSubmit}>\n            <div className=\"totp-form-qrcode\">\n              <QRCode\n                className=\"totp-form-qrcode\"\n                value={`otpauth://totp/Secret-in.me?secret=${this.state.seed.b32}`}\n                size={256}\n              />\n            </div>\n            <Input\n              name=\"token\"\n              inputProps={{\n                maxLength: 6,\n              }}\n              placeholder=\"6-digit code\"\n              value={this.state.token}\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              error={this.props.errors.totp}\n              autoFocus\n            />\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideQRCode}\n          >\n            Close\n          </Button>\n          <Button\n            type=\"button\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            disabled={this.props.loading}\n          >\n            Activate\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { errors, showQRCode, loading } = state.Options;\n  return {\n    errors,\n    shown: showQRCode,\n    loading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nfunction getFile({ username, rescueCodes }) {\n  const codes = rescueCodes.map((code, i) => `${i + 1}. ${code}`);\n  const content = [\n    'SAVE YOUR BACKUP CODES',\n    'Keep these backup codes somewhere safe but accessible.',\n    '',\n    ...codes,\n    '',\n    `* Codes for user ${username}`,\n    `* Generated on ${moment().format('MMM Do, YYYY')}`,\n    '* You can only use each backup code once.',\n    `* Need new codes? Go to ${document.location.href}`,\n  ].join('\\n');\n\n  return new Blob([content], { type: 'text/plain;charset=utf-8;' });\n}\n\nclass RescueCodesShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    rescueCodes: PropTypes.array,\n    currentUser: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    shown: false,\n    rescueCodes: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.currentUser = props.currentUser;\n  }\n\n  render() {\n    const { rescueCodes } = this.props;\n    const { username } = this.currentUser;\n\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={this.props.actions.hideRescueCodes}\n      >\n        <Modal.Header>\n          <span className=\"text\">Rescue codes</span>\n        </Modal.Header>\n\n        <Modal.Body>\n          <h3>\n            You should view and download your recovery codes and keep them safe.\n          </h3>\n          <p>\n            If you lose access to your secure token and your code generator, a\n            recovery code is the only way to recover your account.\n          </p>\n          <pre>{rescueCodes.join(' ')}</pre>\n          <p>\n            <a\n              href={window.URL.createObjectURL(\n                getFile({ username, rescueCodes })\n              )}\n              download={`Backup-codes-${username}@secretin.txt`}\n            >\n              Download my codes\n            </a>\n          </p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={this.props.actions.hideRescueCodes}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { rescueCodes, showRescueCodes } = state.Options;\n  const { currentUser } = state.AppUI;\n  return {\n    rescueCodes,\n    shown: showRescueCodes,\n    currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RescueCodesShow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Modal from 'components/utilities/Modal';\nimport Button from 'components/utilities/Button';\nimport Input from 'components/utilities/Input';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass ChangePasswordShow extends Component {\n  static propTypes = {\n    shown: PropTypes.bool,\n    loading: PropTypes.bool,\n    status: PropTypes.oneOf(['initial', 'success', 'failure']),\n    error: PropTypes.string,\n    newPass1: PropTypes.string,\n    newPass2: PropTypes.string,\n    dispatch: PropTypes.func,\n  };\n\n  static defaultProps = {\n    shown: false,\n    loading: false,\n    newPass1: '',\n    newPass2: '',\n    error: '',\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n  }\n\n  handleChangePassword() {\n    this.props.dispatch(\n      OptionsActions.changePassword({\n        newPass: this.props.newPass1,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        show={this.props.shown}\n        onClose={() => this.props.dispatch(OptionsActions.hideChangePassword())}\n      >\n        <Modal.Header>\n          <span className=\"text\">Change master password</span>\n        </Modal.Header>\n\n        {this.props.status !== 'success' ? (\n          <Modal.Body>\n            <Input\n              name=\"newPass1\"\n              label=\"New password\"\n              value={this.props.newPass1}\n              onChange={(...args) =>\n                this.props.dispatch(OptionsActions.changeNewPass1(...args))\n              }\n              type=\"password\"\n              disabled={this.props.loading}\n            />\n            {this.props.newPass1.length > 0 && (\n              <span className=\"options-changepassword\">\n                <Input\n                  name=\"newPass2\"\n                  label=\"Retype\"\n                  value={this.props.newPass2}\n                  onChange={(...args) =>\n                    this.props.dispatch(OptionsActions.changeNewPass2(...args))\n                  }\n                  type=\"password\"\n                  disabled={this.props.loading}\n                />\n              </span>\n            )}\n            <div className=\"options-changepassword-infos\">\n              {this.props.error === '' &&\n                this.props.newPass1.length > 0 &&\n                this.props.newPass1 !== this.props.newPass2 &&\n                'Passwords mismatch'}\n              {this.props.error !== '' && this.props.error}\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <div className=\"options-changepassword-success\">Success</div>\n          </Modal.Body>\n        )}\n\n        <Modal.Footer>\n          <Button\n            type=\"reset\"\n            buttonStyle=\"default\"\n            onClick={() =>\n              this.props.dispatch(OptionsActions.hideChangePassword())\n            }\n          >\n            Close\n          </Button>\n          {this.props.newPass1.length > 0 && (\n            <Button\n              type=\"button\"\n              buttonStyle=\"primary\"\n              onClick={this.handleChangePassword}\n              disabled={this.props.newPass1 !== this.props.newPass2}\n            >\n              Change it\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  } = state.Options.newPass;\n  return {\n    error,\n    shown,\n    loading,\n    status,\n    newPass1,\n    newPass2,\n  };\n};\n\nexport default connect(mapStateToProps)(ChangePasswordShow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport classNames from 'classnames';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node,\n      PropTypes.string,\n    ]),\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.id = uniqueId('input_');\n  }\n\n  onChange(e) {\n    this.props.onChange({\n      name: this.props.name,\n      checked: e.target.checked,\n    });\n  }\n\n  render() {\n    const checboxClassName = classNames('checkbox', {\n      'checkbox--checked': this.props.checked,\n      'checkbox--unchecked': !this.props.checked,\n    });\n\n    return (\n      <div className=\"input input--type-checkbox\">\n        <input\n          id={this.id}\n          type=\"checkbox\"\n          name={this.props.name}\n          checked={this.props.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}\n        />\n        <label htmlFor={this.id}>\n          <div className={checboxClassName} />\n          {this.props.children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ShortLoginShow from 'components/options/ShortLoginShow';\nimport QRCodeShow from 'components/options/QRCodeShow';\nimport RescueCodesShow from 'components/options/RescueCodesShow';\nimport ChangePasswordShow from 'components/options/ChangePasswordShow';\nimport Title from 'components/utilities/Title';\nimport Checkbox from 'components/utilities/Checkbox';\nimport Input from 'components/utilities/Input';\nimport Button from 'components/utilities/Button';\n\nimport * as OptionsActions from 'slices/OptionsSlice';\n\nclass OptionsContainer extends Component {\n  static propTypes = {\n    options: PropTypes.object,\n    newPass: PropTypes.object,\n    isOnline: PropTypes.bool,\n    actions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChangeTimeToClose = this.onChangeTimeToClose.bind(this);\n    this.onChangeDefaultUsername = this.onChangeDefaultUsername.bind(this);\n    this.onSaveDefaultUsername = this.onSaveDefaultUsername.bind(this);\n    this.state = {\n      defaultUsername: props.options.defaultUsername,\n    };\n  }\n\n  onChangeDefaultUsername({ value }) {\n    this.setState({ defaultUsername: value });\n  }\n\n  onChangeTimeToClose({ value }) {\n    this.props.actions.changeTimeToClose({\n      timeToClose: value === '' ? -1 : parseInt(value, 10) || 0,\n    });\n  }\n\n  onSaveDefaultUsername() {\n    this.props.actions.changeDefaultUsername({\n      defaultUsername: this.state.defaultUsername,\n    });\n  }\n\n  render() {\n    const {\n      options,\n      isOnline,\n      options: { defaultUsername = '' },\n    } = this.props;\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/options/\" icon=\"gear\" title=\"Options\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Experience</h3>\n            <div className=\"options-section-item\">\n              <Input\n                name=\"defaultUsername\"\n                label=\"Default username\"\n                size=\"small\"\n                value={this.state.defaultUsername}\n                onChange={this.onChangeDefaultUsername}\n                disabled={!isOnline}\n              />\n              <div className=\"options-section-subitem-save\">\n                <Button\n                  type=\"button\"\n                  buttonStyle={\n                    this.state.defaultUsername === defaultUsername\n                      ? 'default'\n                      : 'primary'\n                  }\n                  onClick={this.onSaveDefaultUsername}\n                  size=\"small\"\n                  disabled={\n                    !isOnline || this.state.defaultUsername === defaultUsername\n                  }\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"options-section\">\n            <h3 className=\"options-section-title\">Security</h3>\n\n            <div className=\"options-section-item\">\n              <QRCodeShow />\n              <Checkbox\n                checked={options.totp}\n                onChange={this.props.actions.toggleTotp}\n                disabled={!isOnline}\n              >\n                Activate two-factor authentication\n              </Checkbox>\n              {options.totp && (\n                <div className=\"options-section-subitem\">\n                  <RescueCodesShow />\n                  <Button\n                    size=\"small\"\n                    buttonStyle=\"default\"\n                    onClick={this.props.actions.showRescueCodes}\n                  >\n                    Generate rescue Codes\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"options-section-item\">\n              <ShortLoginShow />\n              <Checkbox\n                checked={options.shortLogin}\n                onChange={this.props.actions.toggleShortLogin}\n                disabled={!isOnline}\n              >\n                Activate ShortLogin\n              </Checkbox>\n            </div>\n\n            <div className=\"options-section-item\">\n              <Checkbox\n                checked={options.timeToClose !== 0}\n                onChange={this.props.actions.toggleAutoLogout}\n                disabled={!isOnline}\n              >\n                Activate auto logout\n              </Checkbox>\n\n              {(options.timeToClose === -1 || options.timeToClose > 0) && (\n                <div className=\"options-section-subitem\">\n                  {'Disconnect me after '}\n                  <Input\n                    name=\"timeToClose\"\n                    label=\"\"\n                    size=\"small\"\n                    value={\n                      options.timeToClose === -1\n                        ? ''\n                        : options.timeToClose.toString()\n                    }\n                    onChange={this.onChangeTimeToClose}\n                    type=\"number\"\n                    inputProps={{\n                      min: 0,\n                      max: 60,\n                      step: 5,\n                    }}\n                    disabled={!isOnline}\n                  />\n                  <b> min</b>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"options-section\">\n            <div className=\"options-section-item\">\n              <ChangePasswordShow />\n              <Button\n                type=\"button\"\n                buttonStyle=\"warning\"\n                onClick={this.props.actions.showChangePassword}\n                disabled={!isOnline}\n              >\n                Change master password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(OptionsActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { options } = state.Options;\n  const { online } = state.AppUI;\n  return {\n    options,\n    isOnline: online,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n      <svg\n        className=\"spinner-svg\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          className=\"spinner-svg-path\"\n          fill=\"none\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext, DropTarget } from 'react-dnd';\nimport HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend';\n\nimport Icon from 'components/utilities/Icon';\n\nclass ImportFileChooser extends Component {\n  static propTypes = {\n    onFileChoosen: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n  }\n\n  handleFileInputChange(e) {\n    this.props.onFileChoosen(e.target.files[0]);\n  }\n\n  render() {\n    return this.props.connectDropTarget(\n      <div className=\"import-drop-zone\">\n        <Icon id=\"upload\" size={120} />\n        <div className=\"import-drop-zone-label\">\n          <input\n            id=\"import-drop-zone-input\"\n            className=\"import-drop-zone-input\"\n            type=\"file\"\n            onChange={this.handleFileInputChange}\n          />\n          <label htmlFor=\"import-drop-zone-input\">Choose a file</label>\n          <span> or drag it here.</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    props.onFileChoosen(monitor.getItem().files[0]);\n  },\n};\n\nfunction itemTargetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst ImportFileChooserTarget = new DropTarget(\n  NativeTypes.FILE,\n  itemTarget,\n  itemTargetCollect\n)(ImportFileChooser);\n\nexport default new DragDropContext(HTML5Backend)(ImportFileChooserTarget);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'components/utilities/Input';\n\nclass ImportMandatoryField extends Component {\n  static propTypes = {\n    field: PropTypes.object,\n    onChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ value }) {\n    const params = {\n      field: this.props.field,\n      value,\n    };\n\n    this.props.onChange(params);\n  }\n\n  render() {\n    return (\n      <Input\n        ref={ref => {\n          this.input = ref;\n        }}\n        label={this.props.field.name}\n        name={this.props.field.name}\n        value={this.props.field.value}\n        onChange={this.handleChange}\n        type={this.props.field.type}\n      />\n    );\n  }\n}\n\nexport default ImportMandatoryField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport ImportMandatoryField from './ImportMandatoryField';\n\nimport * as ImportActions from 'slices/ImportSlice';\n\nclass ImportersMandatoryFields extends Component {\n  static propTypes = {\n    mandatoryFields: PropTypes.object,\n    actions: PropTypes.object,\n  };\n\n  render() {\n    const keys = Object.keys(this.props.mandatoryFields);\n    const inputs = [];\n    keys.forEach(key => {\n      inputs.push(\n        <ImportMandatoryField\n          key={key}\n          field={this.props.mandatoryFields[key]}\n          onChange={this.props.actions.changeMandatoryField}\n        />\n      );\n    });\n    return <div>{inputs}</div>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(ImportActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const { mandatoryFields } = state.Import;\n  return {\n    mandatoryFields,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImportersMandatoryFields);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Title from 'components/utilities/Title';\nimport Button from 'components/utilities/Button';\nimport Icon from 'components/utilities/Icon';\nimport Spinner from 'components/utilities/Spinner';\n\nimport * as ImportActions from 'slices/ImportSlice';\nimport * as MetadataActions from 'slices/MetadataSlice';\n\nimport ImportFileChooser from './ImportFileChooser';\nimport ImportMandatoryFields from './ImportMandatoryFields';\n\nclass ImportContainer extends Component {\n  static propTypes = {\n    importType: PropTypes.string,\n    importing: PropTypes.bool,\n    importStatus: PropTypes.number,\n    importTotal: PropTypes.number,\n    success: PropTypes.bool,\n    file: PropTypes.string,\n    error: PropTypes.string,\n    mandatoryFields: PropTypes.object,\n    importActions: PropTypes.object,\n    metadataActions: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleFileChoosen = this.handleFileChoosen.bind(this);\n    this.handleStartParsing = this.handleStartParsing.bind(this);\n  }\n\n  handleFileChoosen(file) {\n    this.props.importActions.detectType({ file });\n  }\n\n  handleStartParsing() {\n    this.props.importActions.importSecrets({\n      file: this.props.file,\n      mandatoryFields: this.props.mandatoryFields,\n      type: this.props.importType,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      this.props.success !== true || nextProps.success !== this.props.success\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.success) {\n      this.props.metadataActions.loadMetadata();\n      setTimeout(() => {\n        this.props.importActions.defaultStore();\n      }, 1500);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-header\">\n          <div className=\"breadcrumb\">\n            <Title link=\"/import/\" icon=\"import\" title=\"Import\" />\n          </div>\n        </div>\n\n        <div className=\"page-content options\">\n          <span>\n            Supported type are <i>secret-in</i>, <i>keepass</i>\n          </span>\n          {((this.props.success || this.props.importing) &&\n            ((this.props.success && (\n              <div className=\"import-progress\">\n                <Icon id=\"done\" size={120} />\n                <div className=\"import-progress-title\">Done!</div>\n              </div>\n            )) || (\n              <div className=\"import-progress\">\n                <Spinner />\n                {this.props.importTotal !== 0 && (\n                  <div className=\"import-progress-title\">\n                    {`Importing... ${this.props.importStatus} / ${this.props.importTotal}`}\n                  </div>\n                )}\n              </div>\n            ))) || <ImportFileChooser onFileChoosen={this.handleFileChoosen} />}\n          {this.props.error !== '' && <span>{this.props.error.message}</span>}\n          {Object.keys(this.props.mandatoryFields).length > 0 && (\n            <ImportMandatoryFields\n              mandatoryFields={this.props.mandatoryFields}\n            />\n          )}\n          {this.props.importType !== '' && (\n            <Button\n              buttonStyle=\"primary\"\n              className=\"button button--style-default button--size-base\"\n              onClick={this.handleStartParsing}\n            >\n              Import from {this.props.importType}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  importActions: bindActionCreators(ImportActions, dispatch),\n  metadataActions: bindActionCreators(MetadataActions, dispatch),\n});\n\nconst mapStateToProps = state => {\n  const {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  } = state.Import;\n  return {\n    error,\n    importType,\n    importing,\n    importStatus,\n    importTotal,\n    success,\n    file,\n    mandatoryFields,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportContainer);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Sidebar from 'components/Sidebar';\nimport SecretShow from 'components/secrets/SecretShow';\nimport SecretListContainer from 'components/secrets/SecretListContainer';\nimport OptionsContainer from 'components/options/OptionsContainer';\nimport ImportContainer from 'components/import/ImportContainer';\n\nfunction Layout() {\n  return (\n    <div className=\"layout\">\n      <SecretShow />\n      <Sidebar />\n      <div className=\"layout-pane\">\n        <Switch>\n          <Route\n            path=\"/secrets/all\"\n            render={props => <SecretListContainer {...props} showAll />}\n          />\n          <Route\n            path=\"/secrets/mine\"\n            render={props => <SecretListContainer {...props} showMine />}\n          />\n          <Route\n            path=\"/secrets/shared\"\n            render={props => <SecretListContainer {...props} showShared />}\n          />\n          <Route\n            path=\"/secrets/:path*\"\n            render={props => <SecretListContainer {...props} />}\n          />\n          <Route path=\"/settings/\" component={OptionsContainer} />\n          <Route path=\"/import/\" component={ImportContainer} />\n          <Redirect to=\"/secrets/\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport secretin from 'utils/secretin';\n\nimport * as AppUIActions from 'slices/AppUISlice';\nimport { getSecretsInFolder } from 'selectors/MetadataSelectors';\nimport Footer from 'components/Footer';\n\nimport UserConnect from 'components/users/UserConnect';\nimport Layout from 'components/Layout';\n\nclass App extends Component {\n  static propTypes = {\n    savedUsername: PropTypes.string,\n    loading: PropTypes.bool,\n    connected: PropTypes.bool,\n    options: PropTypes.object,\n    errors: PropTypes.object,\n    dispatch: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.disconnectingEvent = null;\n\n    this.onAppFocus = this.onAppFocus.bind(this);\n    this.onAppBlur = this.onAppBlur.bind(this);\n    this.handleConnectionChange = this.handleConnectionChange.bind(this);\n\n    window.addEventListener('focus', this.onAppFocus);\n    window.addEventListener('blur', this.onAppBlur);\n  }\n\n  componentDidMount() {\n    secretin.addEventListener('connectionChange', this.handleConnectionChange);\n  }\n\n  componentWillUnmount() {\n    secretin.removeEventListener(\n      'connectionChange',\n      this.handleConnectionChange\n    );\n  }\n\n  handleConnectionChange({ connection }) {\n    this.props.dispatch(AppUIActions.connectionChange(connection));\n  }\n\n  onAppFocus() {\n    clearTimeout(this.disconnectingEvent);\n  }\n\n  onAppBlur() {\n    clearTimeout(this.disconnectingEvent);\n    const { connected, options } = this.props;\n\n    if (connected && options) {\n      if (options.timeToClose > 0) {\n        const delay = options.timeToClose * 60 * 1000;\n        this.disconnectingEvent = setTimeout(\n          () => window.location.reload(),\n          delay\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          {this.props.connected ? (\n            <Layout />\n          ) : (\n            <UserConnect\n              savedUsername={this.props.savedUsername}\n              loading={this.props.loading}\n              errors={this.props.errors}\n            />\n          )}\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { savedUsername, loading, errors, connected } = state.AppUI;\n  const secrets = getSecretsInFolder(state);\n  const { options } = state.Options;\n  return {\n    savedUsername,\n    loading,\n    errors,\n    connected,\n    secrets,\n    options,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable no-console */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './utils/wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { unregister } from 'utils/registerServiceWorker';\n\nimport store from 'stores/store';\nimport { Provider } from 'react-redux';\n\n// eslint-disable-next-line\nimport './index.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootEl\n);\nif (typeof window.process === 'undefined') {\n  unregister(); // Get rid of the service worker, we don't need it\n}\n\n// if (module.hot) {\n//   module.hot.accept('components/App', () => {\n//     // eslint-disable-next-line global-require\n//     const NextApp = require('components/App').default;\n\n//     ReactDOM.render(<NextApp />, rootEl);\n//   });\n// }\n"],"sourceRoot":""}